[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"[![CI Status](https://github.com/AY2021S2-TIC4002-F18-2/tp2/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-TIC4002-F18-2/tp2/actions)","lastModifiedDate":"2021-02-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"* This is **a project for TIC4002 students**.","lastModifiedDate":"2021-02-14"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"* This project is based on the AddressBook-Level3 project created by the **[SE-EDU initiative](https://se-education.org)**.","lastModifiedDate":"2021-02-14"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"* The project simulates a brownfield team project by using the existing AddressBook-Level3 codebase as a platform to develop **Employee Tracker**.","lastModifiedDate":"2021-02-19"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"  * It is **written in OOP fashion**.","lastModifiedDate":"2021-02-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"* For the detailed documentation of this project, see the **[Employee Tracker Product Website](https://ay2021s2-tic4002-f18-2.github.io/tp2/)**.","lastModifiedDate":"2021-02-19"}],"authorContributionMap":{"e0260222":6,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"mainClassName \u003d \u0027employeetracker.Main\u0027","lastModifiedDate":"2021-02-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"e0260222"},"content":"run {","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"e0260222"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"e0260222"},"content":"}","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"e0260222"},"content":"    archiveName \u003d \u0027employeetracker.jar\u0027","lastModifiedDate":"2021-02-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"e0260222":6,"-":70}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"### Chan Weizhong","lastModifiedDate":"2021-02-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"\u003cimg src\u003d\"images/e0260222.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":"[[github](https://github.com/e0260222)]","lastModifiedDate":"2021-02-14"},{"lineNumber":13,"author":{"gitId":"e0260222"},"content":"[[portfolio](team/e0260222.md)]","lastModifiedDate":"2021-02-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"e0260222"},"content":"### Lin Tong","lastModifiedDate":"2021-02-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"e0260222"},"content":"\u003cimg src\u003d\"images/dgc5213.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"e0260222"},"content":"[[github](http://github.com/dgc5213)]","lastModifiedDate":"2021-02-14"},{"lineNumber":22,"author":{"gitId":"e0260222"},"content":"[[portfolio](team/dgc5213.md)]","lastModifiedDate":"2021-02-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"e0260222"},"content":"### Dai Wei","lastModifiedDate":"2021-02-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"e0260222"},"content":"\u003cimg src\u003d\"images/daiweinus.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"e0260222"},"content":"[[github](http://github.com/daiweinus)]","lastModifiedDate":"2021-02-16"},{"lineNumber":31,"author":{"gitId":"e0260222"},"content":"[[portfolio](team/daiweinus.md)]","lastModifiedDate":"2021-02-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"e0260222"},"content":"### Chen Duo","lastModifiedDate":"2021-02-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"e0260222"},"content":"\u003cimg src\u003d\"images/chenduo1412.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"e0260222"},"content":"[[github](http://github.com/chenduo1412)]","lastModifiedDate":"2021-02-14"},{"lineNumber":40,"author":{"gitId":"e0260222"},"content":"[[portfolio](team/chenduo1412.md)]","lastModifiedDate":"2021-02-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"e0260222":16,"-":26}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App. Given below is a quick overview of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2020-06-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Each of the four components,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* exposes its functionality using a concrete `{Component Name}Manager` class (which implements the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"For example, the `Logic` component (see the class diagram given below) defines its API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class which implements the `Logic` interface.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"![Class Diagram of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"[`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* Executes user commands using the `Logic` component.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"* Listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"![Structure of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"[`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"1. `Logic` uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"1. This results in a `Command` object which is executed by the `LogicManager`.","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"e0260222"},"content":"1. The command execution can affect the `Model` (e.g. adding a employee).","lastModifiedDate":"2021-02-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"1. In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"![Structure of the Model Component](images/ModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"The `Model`,","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences.","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"* stores the address book data.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"* exposes an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components.","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique `Tag`, instead of each `Person` needing their own `Tag` object.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"![BetterModelClassDiagram](images/BetterModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"![Structure of the Storage Component](images/StorageClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* can save `UserPref` objects in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* can save the address book data in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"e0260222"},"content":"Step 2. The user executes `delete 5` command to delete the 5th employee in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2021-02-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"e0260222"},"content":"Step 3. The user executes `add n/David …​` to add a new employee. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2021-02-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"e0260222"},"content":"Step 4. The user now decides that adding the employee was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2021-02-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"![CommitActivityDiagram](images/CommitActivityDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"#### Design consideration:","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"##### Aspect: How undo \u0026 redo executes","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"e0260222"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the employee being deleted).","lastModifiedDate":"2021-02-27"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"dgc5213"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-03-15"},{"lineNumber":221,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":222,"author":{"gitId":"e0260222"},"content":"### Add feature","lastModifiedDate":"2021-03-18"},{"lineNumber":223,"author":{"gitId":"e0260222"},"content":"#### Implementation","lastModifiedDate":"2021-03-18"},{"lineNumber":224,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":225,"author":{"gitId":"e0260222"},"content":"The `add` command is implemented using the `AddCommand` class, which extends the `Command` class; and the `AddCommandParser` class, which implements the `Parser` class. Upon receiving a user command that has `add` as the first word, the following object interactions will occur, resulting in the instantiation of an `AddCommand` object:","lastModifiedDate":"2021-03-18"},{"lineNumber":226,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":227,"author":{"gitId":"e0260222"},"content":"1. `MainWindow` object calls `LogicManager#execute(commandText)`, where `commandText` is the user\u0027s input string;","lastModifiedDate":"2021-03-18"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"e0260222"},"content":"2. `LogicManager` object calls `EmployeeTrackerParser#parseCommand(commandText)` to parse the user command, where `commandText` is the user\u0027s input string;","lastModifiedDate":"2021-03-18"},{"lineNumber":230,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":231,"author":{"gitId":"e0260222"},"content":"3. `EmployeeTrackerParser#parseCommand()` calls AddCommandParser#parse(arguments), where `arguments` are the parameters in `commandText` such as `n/NAME` and `s/SALARY`;","lastModifiedDate":"2021-03-18"},{"lineNumber":232,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":233,"author":{"gitId":"e0260222"},"content":"4. AddCommandParser#parse() calls `AddCommand(employee)` to instantiate an `AddCommand` object, where `employee` is an `Employee` object that is constructed using `arguments`.","lastModifiedDate":"2021-03-18"},{"lineNumber":234,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":235,"author":{"gitId":"e0260222"},"content":"Next, the following object interactions will occur to save the new employee record to the `Model` object;","lastModifiedDate":"2021-03-18"},{"lineNumber":236,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":237,"author":{"gitId":"e0260222"},"content":"1. `LogicManager` object calls `AddCommand#execute(model)`, where `model` is the `Model` object;","lastModifiedDate":"2021-03-18"},{"lineNumber":238,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":239,"author":{"gitId":"e0260222"},"content":"2. `AddCommand#execute()` calls `Model#addEmployee(toAdd)` to add the new `employee`, where `toAdd` is the `Employee` object to be stored.","lastModifiedDate":"2021-03-18"},{"lineNumber":240,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":241,"author":{"gitId":"e0260222"},"content":"The following sequence diagram shows the object interactions when `LogicManager#execute(commandText)` is called:","lastModifiedDate":"2021-03-18"},{"lineNumber":242,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":243,"author":{"gitId":"e0260222"},"content":"![Object Interactions for `add` Command](images/AddSequenceDiagram.png)","lastModifiedDate":"2021-03-18"},{"lineNumber":244,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":245,"author":{"gitId":"e0260222"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `AddCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-03-18"},{"lineNumber":246,"author":{"gitId":"e0260222"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-18"},{"lineNumber":247,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":248,"author":{"gitId":"e0260222"},"content":"The following activity diagram shows what happens when a user executes an add command:","lastModifiedDate":"2021-03-18"},{"lineNumber":249,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":250,"author":{"gitId":"e0260222"},"content":"![Activity Diagram for `add` Command](images/AddActivityDiagram.png)","lastModifiedDate":"2021-03-18"},{"lineNumber":251,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":252,"author":{"gitId":"dgc5213"},"content":"### Find feature","lastModifiedDate":"2021-03-14"},{"lineNumber":253,"author":{"gitId":"dgc5213"},"content":"#### Implementation of find feature","lastModifiedDate":"2021-03-14"},{"lineNumber":254,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":255,"author":{"gitId":"dgc5213"},"content":"The find operation is implemented using `FindCommand`, which extends `Command`.","lastModifiedDate":"2021-03-14"},{"lineNumber":256,"author":{"gitId":"dgc5213"},"content":"Upon receiving an input string that has `find` as the fist word, the `Employee Tracker` object will instantiate an `FindCommand` object with the `fullCommand` string, which is the input entered by the user.","lastModifiedDate":"2021-03-14"},{"lineNumber":257,"author":{"gitId":"dgc5213"},"content":"The user is flexible to find the keywords by name, by role, by address, by date of birth, by phone number.","lastModifiedDate":"2021-03-23"},{"lineNumber":258,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":259,"author":{"gitId":"dgc5213"},"content":"* `find n/Alice`: find by name based on the keywords.","lastModifiedDate":"2021-03-23"},{"lineNumber":260,"author":{"gitId":"dgc5213"},"content":"* `find r/Developer`: find by role based on the keywords. ","lastModifiedDate":"2021-03-23"},{"lineNumber":261,"author":{"gitId":"dgc5213"},"content":"* `find a/Serangoon`: find by address based on the keywords.","lastModifiedDate":"2021-03-23"},{"lineNumber":262,"author":{"gitId":"dgc5213"},"content":"* `find b/1992-05-28`: find by date of birth based on the keywords.","lastModifiedDate":"2021-03-23"},{"lineNumber":263,"author":{"gitId":"dgc5213"},"content":"* `find p/910`: find by phone number based on the keywords with at least 3 digits long.","lastModifiedDate":"2021-03-23"},{"lineNumber":264,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":265,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":266,"author":{"gitId":"dgc5213"},"content":"These operations are exposed in the `FindCommand()` class.","lastModifiedDate":"2021-03-14"},{"lineNumber":267,"author":{"gitId":"dgc5213"},"content":"* Step 1: The user executes the find command.","lastModifiedDate":"2021-03-15"},{"lineNumber":268,"author":{"gitId":"dgc5213"},"content":"* Step 2: The FindCommand() class will check with NameContainsKeywordsPredicate in Model to see if match the user instruction keywords.","lastModifiedDate":"2021-03-15"},{"lineNumber":269,"author":{"gitId":"dgc5213"},"content":"* Step 3: Then check the keywords one by one and return matched Employee records.","lastModifiedDate":"2021-03-15"},{"lineNumber":270,"author":{"gitId":"dgc5213"},"content":"* Step 4: Create command result and display the matched Employee records to the user.","lastModifiedDate":"2021-03-15"},{"lineNumber":271,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":272,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":273,"author":{"gitId":"dgc5213"},"content":"The following sequence diagram shows how the find operation works:","lastModifiedDate":"2021-03-14"},{"lineNumber":274,"author":{"gitId":"dgc5213"},"content":"![SequenceDiagram_FindCommand](images/SequenceDiagram_FindCommand.png)","lastModifiedDate":"2021-03-15"},{"lineNumber":275,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":276,"author":{"gitId":"dgc5213"},"content":"The following activity diagram summarizes what happens when a user executes a find command:","lastModifiedDate":"2021-03-14"},{"lineNumber":277,"author":{"gitId":"dgc5213"},"content":"![ActivityDiagram_FindCommand](images/ActivityDiagram_FindCommand.png)","lastModifiedDate":"2021-03-15"},{"lineNumber":278,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":279,"author":{"gitId":"daiweinus"},"content":"### Sort feature","lastModifiedDate":"2021-03-23"},{"lineNumber":280,"author":{"gitId":"daiweinus"},"content":"#### Implementation of sort feature","lastModifiedDate":"2021-03-23"},{"lineNumber":281,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":282,"author":{"gitId":"daiweinus"},"content":"The `sort` command implemented using the `SortCommand` class, which extends the `Command` class, and the `sortCommandParser` class, which implements the `Parser\u003cSortCommand\u003e` class. Upon receiving an input string that has `sort` as the fist word, the `Employee Tracker` object will instantiate an `sortCommand` object with the `fullCommand` string, which is the input entered by the user. The user can sort the employee records by n, s, j, b.","lastModifiedDate":"2021-03-23"},{"lineNumber":283,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":284,"author":{"gitId":"daiweinus"},"content":"* `sort n` the employee records will be sorted based by name in alphabetical order.","lastModifiedDate":"2021-03-23"},{"lineNumber":285,"author":{"gitId":"daiweinus"},"content":"* `sort s` the employee records will be sorted based on salary in increasing order.","lastModifiedDate":"2021-03-23"},{"lineNumber":286,"author":{"gitId":"daiweinus"},"content":"* `sort j` the employee records will be sorted based on date of joining from the earliest date to the latest date.","lastModifiedDate":"2021-03-23"},{"lineNumber":287,"author":{"gitId":"daiweinus"},"content":"* `sort b` the employee records will be sorted based on date of birth from the earliest date to the latest date.","lastModifiedDate":"2021-03-23"},{"lineNumber":288,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":289,"author":{"gitId":"daiweinus"},"content":"These operations exposed in the `SortCommand()` class.","lastModifiedDate":"2021-03-23"},{"lineNumber":290,"author":{"gitId":"daiweinus"},"content":"* Step 1: The user executes `sort n` command to sort the employee records by name.","lastModifiedDate":"2021-03-23"},{"lineNumber":291,"author":{"gitId":"daiweinus"},"content":"* Step 2: The `LogicManager` object calls `EmployeeTrackerParser#parseCommand(commandText)` to parse the user command;","lastModifiedDate":"2021-03-23"},{"lineNumber":292,"author":{"gitId":"daiweinus"},"content":"* Step 3: The `EmployeeTrackerParser#parseCommand()` calls `sortCommandParser#parse(String args)`, where `args` is `n`;","lastModifiedDate":"2021-03-23"},{"lineNumber":293,"author":{"gitId":"daiweinus"},"content":"* Step 4: The `sortCommandParser#parse(args)` calls `sortCommand(args)` to instantiate an `sortCommand` object.","lastModifiedDate":"2021-03-23"},{"lineNumber":294,"author":{"gitId":"daiweinus"},"content":"* Step 5: The `sortCommand#execute()` calls `model#sortEmployee(sortField)` to sort employee records by name, where `sortField` is `n` .","lastModifiedDate":"2021-03-23"},{"lineNumber":295,"author":{"gitId":"daiweinus"},"content":"* Step 6: The `commandResult()` will feedback `MESSAGE_SORT_EMPLOYEE_SUCCESS` to user.","lastModifiedDate":"2021-03-23"},{"lineNumber":296,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":297,"author":{"gitId":"daiweinus"},"content":"The following sequence diagram shows how the sort operation works:","lastModifiedDate":"2021-03-23"},{"lineNumber":298,"author":{"gitId":"daiweinus"},"content":"![SequenceDiagram_SortCommand](images/SortSequenceDiagram.png)","lastModifiedDate":"2021-03-23"},{"lineNumber":299,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":300,"author":{"gitId":"daiweinus"},"content":"The following activity diagram summarizes what happens when a user executes a sort command:","lastModifiedDate":"2021-03-23"},{"lineNumber":301,"author":{"gitId":"daiweinus"},"content":"![ActivityDiagram_SortCommand](images/SortActivityDiagram.png)","lastModifiedDate":"2021-03-23"},{"lineNumber":302,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":304,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":309,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":310,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":311,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":312,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"e0260222"},"content":"**Target user profile**: This app is targeted towards small business owners who wish to keep track of employee data such as salary, role and days of leave taken.","lastModifiedDate":"2021-02-15"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"e0260222"},"content":"**Value proposition**: This app shall allow users to consolidate employee data on a single platform. This increases their productivity because they no longer need to access multiple data sources to retrieve/update employee data.","lastModifiedDate":"2021-02-15"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"| Priority | As a …​                                 | I want to …​                 | So that I can…​                                                    |","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"e0260222"},"content":"| -------- | ------------------------------------------ | ------------------------------- | --------------------------------------------------------------------- |","lastModifiedDate":"2021-02-24"},{"lineNumber":330,"author":{"gitId":"e0260222"},"content":"| `* * *`  | new user                                   | access a user manual            | learn how to use the available features                               |","lastModifiedDate":"2021-02-15"},{"lineNumber":331,"author":{"gitId":"e0260222"},"content":"| `* * *`  | user                                       | add an employee record          | keep track of the data of a particular employee                       |","lastModifiedDate":"2021-02-15"},{"lineNumber":332,"author":{"gitId":"e0260222"},"content":"| `* *  `  | user                                       | edit an employee record         | modify an employee record without having to delete and readd          |","lastModifiedDate":"2021-02-24"},{"lineNumber":333,"author":{"gitId":"e0260222"},"content":"| `* * *`  | user                                       | delete an employee record       | remove an employee record that I no longer need                       |","lastModifiedDate":"2021-02-15"},{"lineNumber":334,"author":{"gitId":"e0260222"},"content":"| `* * *`  | user                                       | list all employee records       | view all my employees\u0027 information                                    |","lastModifiedDate":"2021-02-24"},{"lineNumber":335,"author":{"gitId":"e0260222"},"content":"| `* *  `  | user                                       | clear all employee records      | start afresh with the app                                             |","lastModifiedDate":"2021-02-24"},{"lineNumber":336,"author":{"gitId":"dgc5213"},"content":"| `* * *`  | user                                       | find an employee record by name | look at the particular employee\u0027s information                         |","lastModifiedDate":"2021-02-28"},{"lineNumber":337,"author":{"gitId":"dgc5213"},"content":"| `* * *`  | user                                       | find employee records by role   | look at the information of the employees with this role                  |","lastModifiedDate":"2021-02-28"},{"lineNumber":338,"author":{"gitId":"dgc5213"},"content":"| `* * *`  | user                                       | find employee records by address   | look at the information of the employees with this address                  |","lastModifiedDate":"2021-03-23"},{"lineNumber":339,"author":{"gitId":"dgc5213"},"content":"| `* * *`  | user                                       | find employee records by date of birth   | look at the information of the employees with this date of birth                  |","lastModifiedDate":"2021-03-23"},{"lineNumber":340,"author":{"gitId":"dgc5213"},"content":"| `* * *`  | user                                       | find employee records by phone number   | look at the information of the employees with this phone number                  |","lastModifiedDate":"2021-03-23"},{"lineNumber":341,"author":{"gitId":"daiweinus"},"content":"| `* * *`  | user                                       | sort employee records by salary          | view the salary structure in my company                           |","lastModifiedDate":"2021-02-28"},{"lineNumber":342,"author":{"gitId":"daiweinus"},"content":"| `* * *`  | user                                       | sort employee records by name            | view employee records in alphabetical order                       |","lastModifiedDate":"2021-02-28"},{"lineNumber":343,"author":{"gitId":"daiweinus"},"content":"| `* * *`  | user                                       | sort employee records by date of joining | find the employees who stayed the shortest/longest in the company |","lastModifiedDate":"2021-02-28"},{"lineNumber":344,"author":{"gitId":"daiweinus"},"content":"| `* * *`  | user                                       | sort employee records by date of birth   | find the youngest/oldest employees in the company                 |","lastModifiedDate":"2021-02-28"},{"lineNumber":345,"author":{"gitId":"daiweinus"},"content":"| `* * *`  | user                                       | list all employee records      | view all my employees\u0027 information                                     |","lastModifiedDate":"2021-02-28"},{"lineNumber":346,"author":{"gitId":"Chenduo1412"},"content":"| `* * *`  | user                                       | view summary statistics     | obtain a basic overview of my workforce                                   |","lastModifiedDate":"2021-03-03"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"e0260222"},"content":"(For all use cases below, the **System** is the `Employee Tracker` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-02-19"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"e0260222"},"content":"**Use case: Add an employee record**","lastModifiedDate":"2021-02-15"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-02-28"},{"lineNumber":357,"author":{"gitId":"e0260222"},"content":"1. User enters new employee record.","lastModifiedDate":"2021-02-15"},{"lineNumber":358,"author":{"gitId":"e0260222"},"content":"2. Employee Tracker displays a success message together with the updated list of employee records.\u003cbr\u003e","lastModifiedDate":"2021-02-19"},{"lineNumber":359,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"e0260222"},"content":"* 1a. The command entered is in the wrong format.","lastModifiedDate":"2021-02-15"},{"lineNumber":363,"author":{"gitId":"e0260222"},"content":"    * 1a1. Employee Tracker shows an error message.\u003cbr\u003e","lastModifiedDate":"2021-02-19"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2021-02-15"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"e0260222"},"content":"**Use case: Delete an employee record**","lastModifiedDate":"2021-02-15"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"e0260222"},"content":"**MSS**","lastModifiedDate":"2021-02-15"},{"lineNumber":369,"author":{"gitId":"e0260222"},"content":"1. User requests to list employee records.","lastModifiedDate":"2021-02-15"},{"lineNumber":370,"author":{"gitId":"e0260222"},"content":"2. Employee Tracker displays a list of all employee records.","lastModifiedDate":"2021-02-19"},{"lineNumber":371,"author":{"gitId":"e0260222"},"content":"3. User requests to delete a specific employee record in the list.","lastModifiedDate":"2021-02-15"},{"lineNumber":372,"author":{"gitId":"e0260222"},"content":"4. Employee Tracker deletes this employee record.\u003cbr\u003e","lastModifiedDate":"2021-02-19"},{"lineNumber":373,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"e0260222"},"content":"**Extensions**","lastModifiedDate":"2021-02-15"},{"lineNumber":376,"author":{"gitId":"e0260222"},"content":"* 2a. The list is empty\u003cbr\u003e","lastModifiedDate":"2021-02-15"},{"lineNumber":377,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2021-02-15"},{"lineNumber":378,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-02-15"},{"lineNumber":380,"author":{"gitId":"e0260222"},"content":"    * 3a1. Employee Tracker shows an error message.\u003cbr\u003e","lastModifiedDate":"2021-02-19"},{"lineNumber":381,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"dgc5213"},"content":"**Use case: Find an employee record by name**","lastModifiedDate":"2021-02-28"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":385,"author":{"gitId":"dgc5213"},"content":"**MSS**","lastModifiedDate":"2021-02-28"},{"lineNumber":386,"author":{"gitId":"dgc5213"},"content":"1. User requests to find employee records by name.","lastModifiedDate":"2021-02-28"},{"lineNumber":387,"author":{"gitId":"dgc5213"},"content":"2. Employee Tracker displays a success message together with the matched employee records.\u003cbr\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":388,"author":{"gitId":"dgc5213"},"content":"   Use case ends.","lastModifiedDate":"2021-02-28"},{"lineNumber":389,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":390,"author":{"gitId":"dgc5213"},"content":"**Extensions**","lastModifiedDate":"2021-02-28"},{"lineNumber":391,"author":{"gitId":"dgc5213"},"content":"* 4a. The command entered is in the wrong format.","lastModifiedDate":"2021-02-28"},{"lineNumber":392,"author":{"gitId":"dgc5213"},"content":"    * 4a1. Employee Tracker shows an error message.\u003cbr\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":393,"author":{"gitId":"dgc5213"},"content":"      Use case ends.","lastModifiedDate":"2021-02-28"},{"lineNumber":394,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":395,"author":{"gitId":"dgc5213"},"content":"**Use case: Find employee records by role**","lastModifiedDate":"2021-02-28"},{"lineNumber":396,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":397,"author":{"gitId":"dgc5213"},"content":"**MSS**","lastModifiedDate":"2021-02-28"},{"lineNumber":398,"author":{"gitId":"dgc5213"},"content":"1. User requests to find employee records by role.","lastModifiedDate":"2021-02-28"},{"lineNumber":399,"author":{"gitId":"dgc5213"},"content":"2. Employee Tracker displays a success message together with the matched employee records.\u003cbr\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":400,"author":{"gitId":"dgc5213"},"content":"   Use case ends.","lastModifiedDate":"2021-02-28"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":402,"author":{"gitId":"dgc5213"},"content":"**Extensions**","lastModifiedDate":"2021-02-28"},{"lineNumber":403,"author":{"gitId":"dgc5213"},"content":"* 5a. The command entered is in the wrong format.","lastModifiedDate":"2021-02-28"},{"lineNumber":404,"author":{"gitId":"dgc5213"},"content":"    * 5a1. Employee Tracker shows an error message.\u003cbr\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":405,"author":{"gitId":"dgc5213"},"content":"      Use case ends.","lastModifiedDate":"2021-02-28"},{"lineNumber":406,"author":{"gitId":"dgc5213"},"content":"      ","lastModifiedDate":"2021-02-28"},{"lineNumber":407,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":410,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"e0260222"},"content":"1. The app should work on any mainstream OS with Java `11` or above installed.","lastModifiedDate":"2021-02-15"},{"lineNumber":413,"author":{"gitId":"e0260222"},"content":"2. The response time for each command should not exceed `3` seconds.","lastModifiedDate":"2021-02-15"},{"lineNumber":414,"author":{"gitId":"e0260222"},"content":"3. A user with average typing speed should be able to enter any one command within `12` seconds.","lastModifiedDate":"2021-02-15"},{"lineNumber":415,"author":{"gitId":"e0260222"},"content":"4. After using each command for at least `5` times, a user with no cognitive disability should be able to","lastModifiedDate":"2021-02-15"},{"lineNumber":416,"author":{"gitId":"e0260222"},"content":"   use all the app features without having to reference the user guide.","lastModifiedDate":"2021-02-15"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"e0260222"},"content":"* *Mainstream OS* - Windows 7, Windows 10, Linux, Unix, OS-X","lastModifiedDate":"2021-02-15"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"e0260222"},"content":"### Deleting a employee","lastModifiedDate":"2021-02-27"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"e0260222"},"content":"1. Deleting a employee while all employees are being shown","lastModifiedDate":"2021-02-27"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"e0260222"},"content":"   1. Prerequisites: List all employees using the `list` command. Multiple employees in the list.","lastModifiedDate":"2021-02-27"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"e0260222"},"content":"      Expected: No employee is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-02-27"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"daiweinus":24,"dgc5213":65,"e0260222":65,"Chenduo1412":1,"-":320}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"The Employee Tracker allows small business owners to keep track of their employees information using a single platform instead of having to deal with multiple data management tools.","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"Through a simple and intuitive graphical user interface, business owners can record and view their employees\u0027 information.","lastModifiedDate":"2021-02-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"e0260222"},"content":"2. Download the latest `employeetracker.jar` [here](https://github.com/AY2021S2-TIC4002-F18-2/tp2/releases).","lastModifiedDate":"2021-02-19"},{"lineNumber":18,"author":{"gitId":"e0260222"},"content":"3. Copy `employeetracker.jar` to the folder you want to use as the home folder for Employee Tracker.","lastModifiedDate":"2021-02-19"},{"lineNumber":19,"author":{"gitId":"e0260222"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"e0260222"},"content":"6. Type the command in the command box and press `Enter` to execute it.","lastModifiedDate":"2021-03-20"},{"lineNumber":22,"author":{"gitId":"e0260222"},"content":"   \u003cbr\u003eSome example commands you can try:","lastModifiedDate":"2021-02-15"},{"lineNumber":23,"author":{"gitId":"e0260222"},"content":"    - `add n/Rachel Lee r/Designer p/91648917 e/rachel@f18tech.com.sg a/BLK 730 Woodlands Road #15-150 b/1988-01-02 j/2020-09-01 s/8000 t/Founder t/l33tCoder`: Adds an employee record.","lastModifiedDate":"2021-03-06"},{"lineNumber":24,"author":{"gitId":"e0260222"},"content":"    - `list`: Lists all employee records.","lastModifiedDate":"2021-02-15"},{"lineNumber":25,"author":{"gitId":"e0260222"},"content":"    - `delete 3`: Deletes the 3rd employee record shown in the current list.","lastModifiedDate":"2021-02-15"},{"lineNumber":26,"author":{"gitId":"e0260222"},"content":"    - `sort n`: Sorts all employee records based on `Name` in alphabetical order.","lastModifiedDate":"2021-02-15"},{"lineNumber":27,"author":{"gitId":"e0260222"},"content":"    - `find n/Rachel`: Finds all employee records with `Rachel` in its `Name` field.","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"e0260222"},"content":"    - `stats`: Shows summary statistics of employees.","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"e0260222"},"content":"7. Refer to **Features** below for details of each command.","lastModifiedDate":"2021-02-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"e0260222"},"content":"  E.g. The parameter `INDEX` in the command `delete INDEX`.","lastModifiedDate":"2021-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"e0260222"},"content":"* Parameters in square brackets are optional.","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"e0260222"},"content":"  E.g. The parameter `[s/SALARY]` in `edit INDEX [n/NAME] [r/ROLE] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [b/DATE_OF_BIRTH] [j/DATE_OF_JOINING] [s/SALARY] [t/TAG]…`","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"e0260222"},"content":"  ","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"e0260222"},"content":"* Parameters with `…` after them can be included multiple times.\u003cbr\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"e0260222"},"content":"  E.g. The parameter `KEYWORD` in the command `find TYPE/KEYWORD…`.","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"e0260222"},"content":"  E.g. The command `add` requires a few parameters such as `n/NAME`, `e/EMAIL` and `r/ROLE`. Placing these parameters in any order is acceptable.","lastModifiedDate":"2021-02-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"e0260222"},"content":"* If a parameter is expected only once in the command but is specified multiple times, only the last occurrence of this parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-15"},{"lineNumber":52,"author":{"gitId":"e0260222"},"content":"  E.g. If `n/John Lam n/John Lee` is specified in the `add` command, only `n/John Lee` will be taken.","lastModifiedDate":"2021-02-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":54,"author":{"gitId":"e0260222"},"content":"* Unneeded parameters for commands that do not take in parameters (such as `help`, `list`, `exit` , `stats` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"e0260222"},"content":"  E.g. The command `help 123` will be interpreted as `help`.","lastModifiedDate":"2021-02-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"e0260222"},"content":"Shows the URL of the user manual.","lastModifiedDate":"2021-02-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2021-03-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2021-03-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":67,"author":{"gitId":"e0260222"},"content":"### Adding an employee record: `add`","lastModifiedDate":"2021-02-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"e0260222"},"content":"Adds an employee record to the Employee Tracker.","lastModifiedDate":"2021-02-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"e0260222"},"content":"Format: `add n/NAME r/ROLE p/PHONE_NUMBER e/EMAIL a/ADDRESS b/DATE_OF_BIRTH j/DATE_OF_JOINING s/SALARY [t/TAG]…`","lastModifiedDate":"2021-03-08"},{"lineNumber":72,"author":{"gitId":"e0260222"},"content":"* `NAME` must only contain alphanumeric characters and spaces. E.g. `John Doe`.","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"e0260222"},"content":"* `PHONE_NUMBER` must be a number that is at least 3-digit long. E.g. `98714821`, `67617361`.","lastModifiedDate":"2021-03-06"},{"lineNumber":74,"author":{"gitId":"e0260222"},"content":"* `EMAIL` must be in local-part@domain format. E.g. `andy@f18tech.com.sg`.","lastModifiedDate":"2021-03-06"},{"lineNumber":75,"author":{"gitId":"e0260222"},"content":"* `DATE_OF_BIRTH` must be in yyyy-MM-dd format. E.g. `1990-12-25`.","lastModifiedDate":"2021-02-15"},{"lineNumber":76,"author":{"gitId":"e0260222"},"content":"* `DATE_OF_JOINING` must be in yyyy-MM-dd format. E.g. `2020-09-01`.","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"e0260222"},"content":"* `SALARY` must be a positive integer. E.g. `4000`, `3000`.","lastModifiedDate":"2021-03-06"},{"lineNumber":78,"author":{"gitId":"e0260222"},"content":"* `TAG` must be alphanumeric. E.g. `Founder`, `l33tCoder`.","lastModifiedDate":"2021-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"e0260222"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Note:**","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"e0260222"},"content":"All employee records must have a unique combination of name and date of birth.","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"e0260222"},"content":"A new employee record will not be added if there is an existing employee record with the same name and date of birth.","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"e0260222"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2021-03-22"},{"lineNumber":86,"author":{"gitId":"e0260222"},"content":"An employee record can have any number of tags (including 0).","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":89,"author":{"gitId":"e0260222"},"content":"Example of usage:","lastModifiedDate":"2021-02-15"},{"lineNumber":90,"author":{"gitId":"e0260222"},"content":"* `add n/Rachel Lee r/Designer p/91648917 e/rachel@f18tech.com.sg a/BLK 730 Woodlands Road #15-150 b/1988-01-02 j/2020-09-01 s/8000 t/Founder t/l33tCoder`","lastModifiedDate":"2021-03-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":92,"author":{"gitId":"Chenduo1412"},"content":"### Listing all employee records：`list`","lastModifiedDate":"2021-02-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-17"},{"lineNumber":94,"author":{"gitId":"e0260222"},"content":"Lists all the employee records in the Employee Tracker.","lastModifiedDate":"2021-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2021-03-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":98,"author":{"gitId":"e0260222"},"content":"### Editing an employee record：`edit`","lastModifiedDate":"2021-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":100,"author":{"gitId":"e0260222"},"content":"Edits an employee record in the Employee Tracker.","lastModifiedDate":"2021-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":102,"author":{"gitId":"e0260222"},"content":"Format: `edit INDEX [n/NAME] [r/ROLE] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [b/DATE_OF_BIRTH] [j/DATE_OF_JOINING] [s/SALARY] [t/TAG]…`","lastModifiedDate":"2021-03-08"},{"lineNumber":103,"author":{"gitId":"e0260222"},"content":"* `INDEX` refers to the index number shown in the list of employee records.","lastModifiedDate":"2021-03-08"},{"lineNumber":104,"author":{"gitId":"e0260222"},"content":"* `INDEX` must a positive integer. E.g. `1`, `2`, `3`…","lastModifiedDate":"2021-03-08"},{"lineNumber":105,"author":{"gitId":"e0260222"},"content":"* At least one of the optional parameters must be provided.","lastModifiedDate":"2021-03-08"},{"lineNumber":106,"author":{"gitId":"e0260222"},"content":"* The employee record indicated by the index number will be edited.","lastModifiedDate":"2021-03-08"},{"lineNumber":107,"author":{"gitId":"e0260222"},"content":"* `NAME` must only contain alphanumeric characters and spaces. E.g. `John Doe`.","lastModifiedDate":"2021-03-29"},{"lineNumber":108,"author":{"gitId":"e0260222"},"content":"* `PHONE_NUMBER` must be a number that is at least 3-digit long. E.g. `98714821`, `67617361`.","lastModifiedDate":"2021-03-08"},{"lineNumber":109,"author":{"gitId":"e0260222"},"content":"* `EMAIL` must be in local-part@domain format. E.g. `andy@f18tech.com.sg`.","lastModifiedDate":"2021-03-08"},{"lineNumber":110,"author":{"gitId":"e0260222"},"content":"* `DATE_OF_BIRTH` must be in yyyy-MM-dd format. E.g. `1990-12-25`.","lastModifiedDate":"2021-03-08"},{"lineNumber":111,"author":{"gitId":"e0260222"},"content":"* `DATE_OF_JOINING` must be in yyyy-MM-dd format. E.g. `2020-09-01`.","lastModifiedDate":"2021-03-29"},{"lineNumber":112,"author":{"gitId":"e0260222"},"content":"* `SALARY` must be a positive integer. E.g. `4000`, `3000`.","lastModifiedDate":"2021-03-08"},{"lineNumber":113,"author":{"gitId":"e0260222"},"content":"* `TAG` must be alphanumeric. E.g. `Founder`, `l33tCoder`.","lastModifiedDate":"2021-03-08"},{"lineNumber":114,"author":{"gitId":"e0260222"},"content":"* All existing tags for this employee record will be removed if `TAG` is not provided in the `[t/TAG]` parameter. E.g. `edit 1 t/`.","lastModifiedDate":"2021-03-08"},{"lineNumber":115,"author":{"gitId":"e0260222"},"content":"* Editing tags will remove all existing tags for this employee record. E.g. If an employee record 1 has tags `Mentor` and `l33tCoder`, `edit 1 t/WiseGuy` will result in this employee record only having the tag `WiseGuy`.","lastModifiedDate":"2021-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":117,"author":{"gitId":"e0260222"},"content":"Example of usage:","lastModifiedDate":"2021-03-08"},{"lineNumber":118,"author":{"gitId":"e0260222"},"content":"* `edit 1 p/91821748 s/8000 t/Mentor t/l33tCoder`","lastModifiedDate":"2021-03-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":120,"author":{"gitId":"e0260222"},"content":"### Deleting an employee record : `delete`","lastModifiedDate":"2021-02-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"e0260222"},"content":"Deletes the specified employee from the Employee Tracker.","lastModifiedDate":"2021-02-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"e0260222"},"content":"* `INDEX` refers to the index number shown in the list of employee records.","lastModifiedDate":"2021-03-08"},{"lineNumber":126,"author":{"gitId":"e0260222"},"content":"* `INDEX` must a positive integer. E.g. `1`, `2`, `3`…","lastModifiedDate":"2021-03-08"},{"lineNumber":127,"author":{"gitId":"e0260222"},"content":"* The employee record indicated by the index number will be deleted.","lastModifiedDate":"2021-02-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"e0260222"},"content":"Examples of usage:","lastModifiedDate":"2021-02-15"},{"lineNumber":130,"author":{"gitId":"e0260222"},"content":"* `list` followed by `delete 2` deletes the 2nd employee record shown in the list of employee records.","lastModifiedDate":"2021-03-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":132,"author":{"gitId":"dgc5213"},"content":"* `find n/Rachel` followed by `delete 1` deletes the 1st employee record in the list generated by the `find` command.","lastModifiedDate":"2021-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"daiweinus"},"content":"### Sorting employee records: `sort`","lastModifiedDate":"2021-03-24"},{"lineNumber":135,"author":{"gitId":"daiweinus"},"content":"Sorts the list of employee records in the Employee Tracker.","lastModifiedDate":"2021-02-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-16"},{"lineNumber":137,"author":{"gitId":"daiweinus"},"content":"Format: `sort TYPE`","lastModifiedDate":"2021-02-16"},{"lineNumber":138,"author":{"gitId":"daiweinus"},"content":"* `TYPE` must be the letter n, s, j or b.","lastModifiedDate":"2021-03-14"},{"lineNumber":139,"author":{"gitId":"daiweinus"},"content":"* If `TYPE` is n, the employee records will be sorted based on name in alphabetical order.","lastModifiedDate":"2021-02-16"},{"lineNumber":140,"author":{"gitId":"daiweinus"},"content":"* If `TYPE` is s, the employee records will be sorted based on salary in increasing order.","lastModifiedDate":"2021-02-16"},{"lineNumber":141,"author":{"gitId":"daiweinus"},"content":"* If `TYPE` is j, the employee records will be sorted based on date of joining from the earliest date to the latest date.","lastModifiedDate":"2021-03-14"},{"lineNumber":142,"author":{"gitId":"daiweinus"},"content":"* If `TYPE` is b, the employee records will be sorted based on date of birth from the earliest date to the latest date.","lastModifiedDate":"2021-02-16"},{"lineNumber":143,"author":{"gitId":"daiweinus"},"content":"* The `TYPE` is case-insensitive. E.g. sort type `N` will match `n`.","lastModifiedDate":"2021-03-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-16"},{"lineNumber":145,"author":{"gitId":"daiweinus"},"content":"Example of usage:","lastModifiedDate":"2021-02-16"},{"lineNumber":146,"author":{"gitId":"daiweinus"},"content":"* `sort n`","lastModifiedDate":"2021-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-15"},{"lineNumber":148,"author":{"gitId":"dgc5213"},"content":"### Finding employee records : `find`","lastModifiedDate":"2021-02-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-15"},{"lineNumber":150,"author":{"gitId":"dgc5213"},"content":"Finds employee records that have any of the given keywords in their name/role/address/date of birth/phone number.","lastModifiedDate":"2021-03-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-15"},{"lineNumber":152,"author":{"gitId":"dgc5213"},"content":"Format: `find TYPE/KEYWORD…`","lastModifiedDate":"2021-03-14"},{"lineNumber":153,"author":{"gitId":"dgc5213"},"content":"* `TYPE` must be the letter `n` or `r` or `a` or `b` or `p`.","lastModifiedDate":"2021-03-23"},{"lineNumber":154,"author":{"gitId":"dgc5213"},"content":"* If `TYPE` is `n`, the search will be based on name.","lastModifiedDate":"2021-03-16"},{"lineNumber":155,"author":{"gitId":"dgc5213"},"content":"* If `TYPE` is `r`, the search will be based on role.","lastModifiedDate":"2021-03-16"},{"lineNumber":156,"author":{"gitId":"dgc5213"},"content":"* If `TYPE` is `a`, the search will be based on address.","lastModifiedDate":"2021-03-23"},{"lineNumber":157,"author":{"gitId":"dgc5213"},"content":"* If `TYPE` is `b`, the search will be based on date of birth.","lastModifiedDate":"2021-03-23"},{"lineNumber":158,"author":{"gitId":"dgc5213"},"content":"* If `TYPE` is `p`, the search will be based on phone number.","lastModifiedDate":"2021-03-23"},{"lineNumber":159,"author":{"gitId":"dgc5213"},"content":"* The search is case-insensitive. E.g. keyword `john` will match `John`.","lastModifiedDate":"2021-02-15"},{"lineNumber":160,"author":{"gitId":"dgc5213"},"content":"* Only exact words will be matched. E.g. keyword `Jon` will not match `John`.","lastModifiedDate":"2021-02-15"},{"lineNumber":161,"author":{"gitId":"dgc5213"},"content":"* Exception for the phone number search, it allows a partial match of value at least 3 digits long.","lastModifiedDate":"2021-03-23"},{"lineNumber":162,"author":{"gitId":"dgc5213"},"content":"* Employee records matching at least one keyword will be returned. E.g. keywords `John Wong` will return `John Lam` and `Bernice Wong`.","lastModifiedDate":"2021-02-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-15"},{"lineNumber":164,"author":{"gitId":"dgc5213"},"content":"Examples of usage:","lastModifiedDate":"2021-02-15"},{"lineNumber":165,"author":{"gitId":"dgc5213"},"content":"* `find n/David Bernice`","lastModifiedDate":"2021-03-25"},{"lineNumber":166,"author":{"gitId":"dgc5213"},"content":"  ![result for \u0027n/David Bernice\u0027](images/findDavidBerniceResult.png)","lastModifiedDate":"2021-03-22"},{"lineNumber":167,"author":{"gitId":"dgc5213"},"content":"* `find r/Developer`","lastModifiedDate":"2021-03-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-15"},{"lineNumber":169,"author":{"gitId":"e0260222"},"content":"### Clearing all employee records : `clear`","lastModifiedDate":"2021-02-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"e0260222"},"content":"Clears all employee records from the Employee Tracker.","lastModifiedDate":"2021-02-19"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"Chenduo1412"},"content":"### Viewing summary statistics : `stats`","lastModifiedDate":"2021-03-05"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":177,"author":{"gitId":"Chenduo1412"},"content":"Shows summary statistics of employees including:","lastModifiedDate":"2021-03-24"},{"lineNumber":178,"author":{"gitId":"Chenduo1412"},"content":"* Total employees.","lastModifiedDate":"2021-03-24"},{"lineNumber":179,"author":{"gitId":"Chenduo1412"},"content":"* Total salary.","lastModifiedDate":"2021-03-24"},{"lineNumber":180,"author":{"gitId":"Chenduo1412"},"content":"* Highest, lowest and average salary.","lastModifiedDate":"2021-03-24"},{"lineNumber":181,"author":{"gitId":"Chenduo1412"},"content":"* Longest, shortest and average tenure.","lastModifiedDate":"2021-03-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":183,"author":{"gitId":"Chenduo1412"},"content":"![result for \u0027stats\u0027](images/showStats.png)","lastModifiedDate":"2021-03-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":185,"author":{"gitId":"Chenduo1412"},"content":"Format: `stats`","lastModifiedDate":"2021-03-05"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":187,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"e0260222"},"content":"Exits the Employee Tracker app.","lastModifiedDate":"2021-02-19"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"e0260222"},"content":"There is no save command because any change to the data in the Employee Tracker will be automatically saved.","lastModifiedDate":"2021-02-19"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"e0260222"},"content":"**Q**:","lastModifiedDate":"2021-02-15"},{"lineNumber":202,"author":{"gitId":"e0260222"},"content":"How do I transfer my data to another computer?","lastModifiedDate":"2021-02-15"},{"lineNumber":203,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-15"},{"lineNumber":204,"author":{"gitId":"e0260222"},"content":"**A**:","lastModifiedDate":"2021-02-15"},{"lineNumber":205,"author":{"gitId":"e0260222"},"content":"Go to the Employee Tracker\u0027s root folder in the current computer.","lastModifiedDate":"2021-02-19"},{"lineNumber":206,"author":{"gitId":"e0260222"},"content":"Copy the data folder and paste it into the Employee Tracker\u0027s root folder in the new computer.","lastModifiedDate":"2021-02-19"},{"lineNumber":207,"author":{"gitId":"e0260222"},"content":"Click `Yes` if the system prompts you for confirmation of overwriting.","lastModifiedDate":"2021-02-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"dgc5213"},"content":"**Add** | `add n/NAME e/EMAIL r/ROLE a/ADDRESS c/CONTACT_NUMBER s/SALARY d/DATE_OF_EMPLOYMENT b/DATE_OF_BIRTH` \u003cbr\u003e E.g. `add n/Rachel Lee e/rachel@f18solutions.com.sg r/Designer a/BLK 730 Woodlands Road #15-150 c/91648917 d/2020-09-01 b/1988-01-02`","lastModifiedDate":"2021-03-14"},{"lineNumber":217,"author":{"gitId":"Chenduo1412"},"content":"**List** | `list`","lastModifiedDate":"2021-02-17"},{"lineNumber":218,"author":{"gitId":"e0260222"},"content":"**Edit** | `edit INDEX [n/NAME] [r/ROLE] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [b/DATE_OF_BIRTH] [j/DATE_OF_JOINING] [s/SALARY] [t/TAG]…` \u003cbr\u003e E.g. `edit 1 p/91821748 s/8000 t/Mentor t/l33tCoder`","lastModifiedDate":"2021-03-08"},{"lineNumber":219,"author":{"gitId":"daiweinus"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e E.g. `delete 2`","lastModifiedDate":"2021-03-14"},{"lineNumber":220,"author":{"gitId":"daiweinus"},"content":"**Sort** | `sort TYPE` \u003cbr\u003e E.g. `sort j`","lastModifiedDate":"2021-03-14"},{"lineNumber":221,"author":{"gitId":"dgc5213"},"content":"**Find** | `find TYPE/KEYWORD`\u003cbr\u003e E.g. `find n/John Bernice Andy`, `find r/Developer`, `find a/Serangoon`, `find b/1992-05-28`, `find p/910`","lastModifiedDate":"2021-03-23"},{"lineNumber":222,"author":{"gitId":"Chenduo1412"},"content":"**Stats** | `stats`","lastModifiedDate":"2021-03-24"},{"lineNumber":223,"author":{"gitId":"e0260222"},"content":"**Clear** | `clear`","lastModifiedDate":"2021-02-15"}],"authorContributionMap":{"daiweinus":13,"dgc5213":20,"e0260222":82,"Chenduo1412":11,"-":97}},{"path":"docs/diagrams/AddActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"@startuml","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"e0260222"},"content":"start","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":":User executes add command;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"if () then ([Valid add command format])","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"    if () then ([Employee name does not exist in model])","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"        :Adds employee to model;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"        :Displays information of newly-added employee;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"    else ([Else])","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"        :Displays \"Duplicated Employee\" error message;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"    endif","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"else ([Else])","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":"    :Displays \"Invalid Command\" error message;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"e0260222"},"content":"endif","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"e0260222"},"content":"stop","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"e0260222"},"content":"@enduml","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"e0260222":15}},{"path":"docs/diagrams/AddSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"@startuml","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"e0260222"},"content":"!include style.puml","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"participant \":EmployeeTrackerParser\" as EmployeeTrackerParser LOGIC_COLOR","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"participant \":AddCommandParser\" as AddCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"participant \"a:AddCommand\" as AddCommand LOGIC_COLOR","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"end box","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"e0260222"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"e0260222"},"content":"end box","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"e0260222"},"content":"[-\u003e LogicManager : execute(\"add n/John Doe…\")","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"e0260222"},"content":"activate LogicManager","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"e0260222"},"content":"LogicManager -\u003e EmployeeTrackerParser : parseCommand(\"add n/John Doe…\")","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"e0260222"},"content":"activate EmployeeTrackerParser","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"e0260222"},"content":"create AddCommandParser","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"e0260222"},"content":"EmployeeTrackerParser -\u003e AddCommandParser","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"e0260222"},"content":"activate AddCommandParser","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"e0260222"},"content":"AddCommandParser --\u003e EmployeeTrackerParser","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"e0260222"},"content":"deactivate AddCommandParser","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"e0260222"},"content":"EmployeeTrackerParser -\u003e AddCommandParser : parse(\"n/John Doe…\")","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"e0260222"},"content":"activate AddCommandParser","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"e0260222"},"content":"create AddCommand","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"e0260222"},"content":"AddCommandParser -\u003e AddCommand","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"e0260222"},"content":"activate AddCommand","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"e0260222"},"content":"AddCommand --\u003e AddCommandParser : a","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"e0260222"},"content":"deactivate AddCommand","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"e0260222"},"content":"AddCommandParser --\u003e EmployeeTrackerParser : a","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"e0260222"},"content":"deactivate AddCommandParser","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"e0260222"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"e0260222"},"content":"AddCommandParser -[hidden]-\u003e EmployeeTrackerParser","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"e0260222"},"content":"destroy AddCommandParser","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"e0260222"},"content":"EmployeeTrackerParser --\u003e LogicManager : a","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"e0260222"},"content":"deactivate EmployeeTrackerParser","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"e0260222"},"content":"LogicManager -\u003e AddCommand : execute()","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"e0260222"},"content":"activate AddCommand","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"e0260222"},"content":"AddCommand -\u003e Model : addEmployee(toAdd)","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"e0260222"},"content":"activate Model","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"e0260222"},"content":"Model --\u003e AddCommand","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"e0260222"},"content":"deactivate Model","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"e0260222"},"content":"create CommandResult","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"e0260222"},"content":"AddCommand -\u003e CommandResult","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"e0260222"},"content":"activate CommandResult","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"e0260222"},"content":"CommandResult --\u003e AddCommand","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"e0260222"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-18"},{"lineNumber":63,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":64,"author":{"gitId":"e0260222"},"content":"AddCommand --\u003e LogicManager : result","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"e0260222"},"content":"deactivate AddCommand","lastModifiedDate":"2021-03-18"},{"lineNumber":66,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":67,"author":{"gitId":"e0260222"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-03-18"},{"lineNumber":68,"author":{"gitId":"e0260222"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-18"},{"lineNumber":69,"author":{"gitId":"e0260222"},"content":"@enduml","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"e0260222":69}},{"path":"docs/diagrams/SortActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"daiweinus"},"content":"@startuml","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"daiweinus"},"content":"start","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"daiweinus"},"content":":User executes sort command;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"daiweinus"},"content":"if (Is valid sort command foramt) then ([YES])","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"daiweinus"},"content":"    if (Is valid parameters : n, s, j, b) then ([YES])","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"daiweinus"},"content":"        :Sort employee records;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"daiweinus"},"content":"        :Shows \"MESSAGE_SORT_EMPLOYEE_SUCCESS\";","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"daiweinus"},"content":"    else ([NO])","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"daiweinus"},"content":"        :Shows \"MESSAGE_INVALID_COMMAND_FORMAT\" + \"MESSAGE_USAGE\";","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"daiweinus"},"content":"    endif","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"daiweinus"},"content":"else ([NO])","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"daiweinus"},"content":"    :Shows \"MESSAGE_UNKNOWN_COMMAND\";","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"daiweinus"},"content":"endif","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"daiweinus"},"content":"stop","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"daiweinus"},"content":"@enduml","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"daiweinus":15}},{"path":"docs/diagrams/SortSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"daiweinus"},"content":"@startuml","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"daiweinus"},"content":"!include style.puml","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"daiweinus"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"daiweinus"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"daiweinus"},"content":"participant \":EmployeeTrackerParser\" as EmployeeTrackerParser LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"daiweinus"},"content":"participant \":SortCommandParser\" as SortCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"daiweinus"},"content":"participant \"s:SortCommand\" as SortCommand LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"daiweinus"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"daiweinus"},"content":"end box","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"daiweinus"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"daiweinus"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"daiweinus"},"content":"end box","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"daiweinus"},"content":"[-\u003e LogicManager : execute(\"sort n\")","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"daiweinus"},"content":"activate LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"daiweinus"},"content":"LogicManager -\u003e EmployeeTrackerParser : parseCommand(\"sort n\")","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"daiweinus"},"content":"activate EmployeeTrackerParser","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"daiweinus"},"content":"create SortCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"daiweinus"},"content":"EmployeeTrackerParser -\u003e SortCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"daiweinus"},"content":"activate SortCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"daiweinus"},"content":"SortCommandParser --\u003e EmployeeTrackerParser","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"daiweinus"},"content":"deactivate SortCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"daiweinus"},"content":"EmployeeTrackerParser -\u003e SortCommandParser : parse(\"n\")","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"daiweinus"},"content":"activate SortCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"daiweinus"},"content":"create SortCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"daiweinus"},"content":"SortCommandParser -\u003e SortCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"daiweinus"},"content":"activate SortCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"daiweinus"},"content":"SortCommand --\u003e SortCommandParser : s","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"daiweinus"},"content":"deactivate SortCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"daiweinus"},"content":"SortCommandParser --\u003e EmployeeTrackerParser : s","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"daiweinus"},"content":"deactivate SortCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"daiweinus"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"daiweinus"},"content":"SortCommandParser -[hidden]-\u003e EmployeeTrackerParser","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"daiweinus"},"content":"destroy SortCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"daiweinus"},"content":"EmployeeTrackerParser --\u003e LogicManager : s","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"daiweinus"},"content":"deactivate EmployeeTrackerParser","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"daiweinus"},"content":"LogicManager -\u003e SortCommand : execute()","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"daiweinus"},"content":"activate SortCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"daiweinus"},"content":"SortCommand -\u003e Model : sortEmployee(sortField)","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"daiweinus"},"content":"activate Model","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"daiweinus"},"content":"Model --\u003e SortCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"daiweinus"},"content":"deactivate Model","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"daiweinus"},"content":"create CommandResult","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"daiweinus"},"content":"SortCommand -\u003e CommandResult","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"daiweinus"},"content":"activate CommandResult","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"daiweinus"},"content":"CommandResult --\u003e SortCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"daiweinus"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"daiweinus"},"content":"SortCommand --\u003e LogicManager : result","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"daiweinus"},"content":"deactivate SortCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"daiweinus"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"daiweinus"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"daiweinus"},"content":"@enduml","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"daiweinus":69}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"title: Employee Tracker","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"[![CI Status](https://github.com/AY2021S2-TIC4002-F18-2/tp2/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-TIC4002-F18-2/tp2/actions)","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"[![codecov](https://codecov.io/gh/AY2021S2-TIC4002-F18-2/tp2/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2021S2-TIC4002-F18-2)","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"**Employee Tracker is a desktop application for managing your employees information.**","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"e0260222"},"content":"While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"e0260222"},"content":"* If you are interested in using Employee Tracker, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"e0260222"},"content":"* If you are interested in developing Employee Tracker, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"e0260222":7,"-":14}},{"path":"src/main/java/employeetracker/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.core.LogsCenter;","lastModifiedDate":"2021-02-20"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.util.FileUtil;","lastModifiedDate":"2021-02-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"e0260222":3,"-":61}},{"path":"src/main/java/employeetracker/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"e0260222":1,"-":24}},{"path":"src/main/java/employeetracker/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.core.Config;","lastModifiedDate":"2021-02-20"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.core.LogsCenter;","lastModifiedDate":"2021-02-20"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.core.Version;","lastModifiedDate":"2021-02-20"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-02-20"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.util.ConfigUtil;","lastModifiedDate":"2021-02-20"},{"lineNumber":13,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.util.StringUtil;","lastModifiedDate":"2021-02-20"},{"lineNumber":14,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.Logic;","lastModifiedDate":"2021-02-20"},{"lineNumber":15,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.LogicManager;","lastModifiedDate":"2021-02-20"},{"lineNumber":16,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.EmployeeTracker;","lastModifiedDate":"2021-02-20"},{"lineNumber":17,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.Model;","lastModifiedDate":"2021-02-20"},{"lineNumber":18,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.ModelManager;","lastModifiedDate":"2021-02-20"},{"lineNumber":19,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.ReadOnlyEmployeeTracker;","lastModifiedDate":"2021-02-20"},{"lineNumber":20,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-02-20"},{"lineNumber":21,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.UserPrefs;","lastModifiedDate":"2021-02-20"},{"lineNumber":22,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.util.SampleDataUtil;","lastModifiedDate":"2021-02-20"},{"lineNumber":23,"author":{"gitId":"e0260222"},"content":"import employeetracker.storage.EmployeeTrackerStorage;","lastModifiedDate":"2021-02-20"},{"lineNumber":24,"author":{"gitId":"e0260222"},"content":"import employeetracker.storage.JsonEmployeeTrackerStorage;","lastModifiedDate":"2021-02-20"},{"lineNumber":25,"author":{"gitId":"e0260222"},"content":"import employeetracker.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-02-20"},{"lineNumber":26,"author":{"gitId":"e0260222"},"content":"import employeetracker.storage.Storage;","lastModifiedDate":"2021-02-20"},{"lineNumber":27,"author":{"gitId":"e0260222"},"content":"import employeetracker.storage.StorageManager;","lastModifiedDate":"2021-02-20"},{"lineNumber":28,"author":{"gitId":"e0260222"},"content":"import employeetracker.storage.UserPrefsStorage;","lastModifiedDate":"2021-02-20"},{"lineNumber":29,"author":{"gitId":"e0260222"},"content":"import employeetracker.ui.Ui;","lastModifiedDate":"2021-02-20"},{"lineNumber":30,"author":{"gitId":"e0260222"},"content":"import employeetracker.ui.UiManager;","lastModifiedDate":"2021-02-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-02-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 6, 0, true);","lastModifiedDate":"2017-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"e0260222"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing Employee Tracker ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-02-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"e0260222"},"content":"        EmployeeTrackerStorage employeeTrackerStorage \u003d","lastModifiedDate":"2021-02-20"},{"lineNumber":60,"author":{"gitId":"e0260222"},"content":"                new JsonEmployeeTrackerStorage(userPrefs.getEmployeeTrackerFilePath());","lastModifiedDate":"2021-02-20"},{"lineNumber":61,"author":{"gitId":"e0260222"},"content":"        storage \u003d new StorageManager(employeeTrackerStorage, userPrefsStorage);","lastModifiedDate":"2021-02-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"e0260222"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s Employee Tracker and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2021-02-24"},{"lineNumber":74,"author":{"gitId":"e0260222"},"content":"     * The data from the sample Employee Tracker will be used instead if {@code storage}\u0027s Employee Tracker is not","lastModifiedDate":"2021-02-24"},{"lineNumber":75,"author":{"gitId":"e0260222"},"content":"     * found, or an empty Employee Tracker will be used instead if errors occur when reading {@code storage}\u0027s","lastModifiedDate":"2021-02-24"},{"lineNumber":76,"author":{"gitId":"e0260222"},"content":"     * Employee Tracker.","lastModifiedDate":"2021-02-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":79,"author":{"gitId":"e0260222"},"content":"        Optional\u003cReadOnlyEmployeeTracker\u003e addressBookOptional;","lastModifiedDate":"2021-02-20"},{"lineNumber":80,"author":{"gitId":"e0260222"},"content":"        ReadOnlyEmployeeTracker initialData;","lastModifiedDate":"2021-02-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"e0260222"},"content":"            addressBookOptional \u003d storage.readEmployeeTracker();","lastModifiedDate":"2021-02-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"e0260222"},"content":"                logger.info(\"Data file not found. Will be starting with a sample EmployeeTracker\");","lastModifiedDate":"2021-02-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"e0260222"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleEmployeeTracker);","lastModifiedDate":"2021-02-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"e0260222"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty EmployeeTracker\");","lastModifiedDate":"2021-02-20"},{"lineNumber":89,"author":{"gitId":"e0260222"},"content":"            initialData \u003d new EmployeeTracker();","lastModifiedDate":"2021-02-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":91,"author":{"gitId":"e0260222"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty EmployeeTracker\");","lastModifiedDate":"2021-02-20"},{"lineNumber":92,"author":{"gitId":"e0260222"},"content":"            initialData \u003d new EmployeeTracker();","lastModifiedDate":"2021-02-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"e0260222"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty EmployeeTracker\");","lastModifiedDate":"2021-02-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"e0260222"},"content":"        logger.info(\"Starting EmployeeTracker \" + MainApp.VERSION);","lastModifiedDate":"2021-02-20"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"e0260222"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Employee Tracker ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-02-20"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"e0260222":44,"-":141}},{"path":"src/main/java/employeetracker/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.commons.core;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"e0260222":1,"-":62}},{"path":"src/main/java/employeetracker/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.commons.core;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"e0260222":1,"-":78}},{"path":"src/main/java/employeetracker/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.commons.core;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"e0260222"},"content":"    private static final String LOG_FILE \u003d \"employeetracker.log\";","lastModifiedDate":"2021-02-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"e0260222":2,"-":110}},{"path":"src/main/java/employeetracker/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.commons.core;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"    public static final String MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX \u003d \"The employee index provided is invalid\";","lastModifiedDate":"2021-02-28"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"    public static final String MESSAGE_EMPLOYEES_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2021-02-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"e0260222":3,"-":10}},{"path":"src/main/java/employeetracker/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.commons.core;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"e0260222":1,"-":115}},{"path":"src/main/java/employeetracker/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.commons.core.index;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"e0260222":1,"-":53}},{"path":"src/main/java/employeetracker/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.commons.exceptions;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"e0260222":1,"-":10}},{"path":"src/main/java/employeetracker/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.commons.exceptions;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"e0260222":1,"-":20}},{"path":"src/main/java/employeetracker/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.commons.util;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"import employeetracker.MainApp;","lastModifiedDate":"2021-02-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-02-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"e0260222":2,"-":40}},{"path":"src/main/java/employeetracker/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.commons.util;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"e0260222":1,"-":34}},{"path":"src/main/java/employeetracker/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.commons.util;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.core.Config;","lastModifiedDate":"2021-02-20"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-02-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"e0260222":3,"-":20}},{"path":"src/main/java/employeetracker/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.commons.util;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"e0260222":1,"-":82}},{"path":"src/main/java/employeetracker/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.commons.util;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.core.LogsCenter;","lastModifiedDate":"2021-02-20"},{"lineNumber":24,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-02-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"e0260222":3,"-":140}},{"path":"src/main/java/employeetracker/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.commons.util;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"dgc5213"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"dgc5213"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"dgc5213"},"content":"     *   Ignores case, especially useful for a partial word match.","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"dgc5213"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"dgc5213"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"dgc5213"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"dgc5213"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d true","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"dgc5213"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"dgc5213"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"dgc5213"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"dgc5213"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"dgc5213"},"content":"    public static boolean containsPartialWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"dgc5213"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"dgc5213"},"content":"        requireNonNull(word);","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"dgc5213"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"dgc5213"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"dgc5213"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"dgc5213"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"dgc5213"},"content":"        return preppedSentence.toLowerCase().contains(preppedWord.toLowerCase());","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"dgc5213"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dgc5213":24,"e0260222":2,"-":66}},{"path":"src/main/java/employeetracker/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.logic;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.core.GuiSettings;","lastModifiedDate":"2021-02-20"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.commands.CommandResult;","lastModifiedDate":"2021-02-20"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-02-20"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-20"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.ReadOnlyEmployeeTracker;","lastModifiedDate":"2021-02-20"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"e0260222"},"content":"     * Returns the EmployeeTracker.","lastModifiedDate":"2021-02-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"e0260222"},"content":"     * @see employeetracker.model.Model#getEmployeeTracker()","lastModifiedDate":"2021-02-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"e0260222"},"content":"    ReadOnlyEmployeeTracker getEmployeeTracker();","lastModifiedDate":"2021-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"e0260222"},"content":"    /** Returns an unmodifiable view of the filtered list of employees */","lastModifiedDate":"2021-02-28"},{"lineNumber":34,"author":{"gitId":"e0260222"},"content":"    ObservableList\u003cEmployee\u003e getFilteredEmployeeList();","lastModifiedDate":"2021-02-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"e0260222"},"content":"     * Returns the user prefs\u0027 Employee Tracker file path.","lastModifiedDate":"2021-02-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"e0260222"},"content":"    Path getEmployeeTrackerFilePath();","lastModifiedDate":"2021-02-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"e0260222":14,"-":36}},{"path":"src/main/java/employeetracker/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.logic;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.core.GuiSettings;","lastModifiedDate":"2021-02-20"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.core.LogsCenter;","lastModifiedDate":"2021-02-20"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.commands.Command;","lastModifiedDate":"2021-02-20"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.commands.CommandResult;","lastModifiedDate":"2021-02-20"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-02-20"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.parser.EmployeeTrackerParser;","lastModifiedDate":"2021-02-20"},{"lineNumber":13,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-20"},{"lineNumber":14,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.Model;","lastModifiedDate":"2021-02-20"},{"lineNumber":15,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.ReadOnlyEmployeeTracker;","lastModifiedDate":"2021-02-20"},{"lineNumber":16,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":17,"author":{"gitId":"e0260222"},"content":"import employeetracker.storage.Storage;","lastModifiedDate":"2021-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"e0260222"},"content":"    private final EmployeeTrackerParser employeeTrackerParser;","lastModifiedDate":"2021-02-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"e0260222"},"content":"        employeeTrackerParser \u003d new EmployeeTrackerParser();","lastModifiedDate":"2021-02-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"e0260222"},"content":"        Command command \u003d employeeTrackerParser.parseCommand(commandText);","lastModifiedDate":"2021-02-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"e0260222"},"content":"            storage.saveEmployeeTracker(model.getEmployeeTracker());","lastModifiedDate":"2021-02-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":58,"author":{"gitId":"e0260222"},"content":"    public ReadOnlyEmployeeTracker getEmployeeTracker() {","lastModifiedDate":"2021-02-20"},{"lineNumber":59,"author":{"gitId":"e0260222"},"content":"        return model.getEmployeeTracker();","lastModifiedDate":"2021-02-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"e0260222"},"content":"    public ObservableList\u003cEmployee\u003e getFilteredEmployeeList() {","lastModifiedDate":"2021-02-28"},{"lineNumber":64,"author":{"gitId":"e0260222"},"content":"        return model.getFilteredEmployeeList();","lastModifiedDate":"2021-02-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"e0260222"},"content":"    public Path getEmployeeTrackerFilePath() {","lastModifiedDate":"2021-02-20"},{"lineNumber":69,"author":{"gitId":"e0260222"},"content":"        return model.getEmployeeTrackerFilePath();","lastModifiedDate":"2021-02-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"e0260222":22,"-":59}},{"path":"src/main/java/employeetracker/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.logic.commands;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_DATE_OF_BIRTH;","lastModifiedDate":"2021-02-22"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_DATE_OF_JOINING;","lastModifiedDate":"2021-02-23"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-02-20"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-02-20"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-02-20"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2021-02-24"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_SALARY;","lastModifiedDate":"2021-02-24"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-02-20"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-02-20"},{"lineNumber":15,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.Model;","lastModifiedDate":"2021-02-20"},{"lineNumber":16,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"e0260222"},"content":" * Adds a employee to the Employee Tracker.","lastModifiedDate":"2021-02-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"e0260222"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an employee to Employee Tracker. \"","lastModifiedDate":"2021-02-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"e0260222"},"content":"            + PREFIX_ROLE + \"ROLE \"","lastModifiedDate":"2021-02-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"e0260222"},"content":"            + PREFIX_DATE_OF_BIRTH + \"DATE_OF_BIRTH \"","lastModifiedDate":"2021-02-23"},{"lineNumber":33,"author":{"gitId":"e0260222"},"content":"            + PREFIX_DATE_OF_JOINING + \"DATE_OF_JOINING \"","lastModifiedDate":"2021-02-23"},{"lineNumber":34,"author":{"gitId":"e0260222"},"content":"            + PREFIX_SALARY + \"SALARY \"","lastModifiedDate":"2021-02-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"e0260222"},"content":"            + PREFIX_ROLE + \"Developer \"","lastModifiedDate":"2021-02-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"e0260222"},"content":"            + PREFIX_DATE_OF_BIRTH + \"1990-12-25 \"","lastModifiedDate":"2021-02-22"},{"lineNumber":43,"author":{"gitId":"e0260222"},"content":"            + PREFIX_DATE_OF_JOINING + \"2020-07-01 \"","lastModifiedDate":"2021-02-23"},{"lineNumber":44,"author":{"gitId":"e0260222"},"content":"            + PREFIX_SALARY + \"3000 \"","lastModifiedDate":"2021-02-24"},{"lineNumber":45,"author":{"gitId":"e0260222"},"content":"            + PREFIX_TAG + \"Founder \"","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"e0260222"},"content":"            + PREFIX_TAG + \"l33tCoder\";","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"e0260222"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New employee added: %1$s\";","lastModifiedDate":"2021-02-22"},{"lineNumber":49,"author":{"gitId":"e0260222"},"content":"    public static final String MESSAGE_DUPLICATE_EMPLOYEE \u003d \"This employee already exists in Employee Tracker\";","lastModifiedDate":"2021-02-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"e0260222"},"content":"    private final Employee toAdd;","lastModifiedDate":"2021-02-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"e0260222"},"content":"     * Creates an AddCommand to add the specified {@code Employee}","lastModifiedDate":"2021-02-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"e0260222"},"content":"    public AddCommand(Employee employee) {","lastModifiedDate":"2021-02-27"},{"lineNumber":57,"author":{"gitId":"e0260222"},"content":"        requireNonNull(employee);","lastModifiedDate":"2021-02-27"},{"lineNumber":58,"author":{"gitId":"e0260222"},"content":"        toAdd \u003d employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"e0260222"},"content":"        if (model.hasEmployee(toAdd)) {","lastModifiedDate":"2021-02-28"},{"lineNumber":66,"author":{"gitId":"e0260222"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EMPLOYEE);","lastModifiedDate":"2021-02-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"e0260222"},"content":"        model.addEmployee(toAdd);","lastModifiedDate":"2021-02-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"e0260222":36,"-":43}},{"path":"src/main/java/employeetracker/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.logic.commands;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.EmployeeTracker;","lastModifiedDate":"2021-02-20"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.Model;","lastModifiedDate":"2021-02-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":" * Clears the Employee Tracker.","lastModifiedDate":"2021-02-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"e0260222"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Employee Tracker has been cleared!\";","lastModifiedDate":"2021-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"e0260222"},"content":"        model.setEmployeeTracker(new EmployeeTracker());","lastModifiedDate":"2021-02-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"e0260222":6,"-":17}},{"path":"src/main/java/employeetracker/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.logic.commands;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.Model;","lastModifiedDate":"2021-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"e0260222":3,"-":17}},{"path":"src/main/java/employeetracker/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.logic.commands;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"e0260222":1,"-":70}},{"path":"src/main/java/employeetracker/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.logic.commands;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.core.Messages;","lastModifiedDate":"2021-02-20"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.core.index.Index;","lastModifiedDate":"2021-02-20"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-02-20"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.Model;","lastModifiedDate":"2021-02-20"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"e0260222"},"content":" * Deletes a employee identified using it\u0027s displayed index from the Employee Tracker.","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"e0260222"},"content":"            + \": Deletes the employee identified by the index number used in the displayed employee list.\\n\"","lastModifiedDate":"2021-02-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"e0260222"},"content":"    public static final String MESSAGE_DELETE_EMPLOYEE_SUCCESS \u003d \"Deleted Employee: %1$s\";","lastModifiedDate":"2021-02-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"e0260222"},"content":"        List\u003cEmployee\u003e lastShownList \u003d model.getFilteredEmployeeList();","lastModifiedDate":"2021-02-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"e0260222"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX);","lastModifiedDate":"2021-02-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"e0260222"},"content":"        Employee employeeToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-02-27"},{"lineNumber":43,"author":{"gitId":"e0260222"},"content":"        model.deleteEmployee(employeeToDelete);","lastModifiedDate":"2021-02-28"},{"lineNumber":44,"author":{"gitId":"e0260222"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_EMPLOYEE_SUCCESS, employeeToDelete));","lastModifiedDate":"2021-02-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"e0260222":14,"-":39}},{"path":"src/main/java/employeetracker/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.logic.commands;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_DATE_OF_BIRTH;","lastModifiedDate":"2021-02-23"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_DATE_OF_JOINING;","lastModifiedDate":"2021-02-23"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-02-20"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-02-20"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-02-20"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2021-02-24"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_SALARY;","lastModifiedDate":"2021-02-24"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-02-20"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":"import static employeetracker.model.Model.PREDICATE_SHOW_ALL_EMPLOYEES;","lastModifiedDate":"2021-02-28"},{"lineNumber":13,"author":{"gitId":"e0260222"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-02-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.core.Messages;","lastModifiedDate":"2021-02-20"},{"lineNumber":22,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.core.index.Index;","lastModifiedDate":"2021-02-20"},{"lineNumber":23,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.util.CollectionUtil;","lastModifiedDate":"2021-02-20"},{"lineNumber":24,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-02-20"},{"lineNumber":25,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.Model;","lastModifiedDate":"2021-02-20"},{"lineNumber":26,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Address;","lastModifiedDate":"2021-02-27"},{"lineNumber":27,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.DateOfBirth;","lastModifiedDate":"2021-02-27"},{"lineNumber":28,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.DateOfJoining;","lastModifiedDate":"2021-02-27"},{"lineNumber":29,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Email;","lastModifiedDate":"2021-02-27"},{"lineNumber":30,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":31,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Name;","lastModifiedDate":"2021-02-27"},{"lineNumber":32,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Phone;","lastModifiedDate":"2021-02-27"},{"lineNumber":33,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Role;","lastModifiedDate":"2021-02-27"},{"lineNumber":34,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Salary;","lastModifiedDate":"2021-02-27"},{"lineNumber":35,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.tag.Tag;","lastModifiedDate":"2021-02-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"e0260222"},"content":" * Edits the details of an existing employee in the Employee Tracker.","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"e0260222"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the employee identified \"","lastModifiedDate":"2021-02-24"},{"lineNumber":45,"author":{"gitId":"e0260222"},"content":"            + \"by the index number used in the displayed employee list. \"","lastModifiedDate":"2021-02-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":49,"author":{"gitId":"e0260222"},"content":"            + \"[\" + PREFIX_ROLE + \"ROLE] \"","lastModifiedDate":"2021-02-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"e0260222"},"content":"            + \"[\" + PREFIX_DATE_OF_BIRTH + \"DATE_OF_BIRTH] \"","lastModifiedDate":"2021-02-23"},{"lineNumber":54,"author":{"gitId":"e0260222"},"content":"            + \"[\" + PREFIX_DATE_OF_JOINING + \"DATE_OF_JOINING] \"","lastModifiedDate":"2021-02-23"},{"lineNumber":55,"author":{"gitId":"e0260222"},"content":"            + \"[\" + PREFIX_SALARY + \"SALARY] \"","lastModifiedDate":"2021-02-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"e0260222"},"content":"    public static final String MESSAGE_EDIT_EMPLOYEE_SUCCESS \u003d \"Edited Employee: %1$s\";","lastModifiedDate":"2021-02-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"e0260222"},"content":"    public static final String MESSAGE_DUPLICATE_EMPLOYEE \u003d \"This employee already exists in the Employee Tracker.\";","lastModifiedDate":"2021-02-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"e0260222"},"content":"    private final EditEmployeeDescriptor editEmployeeDescriptor;","lastModifiedDate":"2021-02-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"e0260222"},"content":"     * @param index of the employee in the filtered employee list to edit","lastModifiedDate":"2021-02-27"},{"lineNumber":70,"author":{"gitId":"e0260222"},"content":"     * @param editEmployeeDescriptor details to edit the employee with","lastModifiedDate":"2021-02-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"e0260222"},"content":"    public EditCommand(Index index, EditEmployeeDescriptor editEmployeeDescriptor) {","lastModifiedDate":"2021-02-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":74,"author":{"gitId":"e0260222"},"content":"        requireNonNull(editEmployeeDescriptor);","lastModifiedDate":"2021-02-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":77,"author":{"gitId":"e0260222"},"content":"        this.editEmployeeDescriptor \u003d new EditEmployeeDescriptor(editEmployeeDescriptor);","lastModifiedDate":"2021-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"e0260222"},"content":"        List\u003cEmployee\u003e lastShownList \u003d model.getFilteredEmployeeList();","lastModifiedDate":"2021-02-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"e0260222"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX);","lastModifiedDate":"2021-02-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"e0260222"},"content":"        Employee employeeToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-02-27"},{"lineNumber":90,"author":{"gitId":"e0260222"},"content":"        Employee editedEmployee \u003d createEditedEmployee(employeeToEdit, editEmployeeDescriptor);","lastModifiedDate":"2021-02-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"e0260222"},"content":"        if (!employeeToEdit.isSameEmployee(editedEmployee) \u0026\u0026 model.hasEmployee(editedEmployee)) {","lastModifiedDate":"2021-02-28"},{"lineNumber":93,"author":{"gitId":"e0260222"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EMPLOYEE);","lastModifiedDate":"2021-02-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"e0260222"},"content":"        model.setEmployee(employeeToEdit, editedEmployee);","lastModifiedDate":"2021-02-28"},{"lineNumber":97,"author":{"gitId":"e0260222"},"content":"        model.updateFilteredEmployeeList(PREDICATE_SHOW_ALL_EMPLOYEES);","lastModifiedDate":"2021-02-28"},{"lineNumber":98,"author":{"gitId":"e0260222"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_EMPLOYEE_SUCCESS, editedEmployee));","lastModifiedDate":"2021-02-28"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"e0260222"},"content":"     * Creates and returns a {@code Employee} with the details of {@code employeeToEdit}","lastModifiedDate":"2021-02-27"},{"lineNumber":103,"author":{"gitId":"e0260222"},"content":"     * edited with {@code editEmployeeDescriptor}.","lastModifiedDate":"2021-02-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"e0260222"},"content":"    private static Employee createEditedEmployee(Employee employeeToEdit, EditEmployeeDescriptor","lastModifiedDate":"2021-02-28"},{"lineNumber":106,"author":{"gitId":"e0260222"},"content":"            editEmployeeDescriptor) {","lastModifiedDate":"2021-02-28"},{"lineNumber":107,"author":{"gitId":"e0260222"},"content":"        assert employeeToEdit !\u003d null;","lastModifiedDate":"2021-02-27"},{"lineNumber":108,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":109,"author":{"gitId":"e0260222"},"content":"        Name updatedName \u003d editEmployeeDescriptor.getName().orElse(employeeToEdit.getName());","lastModifiedDate":"2021-02-28"},{"lineNumber":110,"author":{"gitId":"e0260222"},"content":"        Role updatedRole \u003d editEmployeeDescriptor.getRole().orElse(employeeToEdit.getRole());","lastModifiedDate":"2021-02-28"},{"lineNumber":111,"author":{"gitId":"e0260222"},"content":"        Phone updatedPhone \u003d editEmployeeDescriptor.getPhone().orElse(employeeToEdit.getPhone());","lastModifiedDate":"2021-02-28"},{"lineNumber":112,"author":{"gitId":"e0260222"},"content":"        Email updatedEmail \u003d editEmployeeDescriptor.getEmail().orElse(employeeToEdit.getEmail());","lastModifiedDate":"2021-02-28"},{"lineNumber":113,"author":{"gitId":"e0260222"},"content":"        Address updatedAddress \u003d editEmployeeDescriptor.getAddress().orElse(employeeToEdit.getAddress());","lastModifiedDate":"2021-02-28"},{"lineNumber":114,"author":{"gitId":"e0260222"},"content":"        DateOfBirth updatedDateOfBirth \u003d editEmployeeDescriptor.getDateOfBirth()","lastModifiedDate":"2021-02-28"},{"lineNumber":115,"author":{"gitId":"e0260222"},"content":"                .orElse(employeeToEdit.getDateOfBirth());","lastModifiedDate":"2021-02-28"},{"lineNumber":116,"author":{"gitId":"e0260222"},"content":"        DateOfJoining updatedDateOfJoining \u003d editEmployeeDescriptor.getDateOfJoining()","lastModifiedDate":"2021-02-28"},{"lineNumber":117,"author":{"gitId":"e0260222"},"content":"                .orElse(employeeToEdit.getDateOfJoining());","lastModifiedDate":"2021-02-27"},{"lineNumber":118,"author":{"gitId":"e0260222"},"content":"        Salary updatedSalary \u003d editEmployeeDescriptor.getSalary().orElse(employeeToEdit.getSalary());","lastModifiedDate":"2021-02-28"},{"lineNumber":119,"author":{"gitId":"e0260222"},"content":"        Set\u003cTag\u003e updatedTags \u003d editEmployeeDescriptor.getTags().orElse(employeeToEdit.getTags());","lastModifiedDate":"2021-02-28"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":121,"author":{"gitId":"e0260222"},"content":"        return new Employee(updatedName, updatedRole, updatedPhone, updatedEmail, updatedAddress, updatedDateOfBirth,","lastModifiedDate":"2021-02-27"},{"lineNumber":122,"author":{"gitId":"e0260222"},"content":"                updatedDateOfJoining, updatedSalary, updatedTags);","lastModifiedDate":"2021-02-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":140,"author":{"gitId":"e0260222"},"content":"                \u0026\u0026 editEmployeeDescriptor.equals(e.editEmployeeDescriptor);","lastModifiedDate":"2021-02-28"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"e0260222"},"content":"     * Stores the details to edit the employee with. Each non-empty field value will replace the","lastModifiedDate":"2021-02-27"},{"lineNumber":145,"author":{"gitId":"e0260222"},"content":"     * corresponding field value of the employee.","lastModifiedDate":"2021-02-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"e0260222"},"content":"    public static class EditEmployeeDescriptor {","lastModifiedDate":"2021-02-28"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":149,"author":{"gitId":"e0260222"},"content":"        private Role role;","lastModifiedDate":"2021-02-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":153,"author":{"gitId":"e0260222"},"content":"        private DateOfBirth dateOfBirth;","lastModifiedDate":"2021-02-23"},{"lineNumber":154,"author":{"gitId":"e0260222"},"content":"        private DateOfJoining dateOfJoining;","lastModifiedDate":"2021-02-23"},{"lineNumber":155,"author":{"gitId":"e0260222"},"content":"        private Salary salary;","lastModifiedDate":"2021-02-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"e0260222"},"content":"        public EditEmployeeDescriptor() {}","lastModifiedDate":"2021-02-28"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":164,"author":{"gitId":"e0260222"},"content":"        public EditEmployeeDescriptor(EditEmployeeDescriptor toCopy) {","lastModifiedDate":"2021-02-28"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":166,"author":{"gitId":"e0260222"},"content":"            setRole(toCopy.role);","lastModifiedDate":"2021-02-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":170,"author":{"gitId":"e0260222"},"content":"            setDateOfBirth(toCopy.dateOfBirth);","lastModifiedDate":"2021-02-22"},{"lineNumber":171,"author":{"gitId":"e0260222"},"content":"            setDateOfJoining(toCopy.dateOfJoining);","lastModifiedDate":"2021-02-23"},{"lineNumber":172,"author":{"gitId":"e0260222"},"content":"            setSalary(toCopy.salary);","lastModifiedDate":"2021-02-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"e0260222"},"content":"            return CollectionUtil.isAnyNonNull(name, role, phone, email, address, dateOfBirth, dateOfJoining,","lastModifiedDate":"2021-02-24"},{"lineNumber":181,"author":{"gitId":"e0260222"},"content":"                    salary, tags);","lastModifiedDate":"2021-02-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"e0260222"},"content":"        public void setRole(Role role) {","lastModifiedDate":"2021-02-24"},{"lineNumber":193,"author":{"gitId":"e0260222"},"content":"            this.role \u003d role;","lastModifiedDate":"2021-02-24"},{"lineNumber":194,"author":{"gitId":"e0260222"},"content":"        }","lastModifiedDate":"2021-02-24"},{"lineNumber":195,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":196,"author":{"gitId":"e0260222"},"content":"        public Optional\u003cRole\u003e getRole() {","lastModifiedDate":"2021-02-24"},{"lineNumber":197,"author":{"gitId":"e0260222"},"content":"            return Optional.ofNullable(role);","lastModifiedDate":"2021-02-24"},{"lineNumber":198,"author":{"gitId":"e0260222"},"content":"        }","lastModifiedDate":"2021-02-24"},{"lineNumber":199,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":224,"author":{"gitId":"e0260222"},"content":"        public void setDateOfBirth(DateOfBirth dateOfBirth) {","lastModifiedDate":"2021-02-22"},{"lineNumber":225,"author":{"gitId":"e0260222"},"content":"            this.dateOfBirth \u003d dateOfBirth;","lastModifiedDate":"2021-02-22"},{"lineNumber":226,"author":{"gitId":"e0260222"},"content":"        }","lastModifiedDate":"2021-02-22"},{"lineNumber":227,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":228,"author":{"gitId":"e0260222"},"content":"        public Optional\u003cDateOfBirth\u003e getDateOfBirth() {","lastModifiedDate":"2021-02-22"},{"lineNumber":229,"author":{"gitId":"e0260222"},"content":"            return Optional.ofNullable(dateOfBirth);","lastModifiedDate":"2021-02-22"},{"lineNumber":230,"author":{"gitId":"e0260222"},"content":"        }","lastModifiedDate":"2021-02-22"},{"lineNumber":231,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":232,"author":{"gitId":"e0260222"},"content":"        public void setDateOfJoining(DateOfJoining dateOfJoining) {","lastModifiedDate":"2021-02-23"},{"lineNumber":233,"author":{"gitId":"e0260222"},"content":"            this.dateOfJoining \u003d dateOfJoining;","lastModifiedDate":"2021-02-23"},{"lineNumber":234,"author":{"gitId":"e0260222"},"content":"        }","lastModifiedDate":"2021-02-23"},{"lineNumber":235,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":236,"author":{"gitId":"e0260222"},"content":"        public Optional\u003cDateOfJoining\u003e getDateOfJoining() {","lastModifiedDate":"2021-02-23"},{"lineNumber":237,"author":{"gitId":"e0260222"},"content":"            return Optional.ofNullable(dateOfJoining);","lastModifiedDate":"2021-02-23"},{"lineNumber":238,"author":{"gitId":"e0260222"},"content":"        }","lastModifiedDate":"2021-02-23"},{"lineNumber":239,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":240,"author":{"gitId":"e0260222"},"content":"        public void setSalary(Salary salary) {","lastModifiedDate":"2021-02-24"},{"lineNumber":241,"author":{"gitId":"e0260222"},"content":"            this.salary \u003d salary;","lastModifiedDate":"2021-02-24"},{"lineNumber":242,"author":{"gitId":"e0260222"},"content":"        }","lastModifiedDate":"2021-02-24"},{"lineNumber":243,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":244,"author":{"gitId":"e0260222"},"content":"        public Optional\u003cSalary\u003e getSalary() {","lastModifiedDate":"2021-02-24"},{"lineNumber":245,"author":{"gitId":"e0260222"},"content":"            return Optional.ofNullable(salary);","lastModifiedDate":"2021-02-24"},{"lineNumber":246,"author":{"gitId":"e0260222"},"content":"        }","lastModifiedDate":"2021-02-24"},{"lineNumber":247,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":249,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":250,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":251,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":257,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":258,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":259,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":260,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":268,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":269,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":273,"author":{"gitId":"e0260222"},"content":"            if (!(other instanceof EditEmployeeDescriptor)) {","lastModifiedDate":"2021-02-28"},{"lineNumber":274,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":278,"author":{"gitId":"e0260222"},"content":"            EditEmployeeDescriptor e \u003d (EditEmployeeDescriptor) other;","lastModifiedDate":"2021-02-28"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":281,"author":{"gitId":"e0260222"},"content":"                    \u0026\u0026 getRole().equals(e.getRole())","lastModifiedDate":"2021-03-11"},{"lineNumber":282,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":283,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":284,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":285,"author":{"gitId":"e0260222"},"content":"                    \u0026\u0026 getDateOfBirth().equals(e.getDateOfBirth())","lastModifiedDate":"2021-02-23"},{"lineNumber":286,"author":{"gitId":"e0260222"},"content":"                    \u0026\u0026 getDateOfJoining().equals(e.getDateOfJoining())","lastModifiedDate":"2021-02-23"},{"lineNumber":287,"author":{"gitId":"e0260222"},"content":"                    \u0026\u0026 getSalary().equals(e.getSalary())","lastModifiedDate":"2021-02-24"},{"lineNumber":288,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"e0260222":124,"-":167}},{"path":"src/main/java/employeetracker/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.logic.commands;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.Model;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Employee Tracker as requested ...\";","lastModifiedDate":"2021-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"e0260222":3,"-":16}},{"path":"src/main/java/employeetracker/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.logic.commands;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.core.Messages;","lastModifiedDate":"2021-02-20"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.Model;","lastModifiedDate":"2021-02-20"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"dgc5213"},"content":" * Finds and lists all employees in Employee Tracker whose name contains any of the argument keywords.","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"dgc5213"},"content":"            + \"Parameters: TYPE (must be n or r or a or b or p)/KEYWORD...\\n\"","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"dgc5213"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/Roy Irfan\"","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"dgc5213"},"content":"            + \" OR \"","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"dgc5213"},"content":"            + COMMAND_WORD + \" r/Developer\"","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"dgc5213"},"content":"            + \" OR \"","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"dgc5213"},"content":"            + COMMAND_WORD + \" a/Serangoon\"","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"dgc5213"},"content":"            + \" OR \"","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"dgc5213"},"content":"            + COMMAND_WORD + \" b/1992-05-28\"","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"dgc5213"},"content":"            + \" OR \"","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"dgc5213"},"content":"            + COMMAND_WORD + \" p/910 (at least 3 digits long)\";","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":37,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":38,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":39,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"e0260222"},"content":"        model.updateFilteredEmployeeList(predicate);","lastModifiedDate":"2021-02-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":45,"author":{"gitId":"e0260222"},"content":"                String.format(Messages.MESSAGE_EMPLOYEES_LISTED_OVERVIEW, model.getFilteredEmployeeList().size()));","lastModifiedDate":"2021-02-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"dgc5213":15,"e0260222":6,"-":33}},{"path":"src/main/java/employeetracker/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.logic.commands;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.Model;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"e0260222":2,"-":19}},{"path":"src/main/java/employeetracker/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.logic.commands;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.model.Model.PREDICATE_SHOW_ALL_EMPLOYEES;","lastModifiedDate":"2021-02-28"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.Model;","lastModifiedDate":"2021-02-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"/**","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":" * Lists all employees in the Employee Tracker to the user.","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":" */","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"e0260222"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all employees\";","lastModifiedDate":"2021-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"e0260222"},"content":"        model.updateFilteredEmployeeList(PREDICATE_SHOW_ALL_EMPLOYEES);","lastModifiedDate":"2021-02-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"e0260222":9,"-":15}},{"path":"src/main/java/employeetracker/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daiweinus"},"content":"package employeetracker.logic.commands;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"daiweinus"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"daiweinus"},"content":"import employeetracker.model.Model;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"daiweinus"},"content":"/**","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"daiweinus"},"content":" * Sort and list all employees in Employee Tracker by name, salary,","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"daiweinus"},"content":" * date of joining \u0026 date of birth contains any of the argument keywords.","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"daiweinus"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"daiweinus"},"content":" */","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"daiweinus"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"daiweinus"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"daiweinus"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"daiweinus"},"content":"            + \": Sorts the list of all employee records in the Employee Tracker.\\n\"","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"daiweinus"},"content":"            + \"Parameters: TYPE (must be the letter n, s, j or b)\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"daiweinus"},"content":"            + \"Example: \" + COMMAND_WORD + \" n\";","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"daiweinus"},"content":"    public static final String MESSAGE_SORT_EMPLOYEE_SUCCESS \u003d \"Employees list has been sorted.\";","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"daiweinus"},"content":"    private final String sortField;","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"daiweinus"},"content":"    public SortCommand(String field) {","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"daiweinus"},"content":"        this.sortField \u003d field;","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"daiweinus"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"daiweinus"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"daiweinus"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"daiweinus"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"daiweinus"},"content":"        model.sortEmployee(sortField);","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"daiweinus"},"content":"        return new CommandResult(MESSAGE_SORT_EMPLOYEE_SUCCESS);","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"daiweinus"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"daiweinus"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":38,"author":{"gitId":"daiweinus"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"daiweinus"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-11"},{"lineNumber":40,"author":{"gitId":"daiweinus"},"content":"                || (other instanceof SortCommand // instanceof handles nulls","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"daiweinus"},"content":"                \u0026\u0026 sortField.equals(((SortCommand) other).sortField)); // state check","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"daiweinus"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"daiweinus"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"daiweinus":44}},{"path":"src/main/java/employeetracker/logic/commands/StatsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chenduo1412"},"content":"package employeetracker.logic.commands;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"Chenduo1412"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"Chenduo1412"},"content":"import employeetracker.model.Model;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"Chenduo1412"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"Chenduo1412"},"content":" * List all stats for all employees in the Employee Tracker to the user.","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"Chenduo1412"},"content":"*/","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"Chenduo1412"},"content":"public class StatsCommand extends Command {","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"Chenduo1412"},"content":"    public static final String COMMAND_WORD \u003d \"stats\";","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"Chenduo1412"},"content":"    private final String statsField;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"Chenduo1412"},"content":"    public StatsCommand(String field) {","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"Chenduo1412"},"content":"        this.statsField \u003d field;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"Chenduo1412"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"Chenduo1412"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"Chenduo1412"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"Chenduo1412"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"Chenduo1412"},"content":"        String statement \u003d model.getStatement();","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"Chenduo1412"},"content":"        return new CommandResult(statement);","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"Chenduo1412"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"Chenduo1412"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"Chenduo1412":29}},{"path":"src/main/java/employeetracker/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.logic.commands.exceptions;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"e0260222":1,"-":16}},{"path":"src/main/java/employeetracker/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.logic.parser;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-02-23"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_DATE_OF_BIRTH;","lastModifiedDate":"2021-02-23"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_DATE_OF_JOINING;","lastModifiedDate":"2021-02-23"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-02-23"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-02-23"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-02-23"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2021-02-24"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_SALARY;","lastModifiedDate":"2021-02-24"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.commands.AddCommand;","lastModifiedDate":"2021-02-20"},{"lineNumber":18,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-20"},{"lineNumber":19,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Address;","lastModifiedDate":"2021-02-27"},{"lineNumber":20,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.DateOfBirth;","lastModifiedDate":"2021-02-27"},{"lineNumber":21,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.DateOfJoining;","lastModifiedDate":"2021-02-27"},{"lineNumber":22,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Email;","lastModifiedDate":"2021-02-27"},{"lineNumber":23,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":24,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Name;","lastModifiedDate":"2021-02-27"},{"lineNumber":25,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Phone;","lastModifiedDate":"2021-02-27"},{"lineNumber":26,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Role;","lastModifiedDate":"2021-02-27"},{"lineNumber":27,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Salary;","lastModifiedDate":"2021-02-27"},{"lineNumber":28,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.tag.Tag;","lastModifiedDate":"2021-02-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"e0260222"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_ROLE, PREFIX_PHONE,","lastModifiedDate":"2021-02-24"},{"lineNumber":42,"author":{"gitId":"e0260222"},"content":"                PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_DATE_OF_BIRTH, PREFIX_DATE_OF_JOINING, PREFIX_SALARY, PREFIX_TAG);","lastModifiedDate":"2021-02-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"e0260222"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ROLE, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2021-02-24"},{"lineNumber":45,"author":{"gitId":"e0260222"},"content":"                PREFIX_DATE_OF_BIRTH, PREFIX_DATE_OF_JOINING, PREFIX_SALARY) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-02-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"e0260222"},"content":"        Role role \u003d ParserUtil.parseRole(argMultimap.getValue(PREFIX_ROLE).get());","lastModifiedDate":"2021-02-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"e0260222"},"content":"        DateOfBirth dateOfBirth \u003d ParserUtil.parseDateOfBirth(argMultimap.getValue(PREFIX_DATE_OF_BIRTH).get());","lastModifiedDate":"2021-02-22"},{"lineNumber":55,"author":{"gitId":"e0260222"},"content":"        DateOfJoining dateOfJoining \u003d ParserUtil.parseDateOfJoining(argMultimap.getValue(PREFIX_DATE_OF_JOINING).get());","lastModifiedDate":"2021-02-23"},{"lineNumber":56,"author":{"gitId":"e0260222"},"content":"        Salary salary \u003d ParserUtil.parseSalary(argMultimap.getValue(PREFIX_SALARY).get());","lastModifiedDate":"2021-02-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"e0260222"},"content":"        Employee employee \u003d new Employee(name, role, phone, email, address, dateOfBirth,","lastModifiedDate":"2021-02-27"},{"lineNumber":60,"author":{"gitId":"e0260222"},"content":"                dateOfJoining, salary, tagList);","lastModifiedDate":"2021-02-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"e0260222"},"content":"        return new AddCommand(employee);","lastModifiedDate":"2021-02-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"e0260222":34,"-":39}},{"path":"src/main/java/employeetracker/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.logic.parser;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"e0260222":1,"-":59}},{"path":"src/main/java/employeetracker/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.logic.parser;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"e0260222":1,"-":147}},{"path":"src/main/java/employeetracker/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.logic.parser;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"    public static final Prefix PREFIX_ROLE \u003d new Prefix(\"r/\");","lastModifiedDate":"2021-02-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2021-02-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"e0260222"},"content":"    public static final Prefix PREFIX_SALARY \u003d new Prefix(\"s/\");","lastModifiedDate":"2021-02-22"},{"lineNumber":15,"author":{"gitId":"e0260222"},"content":"    public static final Prefix PREFIX_DATE_OF_BIRTH \u003d new Prefix(\"b/\");","lastModifiedDate":"2021-02-22"},{"lineNumber":16,"author":{"gitId":"e0260222"},"content":"    public static final Prefix PREFIX_DATE_OF_JOINING \u003d new Prefix(\"j/\");","lastModifiedDate":"2021-02-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"e0260222":6,"-":13}},{"path":"src/main/java/employeetracker/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.logic.parser;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.core.index.Index;","lastModifiedDate":"2021-02-20"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.commands.DeleteCommand;","lastModifiedDate":"2021-02-20"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"e0260222":5,"-":24}},{"path":"src/main/java/employeetracker/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.logic.parser;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-02-20"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_DATE_OF_BIRTH;","lastModifiedDate":"2021-02-23"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_DATE_OF_JOINING;","lastModifiedDate":"2021-02-23"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-02-20"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-02-20"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-02-20"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2021-02-24"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_SALARY;","lastModifiedDate":"2021-02-24"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-02-20"},{"lineNumber":13,"author":{"gitId":"e0260222"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-02-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.core.index.Index;","lastModifiedDate":"2021-02-20"},{"lineNumber":21,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.commands.EditCommand;","lastModifiedDate":"2021-02-20"},{"lineNumber":22,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.commands.EditCommand.EditEmployeeDescriptor;","lastModifiedDate":"2021-02-28"},{"lineNumber":23,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-20"},{"lineNumber":24,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.tag.Tag;","lastModifiedDate":"2021-02-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"e0260222"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_ROLE, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2021-02-24"},{"lineNumber":40,"author":{"gitId":"e0260222"},"content":"                        PREFIX_DATE_OF_BIRTH, PREFIX_DATE_OF_JOINING, PREFIX_SALARY, PREFIX_TAG);","lastModifiedDate":"2021-02-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"e0260222"},"content":"        EditEmployeeDescriptor editEmployeeDescriptor \u003d new EditCommand.EditEmployeeDescriptor();","lastModifiedDate":"2021-02-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"e0260222"},"content":"            editEmployeeDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-02-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"e0260222"},"content":"        if (argMultimap.getValue(PREFIX_ROLE).isPresent()) {","lastModifiedDate":"2021-02-24"},{"lineNumber":55,"author":{"gitId":"e0260222"},"content":"            editEmployeeDescriptor.setRole(ParserUtil.parseRole(argMultimap.getValue(PREFIX_ROLE).get()));","lastModifiedDate":"2021-02-28"},{"lineNumber":56,"author":{"gitId":"e0260222"},"content":"        }","lastModifiedDate":"2021-02-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"e0260222"},"content":"            editEmployeeDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2021-02-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"e0260222"},"content":"            editEmployeeDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2021-02-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"e0260222"},"content":"            editEmployeeDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2021-02-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"e0260222"},"content":"        if (argMultimap.getValue(PREFIX_DATE_OF_BIRTH).isPresent()) {","lastModifiedDate":"2021-02-23"},{"lineNumber":67,"author":{"gitId":"e0260222"},"content":"            editEmployeeDescriptor.setDateOfBirth(ParserUtil.parseDateOfBirth(","lastModifiedDate":"2021-02-28"},{"lineNumber":68,"author":{"gitId":"e0260222"},"content":"                    argMultimap.getValue(PREFIX_DATE_OF_BIRTH).get()));","lastModifiedDate":"2021-02-23"},{"lineNumber":69,"author":{"gitId":"e0260222"},"content":"        }","lastModifiedDate":"2021-02-23"},{"lineNumber":70,"author":{"gitId":"e0260222"},"content":"        if (argMultimap.getValue(PREFIX_DATE_OF_JOINING).isPresent()) {","lastModifiedDate":"2021-02-23"},{"lineNumber":71,"author":{"gitId":"e0260222"},"content":"            editEmployeeDescriptor.setDateOfJoining(ParserUtil.parseDateOfJoining(","lastModifiedDate":"2021-02-28"},{"lineNumber":72,"author":{"gitId":"e0260222"},"content":"                    argMultimap.getValue(PREFIX_DATE_OF_JOINING).get()));","lastModifiedDate":"2021-02-23"},{"lineNumber":73,"author":{"gitId":"e0260222"},"content":"        }","lastModifiedDate":"2021-02-23"},{"lineNumber":74,"author":{"gitId":"e0260222"},"content":"        if (argMultimap.getValue(PREFIX_SALARY).isPresent()) {","lastModifiedDate":"2021-02-24"},{"lineNumber":75,"author":{"gitId":"e0260222"},"content":"            editEmployeeDescriptor.setSalary(ParserUtil.parseSalary(argMultimap.getValue(PREFIX_SALARY).get()));","lastModifiedDate":"2021-02-28"},{"lineNumber":76,"author":{"gitId":"e0260222"},"content":"        }","lastModifiedDate":"2021-02-24"},{"lineNumber":77,"author":{"gitId":"e0260222"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editEmployeeDescriptor::setTags);","lastModifiedDate":"2021-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"e0260222"},"content":"        if (!editEmployeeDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-02-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"e0260222"},"content":"        return new EditCommand(index, editEmployeeDescriptor);","lastModifiedDate":"2021-02-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"e0260222":41,"-":60}},{"path":"src/main/java/employeetracker/logic/parser/EmployeeTrackerParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.logic.parser;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"import static employeetracker.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"Chenduo1412"},"content":"import employeetracker.logic.commands.AddCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"Chenduo1412"},"content":"import employeetracker.logic.commands.ClearCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"Chenduo1412"},"content":"import employeetracker.logic.commands.Command;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"Chenduo1412"},"content":"import employeetracker.logic.commands.DeleteCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"Chenduo1412"},"content":"import employeetracker.logic.commands.EditCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"Chenduo1412"},"content":"import employeetracker.logic.commands.ExitCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"Chenduo1412"},"content":"import employeetracker.logic.commands.FindCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"Chenduo1412"},"content":"import employeetracker.logic.commands.HelpCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"Chenduo1412"},"content":"import employeetracker.logic.commands.ListCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"Chenduo1412"},"content":"import employeetracker.logic.commands.SortCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"Chenduo1412"},"content":"import employeetracker.logic.commands.StatsCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"e0260222"},"content":"public class EmployeeTrackerParser {","lastModifiedDate":"2021-02-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"daiweinus"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-11"},{"lineNumber":66,"author":{"gitId":"daiweinus"},"content":"            return new SortCommandParser().parse(arguments);","lastModifiedDate":"2021-03-11"},{"lineNumber":67,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"Chenduo1412"},"content":"        case StatsCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"Chenduo1412"},"content":"            return new StatsCommandParser().parse(StatsCommand.COMMAND_WORD);","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"daiweinus":3,"e0260222":5,"Chenduo1412":15,"-":62}},{"path":"src/main/java/employeetracker/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.logic.parser;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_DATE_OF_BIRTH;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"dgc5213"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"dgc5213"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"dgc5213"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-02-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.commands.FindCommand;","lastModifiedDate":"2021-02-20"},{"lineNumber":14,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-20"},{"lineNumber":15,"author":{"gitId":"dgc5213"},"content":"import employeetracker.model.employee.Address;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"dgc5213"},"content":"import employeetracker.model.employee.DateOfBirth;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"dgc5213"},"content":"import employeetracker.model.employee.Name;","lastModifiedDate":"2021-02-28"},{"lineNumber":18,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-02-27"},{"lineNumber":19,"author":{"gitId":"dgc5213"},"content":"import employeetracker.model.employee.Phone;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"dgc5213"},"content":"import employeetracker.model.employee.Role;","lastModifiedDate":"2021-02-28"},{"lineNumber":21,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"dgc5213"},"content":"        String[] employeeKeywords \u003d new String[0];","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"dgc5213"},"content":"        String findBy \u003d null;","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"dgc5213"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-02-28"},{"lineNumber":39,"author":{"gitId":"dgc5213"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-02-28"},{"lineNumber":40,"author":{"gitId":"dgc5213"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME,","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"dgc5213"},"content":"                        PREFIX_ROLE, PREFIX_ADDRESS, PREFIX_DATE_OF_BIRTH, PREFIX_PHONE);","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":44,"author":{"gitId":"dgc5213"},"content":"        assert trimmedArgs !\u003d null;","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"dgc5213"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-02-28"},{"lineNumber":52,"author":{"gitId":"dgc5213"},"content":"            Name nameObjectArray \u003d (ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-03-02"},{"lineNumber":53,"author":{"gitId":"dgc5213"},"content":"            trimmedArgs \u003d nameObjectArray.toString().trim();","lastModifiedDate":"2021-02-28"},{"lineNumber":54,"author":{"gitId":"dgc5213"},"content":"            employeeKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-02-28"},{"lineNumber":55,"author":{"gitId":"dgc5213"},"content":"            findBy \u003d String.valueOf(PREFIX_NAME);","lastModifiedDate":"2021-02-28"},{"lineNumber":56,"author":{"gitId":"dgc5213"},"content":"        } else if (argMultimap.getValue(PREFIX_ROLE).isPresent()) {","lastModifiedDate":"2021-03-03"},{"lineNumber":57,"author":{"gitId":"dgc5213"},"content":"            Role roleObjectArray \u003d (ParserUtil.parseRole(argMultimap.getValue(PREFIX_ROLE).get()));","lastModifiedDate":"2021-03-02"},{"lineNumber":58,"author":{"gitId":"dgc5213"},"content":"            trimmedArgs \u003d roleObjectArray.toString().trim();","lastModifiedDate":"2021-02-28"},{"lineNumber":59,"author":{"gitId":"dgc5213"},"content":"            employeeKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-02-28"},{"lineNumber":60,"author":{"gitId":"dgc5213"},"content":"            findBy \u003d String.valueOf(PREFIX_ROLE);","lastModifiedDate":"2021-02-28"},{"lineNumber":61,"author":{"gitId":"dgc5213"},"content":"        } else if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"dgc5213"},"content":"            Address addressObjectArray \u003d (ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"dgc5213"},"content":"            trimmedArgs \u003d addressObjectArray.toString().trim();","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"dgc5213"},"content":"            employeeKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"dgc5213"},"content":"            findBy \u003d String.valueOf(PREFIX_ADDRESS);","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"dgc5213"},"content":"        } else if (argMultimap.getValue(PREFIX_DATE_OF_BIRTH).isPresent()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"dgc5213"},"content":"            DateOfBirth dobObjectArray \u003d (ParserUtil.parseDateOfBirth","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"dgc5213"},"content":"                    (argMultimap.getValue(PREFIX_DATE_OF_BIRTH).get()));","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"dgc5213"},"content":"            trimmedArgs \u003d dobObjectArray.toString().trim();","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"dgc5213"},"content":"            employeeKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"dgc5213"},"content":"            findBy \u003d String.valueOf(PREFIX_DATE_OF_BIRTH);","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"dgc5213"},"content":"        } else if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"dgc5213"},"content":"            Phone phoneObjectArray \u003d (ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"dgc5213"},"content":"            trimmedArgs \u003d phoneObjectArray.toString().trim();","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"dgc5213"},"content":"            employeeKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"dgc5213"},"content":"            findBy \u003d String.valueOf(PREFIX_PHONE);","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"dgc5213"},"content":"        } else {","lastModifiedDate":"2021-03-03"},{"lineNumber":78,"author":{"gitId":"dgc5213"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-03"},{"lineNumber":79,"author":{"gitId":"dgc5213"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-03"},{"lineNumber":80,"author":{"gitId":"dgc5213"},"content":"        }","lastModifiedDate":"2021-02-28"},{"lineNumber":81,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":82,"author":{"gitId":"dgc5213"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(employeeKeywords), findBy));","lastModifiedDate":"2021-02-28"},{"lineNumber":83,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"dgc5213":56,"e0260222":5,"-":26}},{"path":"src/main/java/employeetracker/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.logic.parser;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.commands.Command;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"e0260222":3,"-":13}},{"path":"src/main/java/employeetracker/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.logic.parser;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.core.index.Index;","lastModifiedDate":"2021-02-20"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.util.StringUtil;","lastModifiedDate":"2021-02-20"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-20"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Address;","lastModifiedDate":"2021-02-27"},{"lineNumber":13,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.DateOfBirth;","lastModifiedDate":"2021-02-27"},{"lineNumber":14,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.DateOfJoining;","lastModifiedDate":"2021-02-27"},{"lineNumber":15,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Email;","lastModifiedDate":"2021-02-27"},{"lineNumber":16,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Name;","lastModifiedDate":"2021-02-27"},{"lineNumber":17,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Phone;","lastModifiedDate":"2021-02-27"},{"lineNumber":18,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Role;","lastModifiedDate":"2021-02-27"},{"lineNumber":19,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Salary;","lastModifiedDate":"2021-02-27"},{"lineNumber":20,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.tag.Tag;","lastModifiedDate":"2021-02-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"e0260222"},"content":"    /**","lastModifiedDate":"2021-02-24"},{"lineNumber":58,"author":{"gitId":"e0260222"},"content":"     * Parses a {@code String role} into a {@code Role}.","lastModifiedDate":"2021-03-11"},{"lineNumber":59,"author":{"gitId":"e0260222"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-02-24"},{"lineNumber":60,"author":{"gitId":"e0260222"},"content":"     *","lastModifiedDate":"2021-02-24"},{"lineNumber":61,"author":{"gitId":"e0260222"},"content":"     * @throws ParseException if the given {@code role} is invalid.","lastModifiedDate":"2021-02-24"},{"lineNumber":62,"author":{"gitId":"e0260222"},"content":"     */","lastModifiedDate":"2021-02-24"},{"lineNumber":63,"author":{"gitId":"e0260222"},"content":"    public static Role parseRole(String role) throws ParseException {","lastModifiedDate":"2021-02-24"},{"lineNumber":64,"author":{"gitId":"e0260222"},"content":"        requireNonNull(role);","lastModifiedDate":"2021-02-24"},{"lineNumber":65,"author":{"gitId":"e0260222"},"content":"        String trimmedRole \u003d role.trim();","lastModifiedDate":"2021-02-24"},{"lineNumber":66,"author":{"gitId":"e0260222"},"content":"        if (!Role.isValidRole(trimmedRole)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":67,"author":{"gitId":"e0260222"},"content":"            throw new ParseException(Role.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-11"},{"lineNumber":68,"author":{"gitId":"e0260222"},"content":"        }","lastModifiedDate":"2021-02-24"},{"lineNumber":69,"author":{"gitId":"e0260222"},"content":"        return new Role(trimmedRole);","lastModifiedDate":"2021-02-24"},{"lineNumber":70,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-24"},{"lineNumber":71,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"e0260222"},"content":"    /**","lastModifiedDate":"2021-02-22"},{"lineNumber":118,"author":{"gitId":"e0260222"},"content":"     * Parses a {@code String dateOfBirth} into an {@code DateOfBirth}.","lastModifiedDate":"2021-02-22"},{"lineNumber":119,"author":{"gitId":"e0260222"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-02-22"},{"lineNumber":120,"author":{"gitId":"e0260222"},"content":"     *","lastModifiedDate":"2021-02-22"},{"lineNumber":121,"author":{"gitId":"e0260222"},"content":"     * @throws ParseException if the given {@code dateOfBirth} is invalid.","lastModifiedDate":"2021-02-22"},{"lineNumber":122,"author":{"gitId":"e0260222"},"content":"     */","lastModifiedDate":"2021-02-22"},{"lineNumber":123,"author":{"gitId":"e0260222"},"content":"    public static DateOfBirth parseDateOfBirth(String dateOfBirth) throws ParseException {","lastModifiedDate":"2021-02-22"},{"lineNumber":124,"author":{"gitId":"e0260222"},"content":"        requireNonNull(dateOfBirth);","lastModifiedDate":"2021-02-22"},{"lineNumber":125,"author":{"gitId":"e0260222"},"content":"        String trimmedDateOfBirth \u003d dateOfBirth.trim();","lastModifiedDate":"2021-02-22"},{"lineNumber":126,"author":{"gitId":"e0260222"},"content":"        if (!DateOfBirth.isValidDateOfBirth(trimmedDateOfBirth)) {","lastModifiedDate":"2021-02-22"},{"lineNumber":127,"author":{"gitId":"e0260222"},"content":"            throw new ParseException(DateOfBirth.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-02-23"},{"lineNumber":128,"author":{"gitId":"e0260222"},"content":"        }","lastModifiedDate":"2021-02-22"},{"lineNumber":129,"author":{"gitId":"e0260222"},"content":"        return new DateOfBirth(trimmedDateOfBirth);","lastModifiedDate":"2021-02-22"},{"lineNumber":130,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-22"},{"lineNumber":131,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":132,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":133,"author":{"gitId":"e0260222"},"content":"    /**","lastModifiedDate":"2021-02-23"},{"lineNumber":134,"author":{"gitId":"e0260222"},"content":"     * Parses a {@code String dateOfJoining} into an {@code DateOfJoining}.","lastModifiedDate":"2021-02-23"},{"lineNumber":135,"author":{"gitId":"e0260222"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-02-23"},{"lineNumber":136,"author":{"gitId":"e0260222"},"content":"     *","lastModifiedDate":"2021-02-23"},{"lineNumber":137,"author":{"gitId":"e0260222"},"content":"     * @throws ParseException if the given {@code dateOfJoining} is invalid.","lastModifiedDate":"2021-02-23"},{"lineNumber":138,"author":{"gitId":"e0260222"},"content":"     */","lastModifiedDate":"2021-02-23"},{"lineNumber":139,"author":{"gitId":"e0260222"},"content":"    public static DateOfJoining parseDateOfJoining(String dateOfJoining) throws ParseException {","lastModifiedDate":"2021-02-23"},{"lineNumber":140,"author":{"gitId":"e0260222"},"content":"        requireNonNull(dateOfJoining);","lastModifiedDate":"2021-02-23"},{"lineNumber":141,"author":{"gitId":"e0260222"},"content":"        String trimmedDateOfJoining \u003d dateOfJoining.trim();","lastModifiedDate":"2021-02-23"},{"lineNumber":142,"author":{"gitId":"e0260222"},"content":"        if (!DateOfJoining.isValidDateOfJoining(trimmedDateOfJoining)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":143,"author":{"gitId":"e0260222"},"content":"            throw new ParseException(DateOfJoining.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-02-23"},{"lineNumber":144,"author":{"gitId":"e0260222"},"content":"        }","lastModifiedDate":"2021-02-23"},{"lineNumber":145,"author":{"gitId":"e0260222"},"content":"        return new DateOfJoining(trimmedDateOfJoining);","lastModifiedDate":"2021-02-23"},{"lineNumber":146,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-23"},{"lineNumber":147,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":148,"author":{"gitId":"e0260222"},"content":"    /**","lastModifiedDate":"2021-02-24"},{"lineNumber":149,"author":{"gitId":"e0260222"},"content":"     * Parses a {@code String salary} into an {@code Salary}.","lastModifiedDate":"2021-02-24"},{"lineNumber":150,"author":{"gitId":"e0260222"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-02-24"},{"lineNumber":151,"author":{"gitId":"e0260222"},"content":"     *","lastModifiedDate":"2021-02-24"},{"lineNumber":152,"author":{"gitId":"e0260222"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2021-02-24"},{"lineNumber":153,"author":{"gitId":"e0260222"},"content":"     */","lastModifiedDate":"2021-02-24"},{"lineNumber":154,"author":{"gitId":"e0260222"},"content":"    public static Salary parseSalary(String salary) throws ParseException {","lastModifiedDate":"2021-02-24"},{"lineNumber":155,"author":{"gitId":"e0260222"},"content":"        requireNonNull(salary);","lastModifiedDate":"2021-02-24"},{"lineNumber":156,"author":{"gitId":"e0260222"},"content":"        String trimmedSalary \u003d salary.trim();","lastModifiedDate":"2021-02-24"},{"lineNumber":157,"author":{"gitId":"e0260222"},"content":"        if (!Salary.isValidSalary(trimmedSalary)) {","lastModifiedDate":"2021-02-24"},{"lineNumber":158,"author":{"gitId":"e0260222"},"content":"            throw new ParseException(Salary.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-02-24"},{"lineNumber":159,"author":{"gitId":"e0260222"},"content":"        }","lastModifiedDate":"2021-02-24"},{"lineNumber":160,"author":{"gitId":"e0260222"},"content":"        return new Salary(trimmedSalary);","lastModifiedDate":"2021-02-24"},{"lineNumber":161,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-24"},{"lineNumber":162,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"dgc5213":1,"e0260222":73,"-":115}},{"path":"src/main/java/employeetracker/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.logic.parser;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"e0260222":1,"-":38}},{"path":"src/main/java/employeetracker/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daiweinus"},"content":"package employeetracker.logic.parser;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"daiweinus"},"content":"import static employeetracker.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"daiweinus"},"content":"import employeetracker.logic.commands.SortCommand;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"daiweinus"},"content":"import employeetracker.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"daiweinus"},"content":"/**","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"daiweinus"},"content":" * Parses input arguments and creates a new SortCommand object","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"daiweinus"},"content":" */","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"daiweinus"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"daiweinus"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"daiweinus"},"content":"     * Parses the given {@code String} of arguments in the context of the SortCommand","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"daiweinus"},"content":"     * and returns an SortCommand object for execution.","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"daiweinus"},"content":"     * @throws ParseException if the input field does not conform the expected format","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"daiweinus"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"daiweinus"},"content":"    public SortCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"daiweinus"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"daiweinus"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"daiweinus"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"daiweinus"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"daiweinus"},"content":"        if (!trimmedArgs.equalsIgnoreCase(\"n\")","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"daiweinus"},"content":"                \u0026\u0026 !trimmedArgs.equalsIgnoreCase(\"s\")","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"daiweinus"},"content":"                \u0026\u0026 !trimmedArgs.equalsIgnoreCase(\"j\")","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"daiweinus"},"content":"                \u0026\u0026 !trimmedArgs.equalsIgnoreCase(\"b\")) {","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"daiweinus"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"daiweinus"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"daiweinus"},"content":"        return new SortCommand(trimmedArgs);","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"daiweinus"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"daiweinus"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"daiweinus":33}},{"path":"src/main/java/employeetracker/logic/parser/StatsCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chenduo1412"},"content":"package employeetracker.logic.parser;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"Chenduo1412"},"content":"import static employeetracker.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"Chenduo1412"},"content":"import employeetracker.logic.commands.StatsCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"Chenduo1412"},"content":"import employeetracker.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"Chenduo1412"},"content":"public class StatsCommandParser implements Parser\u003cStatsCommand\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"Chenduo1412"},"content":"    public static final String COMMAND_WORD \u003d \"stats\";","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"Chenduo1412"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"Chenduo1412"},"content":"     * Parses the given {@code String} of arguments in the context of the StatsCommand","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"Chenduo1412"},"content":"     * and returns an StatsCommand object for execution.","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"Chenduo1412"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"Chenduo1412"},"content":"    public StatsCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"Chenduo1412"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"Chenduo1412"},"content":"        if (!trimmedArgs.equals(COMMAND_WORD)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"Chenduo1412"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, \"Invalid stats command\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"Chenduo1412"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"Chenduo1412"},"content":"        return new StatsCommand(trimmedArgs);","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"Chenduo1412"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"Chenduo1412"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"Chenduo1412":24}},{"path":"src/main/java/employeetracker/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.logic.parser.exceptions;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"e0260222":2,"-":15}},{"path":"src/main/java/employeetracker/model/EmployeeTracker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.model;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.UniqueEmployeeList;","lastModifiedDate":"2021-02-28"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-02-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":" * Wraps all data at the employee-tracker level","lastModifiedDate":"2021-02-27"},{"lineNumber":13,"author":{"gitId":"e0260222"},"content":" * Duplicates are not allowed (by .isSameEmployee comparison)","lastModifiedDate":"2021-02-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"e0260222"},"content":"public class EmployeeTracker implements ReadOnlyEmployeeTracker {","lastModifiedDate":"2021-02-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"e0260222"},"content":"    private final UniqueEmployeeList employees;","lastModifiedDate":"2021-02-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"e0260222"},"content":"        employees \u003d new UniqueEmployeeList();","lastModifiedDate":"2021-02-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"e0260222"},"content":"    public EmployeeTracker() {}","lastModifiedDate":"2021-02-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"e0260222"},"content":"     * Creates an EmployeeTracker using the Employees in the {@code toBeCopied}","lastModifiedDate":"2021-02-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"e0260222"},"content":"    public EmployeeTracker(ReadOnlyEmployeeTracker toBeCopied) {","lastModifiedDate":"2021-02-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"e0260222"},"content":"     * Replaces the contents of the employee list with {@code employees}.","lastModifiedDate":"2021-02-27"},{"lineNumber":44,"author":{"gitId":"e0260222"},"content":"     * {@code employees} must not contain duplicate employees.","lastModifiedDate":"2021-02-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"e0260222"},"content":"    public void setEmployees(List\u003cEmployee\u003e employees) {","lastModifiedDate":"2021-02-28"},{"lineNumber":47,"author":{"gitId":"e0260222"},"content":"        this.employees.setEmployees(employees);","lastModifiedDate":"2021-02-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"e0260222"},"content":"     * Resets the existing data of this {@code EmployeeTracker} with {@code newData}.","lastModifiedDate":"2021-02-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"e0260222"},"content":"    public void resetData(ReadOnlyEmployeeTracker newData) {","lastModifiedDate":"2021-02-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"e0260222"},"content":"        setEmployees(newData.getEmployeeList());","lastModifiedDate":"2021-02-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"e0260222"},"content":"    //// employee-level operations","lastModifiedDate":"2021-02-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"e0260222"},"content":"     * Returns true if a employee with the same identity as {@code employee} exists in the Employee Tracker.","lastModifiedDate":"2021-02-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"e0260222"},"content":"    public boolean hasEmployee(Employee employee) {","lastModifiedDate":"2021-02-28"},{"lineNumber":65,"author":{"gitId":"e0260222"},"content":"        requireNonNull(employee);","lastModifiedDate":"2021-02-27"},{"lineNumber":66,"author":{"gitId":"e0260222"},"content":"        return employees.contains(employee);","lastModifiedDate":"2021-02-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"daiweinus"},"content":"     * Adds a employee to the Employee Tracker.","lastModifiedDate":"2021-03-11"},{"lineNumber":71,"author":{"gitId":"e0260222"},"content":"     * The employee must not already exist in the Employee Tracker.","lastModifiedDate":"2021-02-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"e0260222"},"content":"    public void addEmployee(Employee p) {","lastModifiedDate":"2021-02-28"},{"lineNumber":74,"author":{"gitId":"e0260222"},"content":"        employees.add(p);","lastModifiedDate":"2021-02-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"e0260222"},"content":"     * Replaces the given employee {@code target} in the list with {@code editedEmployee}.","lastModifiedDate":"2021-02-27"},{"lineNumber":79,"author":{"gitId":"daiweinus"},"content":"     * {@code target} must exist in the Employee Tracker.","lastModifiedDate":"2021-03-11"},{"lineNumber":80,"author":{"gitId":"e0260222"},"content":"     * The employee identity of {@code editedEmployee} must not be the same as another existing employee in the","lastModifiedDate":"2021-02-27"},{"lineNumber":81,"author":{"gitId":"daiweinus"},"content":"     * Employee Tracker.","lastModifiedDate":"2021-03-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"e0260222"},"content":"    public void setEmployee(Employee target, Employee editedEmployee) {","lastModifiedDate":"2021-02-28"},{"lineNumber":84,"author":{"gitId":"e0260222"},"content":"        requireNonNull(editedEmployee);","lastModifiedDate":"2021-02-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"e0260222"},"content":"        employees.setEmployee(target, editedEmployee);","lastModifiedDate":"2021-02-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"daiweinus"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":90,"author":{"gitId":"daiweinus"},"content":"     * Removes {@code key} from this {@code EmployeeTracker}.","lastModifiedDate":"2021-03-11"},{"lineNumber":91,"author":{"gitId":"daiweinus"},"content":"     * {@code key} must exist in the Employee Tracker.","lastModifiedDate":"2021-03-11"},{"lineNumber":92,"author":{"gitId":"daiweinus"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":93,"author":{"gitId":"daiweinus"},"content":"    public void sortEmployee(String field) {","lastModifiedDate":"2021-03-11"},{"lineNumber":94,"author":{"gitId":"daiweinus"},"content":"        employees.sortEmployee(field);","lastModifiedDate":"2021-03-11"},{"lineNumber":95,"author":{"gitId":"daiweinus"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":96,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"e0260222"},"content":"     * Removes {@code key} from this {@code EmployeeTracker}.","lastModifiedDate":"2021-02-20"},{"lineNumber":99,"author":{"gitId":"daiweinus"},"content":"     * {@code key} must exist in the Employee Tracker.","lastModifiedDate":"2021-03-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"e0260222"},"content":"    public void removeEmployee(Employee key) {","lastModifiedDate":"2021-02-28"},{"lineNumber":102,"author":{"gitId":"e0260222"},"content":"        employees.remove(key);","lastModifiedDate":"2021-02-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"e0260222"},"content":"        return employees.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2021-02-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"e0260222"},"content":"    public ObservableList\u003cEmployee\u003e getEmployeeList() {","lastModifiedDate":"2021-02-28"},{"lineNumber":115,"author":{"gitId":"e0260222"},"content":"        return employees.asUnmodifiableObservableList();","lastModifiedDate":"2021-02-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"e0260222"},"content":"                || (other instanceof EmployeeTracker // instanceof handles nulls","lastModifiedDate":"2021-02-20"},{"lineNumber":122,"author":{"gitId":"e0260222"},"content":"                \u0026\u0026 employees.equals(((EmployeeTracker) other).employees));","lastModifiedDate":"2021-02-28"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"e0260222"},"content":"        return employees.hashCode();","lastModifiedDate":"2021-02-28"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"Chenduo1412"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":131,"author":{"gitId":"Chenduo1412"},"content":"     *  Print the user stats statements.","lastModifiedDate":"2021-03-20"},{"lineNumber":132,"author":{"gitId":"Chenduo1412"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":133,"author":{"gitId":"Chenduo1412"},"content":"    public String getStatement() {","lastModifiedDate":"2021-03-17"},{"lineNumber":134,"author":{"gitId":"Chenduo1412"},"content":"        String statement \u003d \"\";","lastModifiedDate":"2021-03-17"},{"lineNumber":135,"author":{"gitId":"Chenduo1412"},"content":"        statement +\u003d \"Total Employees: \" + employees.noOfemployees() + \"\\n\";","lastModifiedDate":"2021-03-17"},{"lineNumber":136,"author":{"gitId":"Chenduo1412"},"content":"        statement +\u003d \"Total Salary: $\" + String.format(\"%.2f\", employees.getTotalSalary()) + \"\\n\";","lastModifiedDate":"2021-03-18"},{"lineNumber":137,"author":{"gitId":"Chenduo1412"},"content":"        statement +\u003d \"Highest Salary: $\" + employees.getHighestSalary() + \"\\n\";","lastModifiedDate":"2021-03-18"},{"lineNumber":138,"author":{"gitId":"Chenduo1412"},"content":"        statement +\u003d \"Lowest Salary: $\" + employees.getLowestSalary() + \"\\n\";","lastModifiedDate":"2021-03-18"},{"lineNumber":139,"author":{"gitId":"Chenduo1412"},"content":"        statement +\u003d \"Average Salary: $\" + String.format(\"%.2f\", employees.getAvgSalary()) + \"\\n\";","lastModifiedDate":"2021-03-18"},{"lineNumber":140,"author":{"gitId":"Chenduo1412"},"content":"        statement +\u003d \"Longest Tenure: \" + employees.getLongestTenure() + \"\\n\";","lastModifiedDate":"2021-03-17"},{"lineNumber":141,"author":{"gitId":"Chenduo1412"},"content":"        statement +\u003d \"Shortest Tenure: \" + employees.getShortestTenure() + \"\\n\";","lastModifiedDate":"2021-03-17"},{"lineNumber":142,"author":{"gitId":"Chenduo1412"},"content":"        statement +\u003d \"Average Tenure: \" + employees.getAvgTenure();","lastModifiedDate":"2021-03-20"},{"lineNumber":143,"author":{"gitId":"Chenduo1412"},"content":"        return statement;","lastModifiedDate":"2021-03-17"},{"lineNumber":144,"author":{"gitId":"Chenduo1412"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"daiweinus":12,"e0260222":41,"Chenduo1412":16,"-":76}},{"path":"src/main/java/employeetracker/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.model;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.core.GuiSettings;","lastModifiedDate":"2021-02-20"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-02-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"e0260222"},"content":"    Predicate\u003cEmployee\u003e PREDICATE_SHOW_ALL_EMPLOYEES \u003d unused -\u003e true;","lastModifiedDate":"2021-02-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"e0260222"},"content":"     * Returns the user prefs\u0027 Employee Tracker file path.","lastModifiedDate":"2021-02-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"e0260222"},"content":"    Path getEmployeeTrackerFilePath();","lastModifiedDate":"2021-02-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"e0260222"},"content":"     * Sets the user prefs\u0027 Employee Tracker file path.","lastModifiedDate":"2021-02-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"e0260222"},"content":"    void setEmployeeTrackerFilePath(Path employeeTrackerFilePath);","lastModifiedDate":"2021-02-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"e0260222"},"content":"     * Replaces Employee Tracker data with the data in {@code employeeTracker}.","lastModifiedDate":"2021-02-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"e0260222"},"content":"    void setEmployeeTracker(ReadOnlyEmployeeTracker employeeTracker);","lastModifiedDate":"2021-02-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"e0260222"},"content":"    /** Returns the EmployeeTracker */","lastModifiedDate":"2021-02-20"},{"lineNumber":53,"author":{"gitId":"e0260222"},"content":"    ReadOnlyEmployeeTracker getEmployeeTracker();","lastModifiedDate":"2021-02-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"e0260222"},"content":"     * Returns true if a employee with the same identity as {@code employee} exists in the Employee Tracker.","lastModifiedDate":"2021-02-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"e0260222"},"content":"    boolean hasEmployee(Employee employee);","lastModifiedDate":"2021-02-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"e0260222"},"content":"     * Deletes the given employee.","lastModifiedDate":"2021-02-27"},{"lineNumber":62,"author":{"gitId":"e0260222"},"content":"     * The employee must exist in the Employee Tracker.","lastModifiedDate":"2021-02-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"e0260222"},"content":"    void deleteEmployee(Employee target);","lastModifiedDate":"2021-02-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"e0260222"},"content":"     * Adds the given employee.","lastModifiedDate":"2021-02-27"},{"lineNumber":68,"author":{"gitId":"e0260222"},"content":"     * {@code employee} must not already exist in the Employee Tracker.","lastModifiedDate":"2021-02-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"e0260222"},"content":"    void addEmployee(Employee employee);","lastModifiedDate":"2021-02-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"e0260222"},"content":"     * Replaces the given employee {@code target} with {@code editedEmployee}.","lastModifiedDate":"2021-02-27"},{"lineNumber":74,"author":{"gitId":"e0260222"},"content":"     * {@code target} must exist in the Employee Tracker.","lastModifiedDate":"2021-02-27"},{"lineNumber":75,"author":{"gitId":"e0260222"},"content":"     * The employee identity of {@code editedEmployee} must not be the same as another existing employee","lastModifiedDate":"2021-02-27"},{"lineNumber":76,"author":{"gitId":"e0260222"},"content":"     * in the Employee Tracker.","lastModifiedDate":"2021-02-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"e0260222"},"content":"    void setEmployee(Employee target, Employee editedEmployee);","lastModifiedDate":"2021-02-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"e0260222"},"content":"    /** Returns an unmodifiable view of the filtered employee list */","lastModifiedDate":"2021-02-27"},{"lineNumber":81,"author":{"gitId":"e0260222"},"content":"    ObservableList\u003cEmployee\u003e getFilteredEmployeeList();","lastModifiedDate":"2021-02-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"e0260222"},"content":"     * Updates the filter of the filtered employee list to filter by the given {@code predicate}.","lastModifiedDate":"2021-02-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"e0260222"},"content":"    void updateFilteredEmployeeList(Predicate\u003cEmployee\u003e predicate);","lastModifiedDate":"2021-02-28"},{"lineNumber":88,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":89,"author":{"gitId":"daiweinus"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":90,"author":{"gitId":"daiweinus"},"content":"     * Sorts the exist employees list in Employee Tracker.","lastModifiedDate":"2021-03-11"},{"lineNumber":91,"author":{"gitId":"daiweinus"},"content":"     * {@code field} must be chart n, s, d, b.","lastModifiedDate":"2021-03-11"},{"lineNumber":92,"author":{"gitId":"daiweinus"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":93,"author":{"gitId":"daiweinus"},"content":"    void sortEmployee(String field);","lastModifiedDate":"2021-03-11"},{"lineNumber":94,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"Chenduo1412"},"content":"    String getStatement();","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"daiweinus":6,"e0260222":30,"Chenduo1412":2,"-":58}},{"path":"src/main/java/employeetracker/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.model;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.core.GuiSettings;","lastModifiedDate":"2021-02-20"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.core.LogsCenter;","lastModifiedDate":"2021-02-20"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":13,"author":{"gitId":"e0260222"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-02-20"},{"lineNumber":14,"author":{"gitId":"e0260222"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2021-02-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"e0260222"},"content":" * Represents the in-memory model of the employee tracker data.","lastModifiedDate":"2021-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"e0260222"},"content":"    private final EmployeeTracker employeeTracker;","lastModifiedDate":"2021-02-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"e0260222"},"content":"    private final FilteredList\u003cEmployee\u003e filteredEmployees;","lastModifiedDate":"2021-02-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"e0260222"},"content":"     * Initializes a ModelManager with the given employeeTracker and userPrefs.","lastModifiedDate":"2021-02-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"e0260222"},"content":"    public ModelManager(ReadOnlyEmployeeTracker employeeTracker, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-02-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"e0260222"},"content":"        requireAllNonNull(employeeTracker, userPrefs);","lastModifiedDate":"2021-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"e0260222"},"content":"        logger.fine(\"Initializing with address book: \" + employeeTracker + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-02-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"e0260222"},"content":"        this.employeeTracker \u003d new EmployeeTracker(employeeTracker);","lastModifiedDate":"2021-02-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"e0260222"},"content":"        filteredEmployees \u003d new FilteredList\u003c\u003e(this.employeeTracker.getEmployeeList());","lastModifiedDate":"2021-02-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"e0260222"},"content":"        this(new EmployeeTracker(), new UserPrefs());","lastModifiedDate":"2021-02-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"e0260222"},"content":"    public Path getEmployeeTrackerFilePath() {","lastModifiedDate":"2021-02-20"},{"lineNumber":70,"author":{"gitId":"e0260222"},"content":"        return userPrefs.getEmployeeTrackerFilePath();","lastModifiedDate":"2021-02-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"e0260222"},"content":"    public void setEmployeeTrackerFilePath(Path employeeTrackerFilePath) {","lastModifiedDate":"2021-02-27"},{"lineNumber":75,"author":{"gitId":"e0260222"},"content":"        requireNonNull(employeeTrackerFilePath);","lastModifiedDate":"2021-02-27"},{"lineNumber":76,"author":{"gitId":"e0260222"},"content":"        userPrefs.setEmployeeTrackerFilePath(employeeTrackerFilePath);","lastModifiedDate":"2021-02-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"e0260222"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d EmployeeTracker \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-02-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"e0260222"},"content":"    public void setEmployeeTracker(ReadOnlyEmployeeTracker employeeTracker) {","lastModifiedDate":"2021-02-20"},{"lineNumber":83,"author":{"gitId":"e0260222"},"content":"        this.employeeTracker.resetData(employeeTracker);","lastModifiedDate":"2021-02-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"e0260222"},"content":"    public ReadOnlyEmployeeTracker getEmployeeTracker() {","lastModifiedDate":"2021-02-20"},{"lineNumber":88,"author":{"gitId":"e0260222"},"content":"        return employeeTracker;","lastModifiedDate":"2021-02-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"e0260222"},"content":"    public boolean hasEmployee(Employee employee) {","lastModifiedDate":"2021-02-28"},{"lineNumber":93,"author":{"gitId":"e0260222"},"content":"        requireNonNull(employee);","lastModifiedDate":"2021-02-27"},{"lineNumber":94,"author":{"gitId":"e0260222"},"content":"        return employeeTracker.hasEmployee(employee);","lastModifiedDate":"2021-02-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"e0260222"},"content":"    public void deleteEmployee(Employee target) {","lastModifiedDate":"2021-02-28"},{"lineNumber":99,"author":{"gitId":"e0260222"},"content":"        employeeTracker.removeEmployee(target);","lastModifiedDate":"2021-02-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"e0260222"},"content":"    public void addEmployee(Employee employee) {","lastModifiedDate":"2021-02-28"},{"lineNumber":104,"author":{"gitId":"e0260222"},"content":"        employeeTracker.addEmployee(employee);","lastModifiedDate":"2021-02-28"},{"lineNumber":105,"author":{"gitId":"e0260222"},"content":"        updateFilteredEmployeeList(PREDICATE_SHOW_ALL_EMPLOYEES);","lastModifiedDate":"2021-02-28"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":109,"author":{"gitId":"e0260222"},"content":"    public void setEmployee(Employee target, Employee editedEmployee) {","lastModifiedDate":"2021-02-28"},{"lineNumber":110,"author":{"gitId":"e0260222"},"content":"        requireAllNonNull(target, editedEmployee);","lastModifiedDate":"2021-02-27"},{"lineNumber":111,"author":{"gitId":"e0260222"},"content":"        employeeTracker.setEmployee(target, editedEmployee);","lastModifiedDate":"2021-02-28"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"daiweinus"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":115,"author":{"gitId":"daiweinus"},"content":"    public void sortEmployee(String field) {","lastModifiedDate":"2021-03-11"},{"lineNumber":116,"author":{"gitId":"daiweinus"},"content":"        employeeTracker.sortEmployee(field);","lastModifiedDate":"2021-03-11"},{"lineNumber":117,"author":{"gitId":"daiweinus"},"content":"        updateFilteredEmployeeList(PREDICATE_SHOW_ALL_EMPLOYEES);","lastModifiedDate":"2021-03-11"},{"lineNumber":118,"author":{"gitId":"daiweinus"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":119,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":120,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"e0260222"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Employee List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-02-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":124,"author":{"gitId":"e0260222"},"content":"     * Returns an unmodifiable view of the list of {@code Employee} backed by the internal list of","lastModifiedDate":"2021-02-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":128,"author":{"gitId":"e0260222"},"content":"    public ObservableList\u003cEmployee\u003e getFilteredEmployeeList() {","lastModifiedDate":"2021-02-28"},{"lineNumber":129,"author":{"gitId":"e0260222"},"content":"        return filteredEmployees;","lastModifiedDate":"2021-02-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":133,"author":{"gitId":"e0260222"},"content":"    public void updateFilteredEmployeeList(Predicate\u003cEmployee\u003e predicate) {","lastModifiedDate":"2021-02-28"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":135,"author":{"gitId":"e0260222"},"content":"        filteredEmployees.setPredicate(predicate);","lastModifiedDate":"2021-02-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"e0260222"},"content":"        return employeeTracker.equals(other.employeeTracker)","lastModifiedDate":"2021-02-20"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"e0260222"},"content":"                \u0026\u0026 filteredEmployees.equals(other.filteredEmployees);","lastModifiedDate":"2021-02-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"Chenduo1412"},"content":"    public String getStatement() {","lastModifiedDate":"2021-03-17"},{"lineNumber":157,"author":{"gitId":"Chenduo1412"},"content":"        String statement \u003d employeeTracker.getStatement();","lastModifiedDate":"2021-03-17"},{"lineNumber":158,"author":{"gitId":"Chenduo1412"},"content":"        return statement;","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"Chenduo1412"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"daiweinus":6,"e0260222":47,"Chenduo1412":5,"-":102}},{"path":"src/main/java/employeetracker/model/ReadOnlyEmployeeTracker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.model;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":" * Unmodifiable view of an employee tracker","lastModifiedDate":"2021-02-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"public interface ReadOnlyEmployeeTracker {","lastModifiedDate":"2021-02-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"daiweinus"},"content":"     * Returns an unmodifiable view of the employees list.","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"daiweinus"},"content":"     * This list will not contain any duplicate employees.","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"e0260222"},"content":"    ObservableList\u003cEmployee\u003e getEmployeeList();","lastModifiedDate":"2021-02-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"daiweinus":2,"e0260222":6,"-":9}},{"path":"src/main/java/employeetracker/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.model;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.core.GuiSettings;","lastModifiedDate":"2021-02-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"e0260222"},"content":"    Path getEmployeeTrackerFilePath();","lastModifiedDate":"2021-02-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"e0260222":3,"-":13}},{"path":"src/main/java/employeetracker/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.model;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.core.GuiSettings;","lastModifiedDate":"2021-02-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"e0260222"},"content":"    private Path employeeTrackerFilePath \u003d Paths.get(\"data\" , \"employeetracker.json\");","lastModifiedDate":"2021-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"e0260222"},"content":"        setEmployeeTrackerFilePath(newUserPrefs.getEmployeeTrackerFilePath());","lastModifiedDate":"2021-02-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"e0260222"},"content":"    public Path getEmployeeTrackerFilePath() {","lastModifiedDate":"2021-02-20"},{"lineNumber":51,"author":{"gitId":"e0260222"},"content":"        return employeeTrackerFilePath;","lastModifiedDate":"2021-02-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"e0260222"},"content":"    public void setEmployeeTrackerFilePath(Path employeeTrackerFilePath) {","lastModifiedDate":"2021-02-20"},{"lineNumber":55,"author":{"gitId":"e0260222"},"content":"        requireNonNull(employeeTrackerFilePath);","lastModifiedDate":"2021-02-20"},{"lineNumber":56,"author":{"gitId":"e0260222"},"content":"        this.employeeTrackerFilePath \u003d employeeTrackerFilePath;","lastModifiedDate":"2021-02-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"e0260222"},"content":"                \u0026\u0026 employeeTrackerFilePath.equals(o.employeeTrackerFilePath);","lastModifiedDate":"2021-02-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"e0260222"},"content":"        return Objects.hash(guiSettings, employeeTrackerFilePath);","lastModifiedDate":"2021-02-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"e0260222"},"content":"        sb.append(\"\\nLocal data file location : \" + employeeTrackerFilePath);","lastModifiedDate":"2021-02-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"e0260222":12,"-":75}},{"path":"src/main/java/employeetracker/model/employee/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.model.employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":" * Represents an Employee\u0027s address in the Employee Tracker.","lastModifiedDate":"2021-02-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"e0260222"},"content":"        assert(value !\u003d null);","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"e0260222"},"content":"        assert(value !\u003d null);","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"e0260222":5,"-":54}},{"path":"src/main/java/employeetracker/model/employee/DateOfBirth.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.model.employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-02-22"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-02-22"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"/**","lastModifiedDate":"2021-02-23"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":" * Represents an Employee\u0027s date of birth in the Employee Tracker.","lastModifiedDate":"2021-02-28"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDateOfBirth(String)}","lastModifiedDate":"2021-02-23"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":" */","lastModifiedDate":"2021-02-23"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"public class DateOfBirth {","lastModifiedDate":"2021-02-22"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Date of birth should be in yyyy-mm-dd format\";","lastModifiedDate":"2021-02-23"},{"lineNumber":13,"author":{"gitId":"e0260222"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$\";","lastModifiedDate":"2021-02-22"},{"lineNumber":14,"author":{"gitId":"e0260222"},"content":"    public final String value;","lastModifiedDate":"2021-02-22"},{"lineNumber":15,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":16,"author":{"gitId":"e0260222"},"content":"    /**","lastModifiedDate":"2021-02-22"},{"lineNumber":17,"author":{"gitId":"e0260222"},"content":"     * Constructs a {@code DateOfBirth}.","lastModifiedDate":"2021-02-22"},{"lineNumber":18,"author":{"gitId":"e0260222"},"content":"     *","lastModifiedDate":"2021-02-22"},{"lineNumber":19,"author":{"gitId":"e0260222"},"content":"     * @param dateOfBirth A valid date of birth.","lastModifiedDate":"2021-02-22"},{"lineNumber":20,"author":{"gitId":"e0260222"},"content":"     */","lastModifiedDate":"2021-02-22"},{"lineNumber":21,"author":{"gitId":"e0260222"},"content":"    public DateOfBirth(String dateOfBirth) {","lastModifiedDate":"2021-02-22"},{"lineNumber":22,"author":{"gitId":"e0260222"},"content":"        requireNonNull(dateOfBirth);","lastModifiedDate":"2021-02-22"},{"lineNumber":23,"author":{"gitId":"e0260222"},"content":"        checkArgument(isValidDateOfBirth(dateOfBirth), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-02-22"},{"lineNumber":24,"author":{"gitId":"e0260222"},"content":"        value \u003d dateOfBirth;","lastModifiedDate":"2021-02-22"},{"lineNumber":25,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-22"},{"lineNumber":26,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":27,"author":{"gitId":"e0260222"},"content":"    /**","lastModifiedDate":"2021-02-22"},{"lineNumber":28,"author":{"gitId":"e0260222"},"content":"     * Returns true if a given string is a valid date of birth.","lastModifiedDate":"2021-02-22"},{"lineNumber":29,"author":{"gitId":"e0260222"},"content":"     */","lastModifiedDate":"2021-02-22"},{"lineNumber":30,"author":{"gitId":"e0260222"},"content":"    public static boolean isValidDateOfBirth(String test) {","lastModifiedDate":"2021-02-22"},{"lineNumber":31,"author":{"gitId":"e0260222"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-02-22"},{"lineNumber":32,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-22"},{"lineNumber":33,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":34,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"e0260222"},"content":"    @Override","lastModifiedDate":"2021-02-22"},{"lineNumber":36,"author":{"gitId":"e0260222"},"content":"    public String toString() {","lastModifiedDate":"2021-02-22"},{"lineNumber":37,"author":{"gitId":"e0260222"},"content":"        assert(value !\u003d null);","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"e0260222"},"content":"        return value;","lastModifiedDate":"2021-02-22"},{"lineNumber":39,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-22"},{"lineNumber":40,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":41,"author":{"gitId":"e0260222"},"content":"    @Override","lastModifiedDate":"2021-02-22"},{"lineNumber":42,"author":{"gitId":"e0260222"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-02-22"},{"lineNumber":43,"author":{"gitId":"e0260222"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-02-22"},{"lineNumber":44,"author":{"gitId":"e0260222"},"content":"                || (other instanceof DateOfBirth // instanceof handles nulls","lastModifiedDate":"2021-02-23"},{"lineNumber":45,"author":{"gitId":"e0260222"},"content":"                \u0026\u0026 value.equals(((DateOfBirth) other).value)); // state check","lastModifiedDate":"2021-02-23"},{"lineNumber":46,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-22"},{"lineNumber":47,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":48,"author":{"gitId":"e0260222"},"content":"    @Override","lastModifiedDate":"2021-02-22"},{"lineNumber":49,"author":{"gitId":"e0260222"},"content":"    public int hashCode() {","lastModifiedDate":"2021-02-22"},{"lineNumber":50,"author":{"gitId":"e0260222"},"content":"        assert(value !\u003d null);","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"e0260222"},"content":"        return value.hashCode();","lastModifiedDate":"2021-02-22"},{"lineNumber":52,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-22"},{"lineNumber":53,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":54,"author":{"gitId":"e0260222"},"content":"}","lastModifiedDate":"2021-02-22"}],"authorContributionMap":{"dgc5213":1,"e0260222":53}},{"path":"src/main/java/employeetracker/model/employee/DateOfJoining.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.model.employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-02-23"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-02-23"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"/**","lastModifiedDate":"2021-02-23"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":" * Represents an Employee\u0027s date of joining in the Employee Tracker.","lastModifiedDate":"2021-02-28"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDateOfJoining(String)}","lastModifiedDate":"2021-02-23"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":" */","lastModifiedDate":"2021-02-23"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"public class DateOfJoining {","lastModifiedDate":"2021-02-23"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Date of joining should be in yyyy-mm-dd format\";","lastModifiedDate":"2021-02-23"},{"lineNumber":13,"author":{"gitId":"e0260222"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$\";","lastModifiedDate":"2021-02-23"},{"lineNumber":14,"author":{"gitId":"e0260222"},"content":"    public final String value;","lastModifiedDate":"2021-02-23"},{"lineNumber":15,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":16,"author":{"gitId":"e0260222"},"content":"    /**","lastModifiedDate":"2021-02-23"},{"lineNumber":17,"author":{"gitId":"e0260222"},"content":"     * Constructs a {@code DateOfJoining}.","lastModifiedDate":"2021-02-23"},{"lineNumber":18,"author":{"gitId":"e0260222"},"content":"     *","lastModifiedDate":"2021-02-23"},{"lineNumber":19,"author":{"gitId":"e0260222"},"content":"     * @param dateOfJoining A valid date of joining.","lastModifiedDate":"2021-02-23"},{"lineNumber":20,"author":{"gitId":"e0260222"},"content":"     */","lastModifiedDate":"2021-02-23"},{"lineNumber":21,"author":{"gitId":"e0260222"},"content":"    public DateOfJoining(String dateOfJoining) {","lastModifiedDate":"2021-02-23"},{"lineNumber":22,"author":{"gitId":"e0260222"},"content":"        requireNonNull(dateOfJoining);","lastModifiedDate":"2021-02-23"},{"lineNumber":23,"author":{"gitId":"e0260222"},"content":"        checkArgument(isValidDateOfJoining(dateOfJoining), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-02-23"},{"lineNumber":24,"author":{"gitId":"e0260222"},"content":"        value \u003d dateOfJoining;","lastModifiedDate":"2021-02-23"},{"lineNumber":25,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-23"},{"lineNumber":26,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":27,"author":{"gitId":"e0260222"},"content":"    /**","lastModifiedDate":"2021-02-23"},{"lineNumber":28,"author":{"gitId":"e0260222"},"content":"     * Returns true if a given string is a valid date of joining.","lastModifiedDate":"2021-02-23"},{"lineNumber":29,"author":{"gitId":"e0260222"},"content":"     */","lastModifiedDate":"2021-02-23"},{"lineNumber":30,"author":{"gitId":"e0260222"},"content":"    public static boolean isValidDateOfJoining(String test) {","lastModifiedDate":"2021-02-23"},{"lineNumber":31,"author":{"gitId":"e0260222"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-02-23"},{"lineNumber":32,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-23"},{"lineNumber":33,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":34,"author":{"gitId":"e0260222"},"content":"    @Override","lastModifiedDate":"2021-02-23"},{"lineNumber":35,"author":{"gitId":"e0260222"},"content":"    public String toString() {","lastModifiedDate":"2021-02-23"},{"lineNumber":36,"author":{"gitId":"e0260222"},"content":"        assert(value !\u003d null);","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"e0260222"},"content":"        return value;","lastModifiedDate":"2021-02-23"},{"lineNumber":38,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-23"},{"lineNumber":39,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":40,"author":{"gitId":"e0260222"},"content":"    @Override","lastModifiedDate":"2021-02-23"},{"lineNumber":41,"author":{"gitId":"e0260222"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-02-23"},{"lineNumber":42,"author":{"gitId":"e0260222"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-02-23"},{"lineNumber":43,"author":{"gitId":"e0260222"},"content":"                || (other instanceof DateOfJoining // instanceof handles nulls","lastModifiedDate":"2021-02-23"},{"lineNumber":44,"author":{"gitId":"e0260222"},"content":"                \u0026\u0026 value.equals(((DateOfJoining) other).value)); // state check","lastModifiedDate":"2021-02-23"},{"lineNumber":45,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-23"},{"lineNumber":46,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":47,"author":{"gitId":"e0260222"},"content":"    @Override","lastModifiedDate":"2021-02-23"},{"lineNumber":48,"author":{"gitId":"e0260222"},"content":"    public int hashCode() {","lastModifiedDate":"2021-02-23"},{"lineNumber":49,"author":{"gitId":"e0260222"},"content":"        assert(value !\u003d null);","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"e0260222"},"content":"        return value.hashCode();","lastModifiedDate":"2021-02-23"},{"lineNumber":51,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-23"},{"lineNumber":52,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":53,"author":{"gitId":"e0260222"},"content":"}","lastModifiedDate":"2021-02-23"}],"authorContributionMap":{"e0260222":53}},{"path":"src/main/java/employeetracker/model/employee/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.model.employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":" * Represents an Employee\u0027s email in the Employee Tracker.","lastModifiedDate":"2021-02-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"!#$%\u0026\u0027*+/\u003d?`{|}~^.-\";","lastModifiedDate":"2018-02-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \") .\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. \"","lastModifiedDate":"2018-02-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    - be at least 2 characters long\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    - start and end with alphanumeric characters\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - consist of alphanumeric characters, a period or a hyphen for the characters in between, if any.\";","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^[\\\\w\" + SPECIAL_CHARACTERS + \"]+\";","lastModifiedDate":"2018-02-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_FIRST_CHARACTER_REGEX \u003d \"[^\\\\W_]\"; // alphanumeric characters except underscore","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_MIDDLE_REGEX \u003d \"[a-zA-Z0-9.-]*\"; // alphanumeric, period and hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_CHARACTER_REGEX \u003d \"[^\\\\W_]$\";","lastModifiedDate":"2018-02-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\"","lastModifiedDate":"2018-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + DOMAIN_FIRST_CHARACTER_REGEX + DOMAIN_MIDDLE_REGEX + DOMAIN_LAST_CHARACTER_REGEX;","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"e0260222"},"content":"        assert(value !\u003d null);","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"e0260222"},"content":"        assert(value !\u003d null);","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"e0260222":5,"-":64}},{"path":"src/main/java/employeetracker/model/employee/Employee.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.model.employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.tag.Tag;","lastModifiedDate":"2021-02-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"e0260222"},"content":" * Represents an Employee in the Employee Tracker.","lastModifiedDate":"2021-02-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"e0260222"},"content":"public class Employee {","lastModifiedDate":"2021-02-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"e0260222"},"content":"    private final DateOfBirth dateOfBirth;","lastModifiedDate":"2021-02-22"},{"lineNumber":23,"author":{"gitId":"e0260222"},"content":"    private final DateOfJoining dateOfJoining;","lastModifiedDate":"2021-02-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"e0260222"},"content":"    private final Role role;","lastModifiedDate":"2021-02-24"},{"lineNumber":28,"author":{"gitId":"e0260222"},"content":"    private final Salary salary;","lastModifiedDate":"2021-02-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"e0260222"},"content":"    public Employee(Name name, Role role, Phone phone, Email email, Address address, DateOfBirth dateOfBirth,","lastModifiedDate":"2021-02-27"},{"lineNumber":35,"author":{"gitId":"e0260222"},"content":"                    DateOfJoining dateOfJoining, Salary salary, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-02-24"},{"lineNumber":36,"author":{"gitId":"e0260222"},"content":"        requireAllNonNull(name, role, phone, email, address, dateOfBirth, dateOfJoining, salary, tags);","lastModifiedDate":"2021-02-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"e0260222"},"content":"        this.role \u003d role;","lastModifiedDate":"2021-02-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"e0260222"},"content":"        this.dateOfBirth \u003d dateOfBirth;","lastModifiedDate":"2021-02-22"},{"lineNumber":43,"author":{"gitId":"e0260222"},"content":"        this.dateOfJoining \u003d dateOfJoining;","lastModifiedDate":"2021-02-23"},{"lineNumber":44,"author":{"gitId":"e0260222"},"content":"        this.salary \u003d salary;","lastModifiedDate":"2021-02-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"e0260222"},"content":"    public Role getRole() {","lastModifiedDate":"2021-02-24"},{"lineNumber":53,"author":{"gitId":"e0260222"},"content":"        return role;","lastModifiedDate":"2021-02-24"},{"lineNumber":54,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-24"},{"lineNumber":55,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":68,"author":{"gitId":"e0260222"},"content":"    public DateOfBirth getDateOfBirth() {","lastModifiedDate":"2021-02-22"},{"lineNumber":69,"author":{"gitId":"e0260222"},"content":"        return dateOfBirth;","lastModifiedDate":"2021-02-22"},{"lineNumber":70,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-22"},{"lineNumber":71,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":72,"author":{"gitId":"e0260222"},"content":"    public DateOfJoining getDateOfJoining() {","lastModifiedDate":"2021-02-23"},{"lineNumber":73,"author":{"gitId":"e0260222"},"content":"        return dateOfJoining;","lastModifiedDate":"2021-02-23"},{"lineNumber":74,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-23"},{"lineNumber":75,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":76,"author":{"gitId":"e0260222"},"content":"    public Salary getSalary() {","lastModifiedDate":"2021-02-24"},{"lineNumber":77,"author":{"gitId":"e0260222"},"content":"        return salary;","lastModifiedDate":"2021-02-24"},{"lineNumber":78,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-24"},{"lineNumber":79,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"e0260222"},"content":"     * Returns true if both employees have the same name.","lastModifiedDate":"2021-02-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"e0260222"},"content":"    public boolean isSameEmployee(Employee otherEmployee) {","lastModifiedDate":"2021-02-28"},{"lineNumber":93,"author":{"gitId":"e0260222"},"content":"        if (otherEmployee \u003d\u003d this) {","lastModifiedDate":"2021-02-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"e0260222"},"content":"        if (otherEmployee \u003d\u003d null) {","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"e0260222"},"content":"            return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"e0260222"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"e0260222"},"content":"        boolean isSameName \u003d otherEmployee.getName().equals(getName());","lastModifiedDate":"2021-03-29"},{"lineNumber":102,"author":{"gitId":"e0260222"},"content":"        boolean isSameDateOfBirth \u003d otherEmployee.getDateOfBirth().equals(getDateOfBirth());","lastModifiedDate":"2021-03-29"},{"lineNumber":103,"author":{"gitId":"e0260222"},"content":"        return isSameName \u0026\u0026 isSameDateOfBirth;","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"e0260222"},"content":"     * Returns true if both employees have the same identity and data fields.","lastModifiedDate":"2021-02-28"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"e0260222"},"content":"        if (!(other instanceof Employee)) {","lastModifiedDate":"2021-02-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"e0260222"},"content":"        Employee otherEmployee \u003d (Employee) other;","lastModifiedDate":"2021-02-27"},{"lineNumber":121,"author":{"gitId":"e0260222"},"content":"        return otherEmployee.getName().equals(getName())","lastModifiedDate":"2021-02-27"},{"lineNumber":122,"author":{"gitId":"e0260222"},"content":"                \u0026\u0026 otherEmployee.getRole().equals(getRole())","lastModifiedDate":"2021-02-27"},{"lineNumber":123,"author":{"gitId":"e0260222"},"content":"                \u0026\u0026 otherEmployee.getPhone().equals(getPhone())","lastModifiedDate":"2021-02-27"},{"lineNumber":124,"author":{"gitId":"e0260222"},"content":"                \u0026\u0026 otherEmployee.getEmail().equals(getEmail())","lastModifiedDate":"2021-02-27"},{"lineNumber":125,"author":{"gitId":"e0260222"},"content":"                \u0026\u0026 otherEmployee.getAddress().equals(getAddress())","lastModifiedDate":"2021-02-27"},{"lineNumber":126,"author":{"gitId":"e0260222"},"content":"                \u0026\u0026 otherEmployee.getDateOfBirth().equals(getDateOfBirth())","lastModifiedDate":"2021-02-27"},{"lineNumber":127,"author":{"gitId":"e0260222"},"content":"                \u0026\u0026 otherEmployee.getDateOfJoining().equals(getDateOfJoining())","lastModifiedDate":"2021-02-27"},{"lineNumber":128,"author":{"gitId":"e0260222"},"content":"                \u0026\u0026 otherEmployee.getSalary().equals(getSalary())","lastModifiedDate":"2021-02-27"},{"lineNumber":129,"author":{"gitId":"e0260222"},"content":"                \u0026\u0026 otherEmployee.getTags().equals(getTags());","lastModifiedDate":"2021-02-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"e0260222"},"content":"        return Objects.hash(name, role, phone, email, address, dateOfBirth, dateOfJoining, salary, tags);","lastModifiedDate":"2021-02-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":142,"author":{"gitId":"e0260222"},"content":"                .append(\"; Role: \")","lastModifiedDate":"2021-02-24"},{"lineNumber":143,"author":{"gitId":"e0260222"},"content":"                .append(getRole())","lastModifiedDate":"2021-02-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":149,"author":{"gitId":"e0260222"},"content":"                .append(getAddress())","lastModifiedDate":"2021-02-22"},{"lineNumber":150,"author":{"gitId":"e0260222"},"content":"                .append(\"; Date of Birth: \")","lastModifiedDate":"2021-02-22"},{"lineNumber":151,"author":{"gitId":"e0260222"},"content":"                .append(getDateOfBirth())","lastModifiedDate":"2021-02-23"},{"lineNumber":152,"author":{"gitId":"e0260222"},"content":"                .append(\"; Date of Joining: \")","lastModifiedDate":"2021-02-23"},{"lineNumber":153,"author":{"gitId":"e0260222"},"content":"                .append(getDateOfJoining())","lastModifiedDate":"2021-02-24"},{"lineNumber":154,"author":{"gitId":"e0260222"},"content":"                .append(\"; Salary: \")","lastModifiedDate":"2021-02-24"},{"lineNumber":155,"author":{"gitId":"e0260222"},"content":"                .append(getSalary());","lastModifiedDate":"2021-02-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"e0260222":64,"-":101}},{"path":"src/main/java/employeetracker/model/employee/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.model.employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":" * Represents an Employee\u0027s name in the Employee Tracker.","lastModifiedDate":"2021-02-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"daiweinus"},"content":"     * The first character of the name must be a An alphanumeric \u0026 character.","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"e0260222"},"content":"        assert(fullName !\u003d null);","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"e0260222"},"content":"        assert(fullName !\u003d null);","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"daiweinus":1,"e0260222":5,"-":54}},{"path":"src/main/java/employeetracker/model/employee/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.model.employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_DATE_OF_BIRTH;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"dgc5213"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.util.StringUtil;","lastModifiedDate":"2021-02-20"},{"lineNumber":13,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"dgc5213"},"content":" * Tests that a {@code Employee}\u0027s {@code Name, Role} matches any of the keywords given.","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"e0260222"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cEmployee\u003e {","lastModifiedDate":"2021-02-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"dgc5213"},"content":"    private final String findBy;","lastModifiedDate":"2021-02-28"},{"lineNumber":20,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"dgc5213"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"dgc5213"},"content":"     * Tests that NameContainsKeywordsPredicate matches any of the keywords given.","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"dgc5213"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"dgc5213"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords, String findBy) {","lastModifiedDate":"2021-02-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"dgc5213"},"content":"        this.findBy \u003d findBy;","lastModifiedDate":"2021-02-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"e0260222"},"content":"    public boolean test(Employee employee) {","lastModifiedDate":"2021-02-27"},{"lineNumber":31,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":32,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":33,"author":{"gitId":"dgc5213"},"content":"        if (findBy.equals(String.valueOf(PREFIX_NAME))) {","lastModifiedDate":"2021-02-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"e0260222"},"content":"                    .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(employee.getName().fullName, keyword));","lastModifiedDate":"2021-02-27"},{"lineNumber":36,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":37,"author":{"gitId":"dgc5213"},"content":"        }","lastModifiedDate":"2021-02-28"},{"lineNumber":38,"author":{"gitId":"dgc5213"},"content":"        if (findBy.equals(String.valueOf(PREFIX_ROLE))) {","lastModifiedDate":"2021-02-28"},{"lineNumber":39,"author":{"gitId":"dgc5213"},"content":"            return keywords.stream()","lastModifiedDate":"2021-02-28"},{"lineNumber":40,"author":{"gitId":"dgc5213"},"content":"                    .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2021-03-02"},{"lineNumber":41,"author":{"gitId":"dgc5213"},"content":"                            String.valueOf(employee.getRole()), keyword));","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":43,"author":{"gitId":"dgc5213"},"content":"        }","lastModifiedDate":"2021-02-28"},{"lineNumber":44,"author":{"gitId":"dgc5213"},"content":"        if (findBy.equals(String.valueOf(PREFIX_ADDRESS))) {","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"dgc5213"},"content":"            return keywords.stream()","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"dgc5213"},"content":"                    .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"dgc5213"},"content":"                            String.valueOf(employee.getAddress()), keyword));","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"dgc5213"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"dgc5213"},"content":"        if (findBy.equals(String.valueOf(PREFIX_DATE_OF_BIRTH))) {","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"dgc5213"},"content":"            return keywords.stream()","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"dgc5213"},"content":"                    .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"dgc5213"},"content":"                            String.valueOf(employee.getDateOfBirth()), keyword));","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"dgc5213"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"dgc5213"},"content":"        if (findBy.equals(String.valueOf(PREFIX_PHONE))) {","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"dgc5213"},"content":"            return keywords.stream()","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"dgc5213"},"content":"                    .anyMatch(keyword -\u003e StringUtil.containsPartialWordIgnoreCase(","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"dgc5213"},"content":"                             String.valueOf(employee.getPhone()), keyword));","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"dgc5213"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":62,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":63,"author":{"gitId":"dgc5213"},"content":"        return false;","lastModifiedDate":"2021-02-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"dgc5213":46,"e0260222":5,"-":22}},{"path":"src/main/java/employeetracker/model/employee/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.model.employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":" * Represents an Employee\u0027s phone number in the Employee Tracker.","lastModifiedDate":"2021-02-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"e0260222"},"content":"        assert(value !\u003d null);","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"e0260222"},"content":"        assert(value !\u003d null);","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"e0260222":5,"-":49}},{"path":"src/main/java/employeetracker/model/employee/Role.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.model.employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-02-24"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-02-24"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"/**","lastModifiedDate":"2021-02-24"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":" * Represents an Employee\u0027s role in the Employee Tracker.","lastModifiedDate":"2021-02-28"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidRole(String)}","lastModifiedDate":"2021-02-24"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":" */","lastModifiedDate":"2021-02-24"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"public class Role {","lastModifiedDate":"2021-02-24"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Roles can take any values, and it should not be blank\";","lastModifiedDate":"2021-02-24"},{"lineNumber":13,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":14,"author":{"gitId":"e0260222"},"content":"    /*","lastModifiedDate":"2021-02-24"},{"lineNumber":15,"author":{"gitId":"e0260222"},"content":"     * The first character of the role must not be a whitespace,","lastModifiedDate":"2021-02-24"},{"lineNumber":16,"author":{"gitId":"e0260222"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-02-24"},{"lineNumber":17,"author":{"gitId":"e0260222"},"content":"     */","lastModifiedDate":"2021-02-24"},{"lineNumber":18,"author":{"gitId":"e0260222"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2021-02-24"},{"lineNumber":19,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":20,"author":{"gitId":"e0260222"},"content":"    public final String value;","lastModifiedDate":"2021-02-24"},{"lineNumber":21,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":22,"author":{"gitId":"e0260222"},"content":"    /**","lastModifiedDate":"2021-02-24"},{"lineNumber":23,"author":{"gitId":"e0260222"},"content":"     * Constructs an {@code Role}.","lastModifiedDate":"2021-02-24"},{"lineNumber":24,"author":{"gitId":"e0260222"},"content":"     *","lastModifiedDate":"2021-02-24"},{"lineNumber":25,"author":{"gitId":"e0260222"},"content":"     * @param role A valid role.","lastModifiedDate":"2021-02-24"},{"lineNumber":26,"author":{"gitId":"e0260222"},"content":"     */","lastModifiedDate":"2021-02-24"},{"lineNumber":27,"author":{"gitId":"e0260222"},"content":"    public Role(String role) {","lastModifiedDate":"2021-02-24"},{"lineNumber":28,"author":{"gitId":"e0260222"},"content":"        requireNonNull(role);","lastModifiedDate":"2021-02-24"},{"lineNumber":29,"author":{"gitId":"e0260222"},"content":"        checkArgument(isValidRole(role), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-02-24"},{"lineNumber":30,"author":{"gitId":"e0260222"},"content":"        value \u003d role;","lastModifiedDate":"2021-02-24"},{"lineNumber":31,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-24"},{"lineNumber":32,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":33,"author":{"gitId":"e0260222"},"content":"    /**","lastModifiedDate":"2021-02-24"},{"lineNumber":34,"author":{"gitId":"e0260222"},"content":"     * Returns true if a given string is a valid role.","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"e0260222"},"content":"     */","lastModifiedDate":"2021-02-24"},{"lineNumber":36,"author":{"gitId":"e0260222"},"content":"    public static boolean isValidRole(String test) {","lastModifiedDate":"2021-02-24"},{"lineNumber":37,"author":{"gitId":"e0260222"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-02-24"},{"lineNumber":38,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-24"},{"lineNumber":39,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":40,"author":{"gitId":"e0260222"},"content":"    @Override","lastModifiedDate":"2021-02-24"},{"lineNumber":41,"author":{"gitId":"e0260222"},"content":"    public String toString() {","lastModifiedDate":"2021-02-24"},{"lineNumber":42,"author":{"gitId":"e0260222"},"content":"        assert(value !\u003d null);","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"e0260222"},"content":"        return value;","lastModifiedDate":"2021-02-24"},{"lineNumber":44,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-24"},{"lineNumber":45,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":46,"author":{"gitId":"e0260222"},"content":"    @Override","lastModifiedDate":"2021-02-24"},{"lineNumber":47,"author":{"gitId":"e0260222"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-02-24"},{"lineNumber":48,"author":{"gitId":"e0260222"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-02-24"},{"lineNumber":49,"author":{"gitId":"e0260222"},"content":"                || (other instanceof Role // instanceof handles nulls","lastModifiedDate":"2021-02-24"},{"lineNumber":50,"author":{"gitId":"e0260222"},"content":"                \u0026\u0026 value.equals(((Role) other).value)); // state check","lastModifiedDate":"2021-02-24"},{"lineNumber":51,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-24"},{"lineNumber":52,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":53,"author":{"gitId":"e0260222"},"content":"    @Override","lastModifiedDate":"2021-02-24"},{"lineNumber":54,"author":{"gitId":"e0260222"},"content":"    public int hashCode() {","lastModifiedDate":"2021-02-24"},{"lineNumber":55,"author":{"gitId":"e0260222"},"content":"        assert(value !\u003d null);","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"e0260222"},"content":"        return value.hashCode();","lastModifiedDate":"2021-02-24"},{"lineNumber":57,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-24"},{"lineNumber":58,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":59,"author":{"gitId":"e0260222"},"content":"}","lastModifiedDate":"2021-02-24"}],"authorContributionMap":{"e0260222":59}},{"path":"src/main/java/employeetracker/model/employee/Salary.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.model.employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-02-24"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-02-24"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"/**","lastModifiedDate":"2021-02-24"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":" * Represents an Employee\u0027s salary in the Employee Tracker.","lastModifiedDate":"2021-02-28"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidSalary(String)}","lastModifiedDate":"2021-02-24"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":" */","lastModifiedDate":"2021-02-24"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"public class Salary {","lastModifiedDate":"2021-02-24"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Salary should be an integer\";","lastModifiedDate":"2021-02-24"},{"lineNumber":13,"author":{"gitId":"e0260222"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d+\";","lastModifiedDate":"2021-02-24"},{"lineNumber":14,"author":{"gitId":"e0260222"},"content":"    public final String value;","lastModifiedDate":"2021-02-24"},{"lineNumber":15,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":16,"author":{"gitId":"e0260222"},"content":"    /**","lastModifiedDate":"2021-02-24"},{"lineNumber":17,"author":{"gitId":"e0260222"},"content":"     * Constructs a {@code Salary}.","lastModifiedDate":"2021-02-24"},{"lineNumber":18,"author":{"gitId":"e0260222"},"content":"     *","lastModifiedDate":"2021-02-24"},{"lineNumber":19,"author":{"gitId":"e0260222"},"content":"     * @param salary A valid salary amount.","lastModifiedDate":"2021-02-24"},{"lineNumber":20,"author":{"gitId":"e0260222"},"content":"     */","lastModifiedDate":"2021-02-24"},{"lineNumber":21,"author":{"gitId":"e0260222"},"content":"    public Salary(String salary) {","lastModifiedDate":"2021-02-24"},{"lineNumber":22,"author":{"gitId":"e0260222"},"content":"        requireNonNull(salary);","lastModifiedDate":"2021-02-24"},{"lineNumber":23,"author":{"gitId":"e0260222"},"content":"        checkArgument(isValidSalary(salary), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-02-24"},{"lineNumber":24,"author":{"gitId":"e0260222"},"content":"        value \u003d salary;","lastModifiedDate":"2021-02-24"},{"lineNumber":25,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-24"},{"lineNumber":26,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":27,"author":{"gitId":"e0260222"},"content":"    /**","lastModifiedDate":"2021-02-24"},{"lineNumber":28,"author":{"gitId":"e0260222"},"content":"     * Returns true if a given string is a valid salary.","lastModifiedDate":"2021-02-24"},{"lineNumber":29,"author":{"gitId":"e0260222"},"content":"     */","lastModifiedDate":"2021-02-24"},{"lineNumber":30,"author":{"gitId":"e0260222"},"content":"    public static boolean isValidSalary(String test) {","lastModifiedDate":"2021-02-24"},{"lineNumber":31,"author":{"gitId":"e0260222"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-02-24"},{"lineNumber":32,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-24"},{"lineNumber":33,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":34,"author":{"gitId":"e0260222"},"content":"    @Override","lastModifiedDate":"2021-02-24"},{"lineNumber":35,"author":{"gitId":"e0260222"},"content":"    public String toString() {","lastModifiedDate":"2021-02-24"},{"lineNumber":36,"author":{"gitId":"e0260222"},"content":"        assert(value !\u003d null);","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"e0260222"},"content":"        return value;","lastModifiedDate":"2021-02-24"},{"lineNumber":38,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-24"},{"lineNumber":39,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":40,"author":{"gitId":"e0260222"},"content":"    @Override","lastModifiedDate":"2021-02-24"},{"lineNumber":41,"author":{"gitId":"e0260222"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-02-24"},{"lineNumber":42,"author":{"gitId":"e0260222"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-02-24"},{"lineNumber":43,"author":{"gitId":"e0260222"},"content":"                || (other instanceof Salary // instanceof handles nulls","lastModifiedDate":"2021-02-24"},{"lineNumber":44,"author":{"gitId":"e0260222"},"content":"                \u0026\u0026 value.equals(((Salary) other).value)); // state check","lastModifiedDate":"2021-02-24"},{"lineNumber":45,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-24"},{"lineNumber":46,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":47,"author":{"gitId":"e0260222"},"content":"    @Override","lastModifiedDate":"2021-02-24"},{"lineNumber":48,"author":{"gitId":"e0260222"},"content":"    public int hashCode() {","lastModifiedDate":"2021-02-24"},{"lineNumber":49,"author":{"gitId":"e0260222"},"content":"        assert(value !\u003d null);","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"e0260222"},"content":"        return value.hashCode();","lastModifiedDate":"2021-02-24"},{"lineNumber":51,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-24"},{"lineNumber":52,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":53,"author":{"gitId":"e0260222"},"content":"}","lastModifiedDate":"2021-02-24"}],"authorContributionMap":{"e0260222":53}},{"path":"src/main/java/employeetracker/model/employee/UniqueEmployeeList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.model.employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-02-27"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-02-27"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"Chenduo1412"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"Chenduo1412"},"content":"import java.util.Date;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-02-27"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"import java.util.List;","lastModifiedDate":"2021-02-27"},{"lineNumber":10,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.exceptions.DuplicateEmployeeException;","lastModifiedDate":"2021-02-28"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.exceptions.EmployeeNotFoundException;","lastModifiedDate":"2021-02-28"},{"lineNumber":13,"author":{"gitId":"e0260222"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-02-27"},{"lineNumber":14,"author":{"gitId":"e0260222"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-02-27"},{"lineNumber":15,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":16,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"e0260222"},"content":"/**","lastModifiedDate":"2021-02-27"},{"lineNumber":19,"author":{"gitId":"e0260222"},"content":" * A list of employees that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"e0260222"},"content":" * A employee is considered unique by comparing using {@code Employee#isSameEmployee(Employee)}. As such, adding and","lastModifiedDate":"2021-02-28"},{"lineNumber":21,"author":{"gitId":"e0260222"},"content":" * updating of persons uses Employee#isSameEmployee(Employee) for equality so as to ensure that the employee being added","lastModifiedDate":"2021-02-28"},{"lineNumber":22,"author":{"gitId":"e0260222"},"content":" * or updated is unique in terms of identity in the UniqueEmployeeList. However, the removal of a employee uses","lastModifiedDate":"2021-02-28"},{"lineNumber":23,"author":{"gitId":"e0260222"},"content":" * Employee#equals(Object) so as to ensure that the employee with exactly the same fields will be removed.","lastModifiedDate":"2021-02-27"},{"lineNumber":24,"author":{"gitId":"e0260222"},"content":" *","lastModifiedDate":"2021-02-27"},{"lineNumber":25,"author":{"gitId":"e0260222"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-02-27"},{"lineNumber":26,"author":{"gitId":"e0260222"},"content":" *","lastModifiedDate":"2021-02-27"},{"lineNumber":27,"author":{"gitId":"e0260222"},"content":" * @see Employee#isSameEmployee(Employee)","lastModifiedDate":"2021-02-28"},{"lineNumber":28,"author":{"gitId":"e0260222"},"content":" */","lastModifiedDate":"2021-02-27"},{"lineNumber":29,"author":{"gitId":"e0260222"},"content":"public class UniqueEmployeeList implements Iterable\u003cEmployee\u003e {","lastModifiedDate":"2021-02-28"},{"lineNumber":30,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":31,"author":{"gitId":"e0260222"},"content":"    private final ObservableList\u003cEmployee\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-02-27"},{"lineNumber":32,"author":{"gitId":"e0260222"},"content":"    private final ObservableList\u003cEmployee\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-02-27"},{"lineNumber":33,"author":{"gitId":"e0260222"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-02-27"},{"lineNumber":34,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":35,"author":{"gitId":"e0260222"},"content":"    /**","lastModifiedDate":"2021-02-27"},{"lineNumber":36,"author":{"gitId":"e0260222"},"content":"     * Returns true if the list contains an equivalent employee as the given argument.","lastModifiedDate":"2021-02-27"},{"lineNumber":37,"author":{"gitId":"e0260222"},"content":"     */","lastModifiedDate":"2021-02-27"},{"lineNumber":38,"author":{"gitId":"e0260222"},"content":"    public boolean contains(Employee toCheck) {","lastModifiedDate":"2021-02-27"},{"lineNumber":39,"author":{"gitId":"e0260222"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-02-27"},{"lineNumber":40,"author":{"gitId":"e0260222"},"content":"        return internalList.stream().anyMatch(toCheck::isSameEmployee);","lastModifiedDate":"2021-02-28"},{"lineNumber":41,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-27"},{"lineNumber":42,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":43,"author":{"gitId":"e0260222"},"content":"    /**","lastModifiedDate":"2021-02-27"},{"lineNumber":44,"author":{"gitId":"e0260222"},"content":"     * Adds a employee to the list.","lastModifiedDate":"2021-02-27"},{"lineNumber":45,"author":{"gitId":"e0260222"},"content":"     * The employee must not already exist in the list.","lastModifiedDate":"2021-02-27"},{"lineNumber":46,"author":{"gitId":"e0260222"},"content":"     */","lastModifiedDate":"2021-02-27"},{"lineNumber":47,"author":{"gitId":"e0260222"},"content":"    public void add(Employee toAdd) {","lastModifiedDate":"2021-02-27"},{"lineNumber":48,"author":{"gitId":"e0260222"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-02-27"},{"lineNumber":49,"author":{"gitId":"e0260222"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-02-27"},{"lineNumber":50,"author":{"gitId":"e0260222"},"content":"            throw new DuplicateEmployeeException();","lastModifiedDate":"2021-02-28"},{"lineNumber":51,"author":{"gitId":"e0260222"},"content":"        }","lastModifiedDate":"2021-02-27"},{"lineNumber":52,"author":{"gitId":"e0260222"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-02-27"},{"lineNumber":53,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-27"},{"lineNumber":54,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":55,"author":{"gitId":"e0260222"},"content":"    /**","lastModifiedDate":"2021-02-27"},{"lineNumber":56,"author":{"gitId":"e0260222"},"content":"     * Replaces the employee {@code target} in the list with {@code editedEmployee}.","lastModifiedDate":"2021-02-27"},{"lineNumber":57,"author":{"gitId":"e0260222"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-02-27"},{"lineNumber":58,"author":{"gitId":"e0260222"},"content":"     * The employee identity of {@code editedEmployee} must not be the same as another existing employee in the list.","lastModifiedDate":"2021-02-27"},{"lineNumber":59,"author":{"gitId":"e0260222"},"content":"     */","lastModifiedDate":"2021-02-27"},{"lineNumber":60,"author":{"gitId":"e0260222"},"content":"    public void setEmployee(Employee target, Employee editedEmployee) {","lastModifiedDate":"2021-02-28"},{"lineNumber":61,"author":{"gitId":"e0260222"},"content":"        requireAllNonNull(target, editedEmployee);","lastModifiedDate":"2021-02-27"},{"lineNumber":62,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":63,"author":{"gitId":"e0260222"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-02-27"},{"lineNumber":64,"author":{"gitId":"e0260222"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-02-27"},{"lineNumber":65,"author":{"gitId":"e0260222"},"content":"            throw new EmployeeNotFoundException();","lastModifiedDate":"2021-02-28"},{"lineNumber":66,"author":{"gitId":"e0260222"},"content":"        }","lastModifiedDate":"2021-02-27"},{"lineNumber":67,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":68,"author":{"gitId":"e0260222"},"content":"        if (!target.isSameEmployee(editedEmployee) \u0026\u0026 contains(editedEmployee)) {","lastModifiedDate":"2021-02-28"},{"lineNumber":69,"author":{"gitId":"e0260222"},"content":"            throw new DuplicateEmployeeException();","lastModifiedDate":"2021-02-28"},{"lineNumber":70,"author":{"gitId":"e0260222"},"content":"        }","lastModifiedDate":"2021-02-27"},{"lineNumber":71,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":72,"author":{"gitId":"e0260222"},"content":"        internalList.set(index, editedEmployee);","lastModifiedDate":"2021-02-27"},{"lineNumber":73,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-27"},{"lineNumber":74,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":75,"author":{"gitId":"e0260222"},"content":"    /**","lastModifiedDate":"2021-02-27"},{"lineNumber":76,"author":{"gitId":"e0260222"},"content":"     * Removes the equivalent employee from the list.","lastModifiedDate":"2021-02-27"},{"lineNumber":77,"author":{"gitId":"e0260222"},"content":"     * The employee must exist in the list.","lastModifiedDate":"2021-02-27"},{"lineNumber":78,"author":{"gitId":"e0260222"},"content":"     */","lastModifiedDate":"2021-02-27"},{"lineNumber":79,"author":{"gitId":"e0260222"},"content":"    public void remove(Employee toRemove) {","lastModifiedDate":"2021-02-27"},{"lineNumber":80,"author":{"gitId":"e0260222"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-02-27"},{"lineNumber":81,"author":{"gitId":"e0260222"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-02-27"},{"lineNumber":82,"author":{"gitId":"e0260222"},"content":"            throw new EmployeeNotFoundException();","lastModifiedDate":"2021-02-28"},{"lineNumber":83,"author":{"gitId":"e0260222"},"content":"        }","lastModifiedDate":"2021-02-27"},{"lineNumber":84,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-27"},{"lineNumber":85,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":86,"author":{"gitId":"e0260222"},"content":"    public void setEmployees(UniqueEmployeeList replacement) {","lastModifiedDate":"2021-02-28"},{"lineNumber":87,"author":{"gitId":"e0260222"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-02-27"},{"lineNumber":88,"author":{"gitId":"e0260222"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-02-27"},{"lineNumber":89,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-27"},{"lineNumber":90,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":91,"author":{"gitId":"e0260222"},"content":"    /**","lastModifiedDate":"2021-02-27"},{"lineNumber":92,"author":{"gitId":"e0260222"},"content":"     * Replaces the contents of this list with {@code employees}.","lastModifiedDate":"2021-02-27"},{"lineNumber":93,"author":{"gitId":"e0260222"},"content":"     * {@code employees} must not contain duplicate employees.","lastModifiedDate":"2021-02-27"},{"lineNumber":94,"author":{"gitId":"e0260222"},"content":"     */","lastModifiedDate":"2021-02-27"},{"lineNumber":95,"author":{"gitId":"e0260222"},"content":"    public void setEmployees(List\u003cEmployee\u003e employees) {","lastModifiedDate":"2021-02-28"},{"lineNumber":96,"author":{"gitId":"e0260222"},"content":"        requireAllNonNull(employees);","lastModifiedDate":"2021-02-27"},{"lineNumber":97,"author":{"gitId":"e0260222"},"content":"        if (!employeesAreUnique(employees)) {","lastModifiedDate":"2021-02-28"},{"lineNumber":98,"author":{"gitId":"e0260222"},"content":"            throw new DuplicateEmployeeException();","lastModifiedDate":"2021-02-28"},{"lineNumber":99,"author":{"gitId":"e0260222"},"content":"        }","lastModifiedDate":"2021-02-27"},{"lineNumber":100,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":101,"author":{"gitId":"e0260222"},"content":"        internalList.setAll(employees);","lastModifiedDate":"2021-02-27"},{"lineNumber":102,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-27"},{"lineNumber":103,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":104,"author":{"gitId":"e0260222"},"content":"    /**","lastModifiedDate":"2021-02-27"},{"lineNumber":105,"author":{"gitId":"e0260222"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-02-27"},{"lineNumber":106,"author":{"gitId":"e0260222"},"content":"     */","lastModifiedDate":"2021-02-27"},{"lineNumber":107,"author":{"gitId":"e0260222"},"content":"    public ObservableList\u003cEmployee\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-02-27"},{"lineNumber":108,"author":{"gitId":"e0260222"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-02-27"},{"lineNumber":109,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-27"},{"lineNumber":110,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":111,"author":{"gitId":"e0260222"},"content":"    @Override","lastModifiedDate":"2021-02-27"},{"lineNumber":112,"author":{"gitId":"e0260222"},"content":"    public Iterator\u003cEmployee\u003e iterator() {","lastModifiedDate":"2021-02-27"},{"lineNumber":113,"author":{"gitId":"e0260222"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-02-27"},{"lineNumber":114,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-27"},{"lineNumber":115,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":116,"author":{"gitId":"e0260222"},"content":"    @Override","lastModifiedDate":"2021-02-27"},{"lineNumber":117,"author":{"gitId":"e0260222"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-02-27"},{"lineNumber":118,"author":{"gitId":"e0260222"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-02-27"},{"lineNumber":119,"author":{"gitId":"e0260222"},"content":"                || (other instanceof UniqueEmployeeList // instanceof handles nulls","lastModifiedDate":"2021-02-28"},{"lineNumber":120,"author":{"gitId":"e0260222"},"content":"                        \u0026\u0026 internalList.equals(((UniqueEmployeeList) other).internalList));","lastModifiedDate":"2021-02-28"},{"lineNumber":121,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-27"},{"lineNumber":122,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":123,"author":{"gitId":"e0260222"},"content":"    @Override","lastModifiedDate":"2021-02-27"},{"lineNumber":124,"author":{"gitId":"e0260222"},"content":"    public int hashCode() {","lastModifiedDate":"2021-02-27"},{"lineNumber":125,"author":{"gitId":"e0260222"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-02-27"},{"lineNumber":126,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-27"},{"lineNumber":127,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":128,"author":{"gitId":"e0260222"},"content":"    /**","lastModifiedDate":"2021-02-27"},{"lineNumber":129,"author":{"gitId":"e0260222"},"content":"     * Returns true if {@code employees} contains only unique employees.","lastModifiedDate":"2021-02-27"},{"lineNumber":130,"author":{"gitId":"e0260222"},"content":"     */","lastModifiedDate":"2021-02-27"},{"lineNumber":131,"author":{"gitId":"e0260222"},"content":"    private boolean employeesAreUnique(List\u003cEmployee\u003e employees) {","lastModifiedDate":"2021-02-28"},{"lineNumber":132,"author":{"gitId":"e0260222"},"content":"        for (int i \u003d 0; i \u003c employees.size() - 1; i++) {","lastModifiedDate":"2021-02-27"},{"lineNumber":133,"author":{"gitId":"e0260222"},"content":"            for (int j \u003d i + 1; j \u003c employees.size(); j++) {","lastModifiedDate":"2021-02-27"},{"lineNumber":134,"author":{"gitId":"e0260222"},"content":"                if (employees.get(i).isSameEmployee(employees.get(j))) {","lastModifiedDate":"2021-02-28"},{"lineNumber":135,"author":{"gitId":"e0260222"},"content":"                    return false;","lastModifiedDate":"2021-02-27"},{"lineNumber":136,"author":{"gitId":"e0260222"},"content":"                }","lastModifiedDate":"2021-02-27"},{"lineNumber":137,"author":{"gitId":"e0260222"},"content":"            }","lastModifiedDate":"2021-02-27"},{"lineNumber":138,"author":{"gitId":"e0260222"},"content":"        }","lastModifiedDate":"2021-02-27"},{"lineNumber":139,"author":{"gitId":"e0260222"},"content":"        return true;","lastModifiedDate":"2021-02-27"},{"lineNumber":140,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-27"},{"lineNumber":141,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":142,"author":{"gitId":"daiweinus"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":143,"author":{"gitId":"daiweinus"},"content":"     * Sort the employees list by field.","lastModifiedDate":"2021-03-11"},{"lineNumber":144,"author":{"gitId":"daiweinus"},"content":"     * The employee must exist in the list.","lastModifiedDate":"2021-03-11"},{"lineNumber":145,"author":{"gitId":"daiweinus"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":146,"author":{"gitId":"daiweinus"},"content":"    public void sortEmployee(String field) {","lastModifiedDate":"2021-03-11"},{"lineNumber":147,"author":{"gitId":"daiweinus"},"content":"        switch (field.toLowerCase()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":148,"author":{"gitId":"daiweinus"},"content":"        case \"n\":","lastModifiedDate":"2021-03-11"},{"lineNumber":149,"author":{"gitId":"daiweinus"},"content":"            internalList.sort((s1, s2) -\u003e s1.getName().toString().compareToIgnoreCase(s2.getName().toString()));","lastModifiedDate":"2021-03-11"},{"lineNumber":150,"author":{"gitId":"daiweinus"},"content":"            break;","lastModifiedDate":"2021-03-11"},{"lineNumber":151,"author":{"gitId":"daiweinus"},"content":"        case \"s\":","lastModifiedDate":"2021-03-11"},{"lineNumber":152,"author":{"gitId":"daiweinus"},"content":"            internalList.sort((s1, s2) -\u003e s1.getSalary().value.compareToIgnoreCase(s2.getSalary().value));","lastModifiedDate":"2021-03-11"},{"lineNumber":153,"author":{"gitId":"daiweinus"},"content":"            break;","lastModifiedDate":"2021-03-11"},{"lineNumber":154,"author":{"gitId":"daiweinus"},"content":"        case \"j\":","lastModifiedDate":"2021-03-14"},{"lineNumber":155,"author":{"gitId":"daiweinus"},"content":"            internalList.sort((s1, s2) -\u003e s1.getDateOfJoining().value.compareToIgnoreCase(s2.getDateOfJoining().value));","lastModifiedDate":"2021-03-11"},{"lineNumber":156,"author":{"gitId":"daiweinus"},"content":"            break;","lastModifiedDate":"2021-03-11"},{"lineNumber":157,"author":{"gitId":"daiweinus"},"content":"        case \"b\":","lastModifiedDate":"2021-03-11"},{"lineNumber":158,"author":{"gitId":"daiweinus"},"content":"            internalList.sort((s1, s2) -\u003e s1.getDateOfBirth().value.compareToIgnoreCase(s2.getDateOfBirth().value));","lastModifiedDate":"2021-03-11"},{"lineNumber":159,"author":{"gitId":"daiweinus"},"content":"            break;","lastModifiedDate":"2021-03-11"},{"lineNumber":160,"author":{"gitId":"daiweinus"},"content":"        default:","lastModifiedDate":"2021-03-11"},{"lineNumber":161,"author":{"gitId":"daiweinus"},"content":"            assert false : \"Sort field Parameters: TYPE (must be the letter n, s, j or b)\";","lastModifiedDate":"2021-03-14"},{"lineNumber":162,"author":{"gitId":"daiweinus"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":163,"author":{"gitId":"daiweinus"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":164,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":165,"author":{"gitId":"Chenduo1412"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":166,"author":{"gitId":"Chenduo1412"},"content":"     * Get the number of employees in the list.","lastModifiedDate":"2021-03-17"},{"lineNumber":167,"author":{"gitId":"Chenduo1412"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":168,"author":{"gitId":"Chenduo1412"},"content":"    public int noOfemployees() {","lastModifiedDate":"2021-03-17"},{"lineNumber":169,"author":{"gitId":"Chenduo1412"},"content":"        return this.internalList.size();","lastModifiedDate":"2021-03-17"},{"lineNumber":170,"author":{"gitId":"Chenduo1412"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":171,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":172,"author":{"gitId":"Chenduo1412"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":173,"author":{"gitId":"Chenduo1412"},"content":"     * Get the total Salary expenses for all employee in the list.","lastModifiedDate":"2021-03-17"},{"lineNumber":174,"author":{"gitId":"Chenduo1412"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":175,"author":{"gitId":"Chenduo1412"},"content":"    public double getTotalSalary() {","lastModifiedDate":"2021-03-17"},{"lineNumber":176,"author":{"gitId":"Chenduo1412"},"content":"        double totalSalary \u003d 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":177,"author":{"gitId":"Chenduo1412"},"content":"        for (int i \u003d 0; i \u003c internalList.size(); i++) {","lastModifiedDate":"2021-03-17"},{"lineNumber":178,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":179,"author":{"gitId":"Chenduo1412"},"content":"            totalSalary +\u003d Double.parseDouble(internalList.get(i).getSalary().value);","lastModifiedDate":"2021-03-17"},{"lineNumber":180,"author":{"gitId":"Chenduo1412"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":181,"author":{"gitId":"Chenduo1412"},"content":"        return totalSalary;","lastModifiedDate":"2021-03-17"},{"lineNumber":182,"author":{"gitId":"Chenduo1412"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":183,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":184,"author":{"gitId":"Chenduo1412"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":185,"author":{"gitId":"Chenduo1412"},"content":"     * Get the Highest Salary employee and employee\u0027s name in the list.","lastModifiedDate":"2021-03-20"},{"lineNumber":186,"author":{"gitId":"Chenduo1412"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":187,"author":{"gitId":"Chenduo1412"},"content":"    public String getHighestSalary() {","lastModifiedDate":"2021-03-17"},{"lineNumber":188,"author":{"gitId":"Chenduo1412"},"content":"        double highestSalary \u003d 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":189,"author":{"gitId":"Chenduo1412"},"content":"        String highestSalaryEmployee \u003d \"\";","lastModifiedDate":"2021-03-17"},{"lineNumber":190,"author":{"gitId":"Chenduo1412"},"content":"        String highestSalaryResult \u003d \"\";","lastModifiedDate":"2021-03-17"},{"lineNumber":191,"author":{"gitId":"Chenduo1412"},"content":"        for (int i \u003d 0; i \u003c internalList.size(); i++) {","lastModifiedDate":"2021-03-17"},{"lineNumber":192,"author":{"gitId":"Chenduo1412"},"content":"            if (highestSalary \u003c Double.parseDouble(internalList.get(i).getSalary().value)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":193,"author":{"gitId":"Chenduo1412"},"content":"                highestSalary \u003d Double.parseDouble(internalList.get(i).getSalary().value);","lastModifiedDate":"2021-03-17"},{"lineNumber":194,"author":{"gitId":"Chenduo1412"},"content":"                highestSalaryEmployee \u003d internalList.get(i).getName().fullName;","lastModifiedDate":"2021-03-17"},{"lineNumber":195,"author":{"gitId":"Chenduo1412"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":196,"author":{"gitId":"Chenduo1412"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":197,"author":{"gitId":"Chenduo1412"},"content":"        highestSalaryResult \u003d String.format(\"%.2f\", highestSalary) + \" (\" + highestSalaryEmployee + \")\";","lastModifiedDate":"2021-03-17"},{"lineNumber":198,"author":{"gitId":"Chenduo1412"},"content":"        return highestSalaryResult;","lastModifiedDate":"2021-03-17"},{"lineNumber":199,"author":{"gitId":"Chenduo1412"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":200,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":201,"author":{"gitId":"Chenduo1412"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":202,"author":{"gitId":"Chenduo1412"},"content":"     * Get the lowest Salary employee and employee\u0027s name in the list.","lastModifiedDate":"2021-03-20"},{"lineNumber":203,"author":{"gitId":"Chenduo1412"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":204,"author":{"gitId":"Chenduo1412"},"content":"    public String getLowestSalary() {","lastModifiedDate":"2021-03-17"},{"lineNumber":205,"author":{"gitId":"Chenduo1412"},"content":"        double lowestSalary \u003d Double.parseDouble(internalList.get(0).getSalary().value);","lastModifiedDate":"2021-03-17"},{"lineNumber":206,"author":{"gitId":"Chenduo1412"},"content":"        String lowestSalaryEmployee \u003d internalList.get(0).getName().fullName;","lastModifiedDate":"2021-03-17"},{"lineNumber":207,"author":{"gitId":"Chenduo1412"},"content":"        String lowestSalaryResult \u003d \"\";","lastModifiedDate":"2021-03-17"},{"lineNumber":208,"author":{"gitId":"Chenduo1412"},"content":"        for (int i \u003d 1; i \u003c internalList.size(); i++) {","lastModifiedDate":"2021-03-17"},{"lineNumber":209,"author":{"gitId":"Chenduo1412"},"content":"            if (lowestSalary \u003e Double.parseDouble(internalList.get(i).getSalary().value)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":210,"author":{"gitId":"Chenduo1412"},"content":"                lowestSalary \u003d Double.parseDouble(internalList.get(i).getSalary().value);","lastModifiedDate":"2021-03-17"},{"lineNumber":211,"author":{"gitId":"Chenduo1412"},"content":"                lowestSalaryEmployee \u003d internalList.get(i).getName().fullName;","lastModifiedDate":"2021-03-17"},{"lineNumber":212,"author":{"gitId":"Chenduo1412"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":213,"author":{"gitId":"Chenduo1412"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":214,"author":{"gitId":"Chenduo1412"},"content":"        lowestSalaryResult \u003d String.format(\"%.2f\", lowestSalary) + \" (\" + lowestSalaryEmployee + \")\";","lastModifiedDate":"2021-03-17"},{"lineNumber":215,"author":{"gitId":"Chenduo1412"},"content":"        return lowestSalaryResult;","lastModifiedDate":"2021-03-17"},{"lineNumber":216,"author":{"gitId":"Chenduo1412"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":217,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":218,"author":{"gitId":"Chenduo1412"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":219,"author":{"gitId":"Chenduo1412"},"content":"     * Get the average Salary expenses for all employee in the list.","lastModifiedDate":"2021-03-20"},{"lineNumber":220,"author":{"gitId":"Chenduo1412"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":221,"author":{"gitId":"Chenduo1412"},"content":"    public double getAvgSalary() {","lastModifiedDate":"2021-03-17"},{"lineNumber":222,"author":{"gitId":"Chenduo1412"},"content":"        double avgSalary;","lastModifiedDate":"2021-03-17"},{"lineNumber":223,"author":{"gitId":"Chenduo1412"},"content":"        avgSalary \u003d getTotalSalary() / internalList.size();","lastModifiedDate":"2021-03-17"},{"lineNumber":224,"author":{"gitId":"Chenduo1412"},"content":"        return avgSalary;","lastModifiedDate":"2021-03-17"},{"lineNumber":225,"author":{"gitId":"Chenduo1412"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":226,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":227,"author":{"gitId":"Chenduo1412"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":228,"author":{"gitId":"Chenduo1412"},"content":"     * Get the Longest Tenure employee and employee\u0027s name in the list.","lastModifiedDate":"2021-03-20"},{"lineNumber":229,"author":{"gitId":"Chenduo1412"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":230,"author":{"gitId":"Chenduo1412"},"content":"    public String getLongestTenure() {","lastModifiedDate":"2021-03-17"},{"lineNumber":231,"author":{"gitId":"Chenduo1412"},"content":"        Date todaysDate \u003d new Date();","lastModifiedDate":"2021-03-17"},{"lineNumber":232,"author":{"gitId":"Chenduo1412"},"content":"        Date dateOfJoin;","lastModifiedDate":"2021-03-17"},{"lineNumber":233,"author":{"gitId":"Chenduo1412"},"content":"        long longest \u003d 0;","lastModifiedDate":"2021-03-18"},{"lineNumber":234,"author":{"gitId":"Chenduo1412"},"content":"        long diffInMillies;","lastModifiedDate":"2021-03-18"},{"lineNumber":235,"author":{"gitId":"Chenduo1412"},"content":"        long yearMiniSec \u003d Long.parseLong(\"31536000000\");","lastModifiedDate":"2021-03-17"},{"lineNumber":236,"author":{"gitId":"Chenduo1412"},"content":"        long dayMiniSec \u003d Long.parseLong(\"86400000\");","lastModifiedDate":"2021-03-17"},{"lineNumber":237,"author":{"gitId":"Chenduo1412"},"content":"        String employeeName \u003d \"\";","lastModifiedDate":"2021-03-17"},{"lineNumber":238,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":239,"author":{"gitId":"Chenduo1412"},"content":"        try {","lastModifiedDate":"2021-03-17"},{"lineNumber":240,"author":{"gitId":"Chenduo1412"},"content":"            for (int i \u003d 0; i \u003c internalList.size(); i++) {","lastModifiedDate":"2021-03-17"},{"lineNumber":241,"author":{"gitId":"Chenduo1412"},"content":"                dateOfJoin \u003d new SimpleDateFormat(\"yyyy-MM-dd\").parse(internalList.get(i).getDateOfJoining().value);","lastModifiedDate":"2021-03-17"},{"lineNumber":242,"author":{"gitId":"Chenduo1412"},"content":"                diffInMillies \u003d todaysDate.getTime() - dateOfJoin.getTime();","lastModifiedDate":"2021-03-17"},{"lineNumber":243,"author":{"gitId":"Chenduo1412"},"content":"                if (longest \u003c diffInMillies) {","lastModifiedDate":"2021-03-17"},{"lineNumber":244,"author":{"gitId":"Chenduo1412"},"content":"                    longest \u003d diffInMillies;","lastModifiedDate":"2021-03-17"},{"lineNumber":245,"author":{"gitId":"Chenduo1412"},"content":"                    employeeName \u003d internalList.get(i).getName().fullName;","lastModifiedDate":"2021-03-17"},{"lineNumber":246,"author":{"gitId":"Chenduo1412"},"content":"                }","lastModifiedDate":"2021-03-17"},{"lineNumber":247,"author":{"gitId":"Chenduo1412"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":248,"author":{"gitId":"Chenduo1412"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-03-18"},{"lineNumber":249,"author":{"gitId":"Chenduo1412"},"content":"            System.out.println(e.toString());","lastModifiedDate":"2021-03-18"},{"lineNumber":250,"author":{"gitId":"Chenduo1412"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":251,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":252,"author":{"gitId":"Chenduo1412"},"content":"        int totalYears \u003d (int) (longest / yearMiniSec);","lastModifiedDate":"2021-03-17"},{"lineNumber":253,"author":{"gitId":"Chenduo1412"},"content":"        int days \u003d (int) (longest / dayMiniSec - (totalYears * 365));","lastModifiedDate":"2021-03-17"},{"lineNumber":254,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":255,"author":{"gitId":"Chenduo1412"},"content":"        return totalYears + \" Year(s) \" + days + \" Day(s) (\" + employeeName + \")\";","lastModifiedDate":"2021-03-20"},{"lineNumber":256,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":257,"author":{"gitId":"Chenduo1412"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":258,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":259,"author":{"gitId":"Chenduo1412"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":260,"author":{"gitId":"Chenduo1412"},"content":"     * Get the Shortest Tenure employee and employee\u0027s name in the list.","lastModifiedDate":"2021-03-20"},{"lineNumber":261,"author":{"gitId":"Chenduo1412"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":262,"author":{"gitId":"Chenduo1412"},"content":"    public String getShortestTenure() {","lastModifiedDate":"2021-03-17"},{"lineNumber":263,"author":{"gitId":"Chenduo1412"},"content":"        int totalYears \u003d 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":264,"author":{"gitId":"Chenduo1412"},"content":"        int days \u003d 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":265,"author":{"gitId":"Chenduo1412"},"content":"        String employeeName \u003d internalList.get(0).getName().fullName;","lastModifiedDate":"2021-03-17"},{"lineNumber":266,"author":{"gitId":"Chenduo1412"},"content":"        try {","lastModifiedDate":"2021-03-17"},{"lineNumber":267,"author":{"gitId":"Chenduo1412"},"content":"            Date todaysDate \u003d new Date();","lastModifiedDate":"2021-03-17"},{"lineNumber":268,"author":{"gitId":"Chenduo1412"},"content":"            Date dateOfJoin;","lastModifiedDate":"2021-03-17"},{"lineNumber":269,"author":{"gitId":"Chenduo1412"},"content":"            long yearMiniSec \u003d Long.parseLong(\"31536000000\");","lastModifiedDate":"2021-03-17"},{"lineNumber":270,"author":{"gitId":"Chenduo1412"},"content":"            long dayMiniSec \u003d Long.parseLong(\"86400000\");","lastModifiedDate":"2021-03-17"},{"lineNumber":271,"author":{"gitId":"Chenduo1412"},"content":"            long shortest \u003d","lastModifiedDate":"2021-03-18"},{"lineNumber":272,"author":{"gitId":"Chenduo1412"},"content":"                    new SimpleDateFormat(\"yyyy-MM-dd\").parse(internalList.get(0).getDateOfJoining().value).getTime();","lastModifiedDate":"2021-03-18"},{"lineNumber":273,"author":{"gitId":"Chenduo1412"},"content":"            long diffInMillies;","lastModifiedDate":"2021-03-18"},{"lineNumber":274,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":275,"author":{"gitId":"Chenduo1412"},"content":"            for (int i \u003d 1; i \u003c internalList.size(); i++) {","lastModifiedDate":"2021-03-17"},{"lineNumber":276,"author":{"gitId":"Chenduo1412"},"content":"                dateOfJoin \u003d new SimpleDateFormat(\"yyyy-MM-dd\").parse(internalList.get(i).getDateOfJoining().value);","lastModifiedDate":"2021-03-17"},{"lineNumber":277,"author":{"gitId":"Chenduo1412"},"content":"                diffInMillies \u003d todaysDate.getTime() - dateOfJoin.getTime();","lastModifiedDate":"2021-03-17"},{"lineNumber":278,"author":{"gitId":"Chenduo1412"},"content":"                if (shortest \u003e diffInMillies) {","lastModifiedDate":"2021-03-17"},{"lineNumber":279,"author":{"gitId":"Chenduo1412"},"content":"                    shortest \u003d diffInMillies;","lastModifiedDate":"2021-03-17"},{"lineNumber":280,"author":{"gitId":"Chenduo1412"},"content":"                    employeeName \u003d internalList.get(i).getName().fullName;","lastModifiedDate":"2021-03-17"},{"lineNumber":281,"author":{"gitId":"Chenduo1412"},"content":"                }","lastModifiedDate":"2021-03-17"},{"lineNumber":282,"author":{"gitId":"Chenduo1412"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":283,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":284,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":285,"author":{"gitId":"Chenduo1412"},"content":"            totalYears \u003d (int) (shortest / yearMiniSec);","lastModifiedDate":"2021-03-17"},{"lineNumber":286,"author":{"gitId":"Chenduo1412"},"content":"            days \u003d (int) (shortest / dayMiniSec - (totalYears * 365));","lastModifiedDate":"2021-03-17"},{"lineNumber":287,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":288,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":289,"author":{"gitId":"Chenduo1412"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-03-18"},{"lineNumber":290,"author":{"gitId":"Chenduo1412"},"content":"            System.out.println(e.toString());","lastModifiedDate":"2021-03-18"},{"lineNumber":291,"author":{"gitId":"Chenduo1412"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":292,"author":{"gitId":"Chenduo1412"},"content":"        return totalYears + \" Year(s) \" + days + \" Day(s) (\" + employeeName + \")\";","lastModifiedDate":"2021-03-20"},{"lineNumber":293,"author":{"gitId":"Chenduo1412"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":294,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":295,"author":{"gitId":"Chenduo1412"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":296,"author":{"gitId":"Chenduo1412"},"content":"     * Get the Average Tenure for all employee in the list.","lastModifiedDate":"2021-03-20"},{"lineNumber":297,"author":{"gitId":"Chenduo1412"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":298,"author":{"gitId":"Chenduo1412"},"content":"    public String getAvgTenure() {","lastModifiedDate":"2021-03-17"},{"lineNumber":299,"author":{"gitId":"Chenduo1412"},"content":"        Date todaysDate \u003d new Date();","lastModifiedDate":"2021-03-17"},{"lineNumber":300,"author":{"gitId":"Chenduo1412"},"content":"        Date dateOfJoin;","lastModifiedDate":"2021-03-18"},{"lineNumber":301,"author":{"gitId":"Chenduo1412"},"content":"        long diffInMillies;","lastModifiedDate":"2021-03-17"},{"lineNumber":302,"author":{"gitId":"Chenduo1412"},"content":"        long yearMiniSec \u003d Long.parseLong(\"31536000000\");","lastModifiedDate":"2021-03-17"},{"lineNumber":303,"author":{"gitId":"Chenduo1412"},"content":"        long dayMiniSec \u003d Long.parseLong(\"86400000\");","lastModifiedDate":"2021-03-17"},{"lineNumber":304,"author":{"gitId":"Chenduo1412"},"content":"        long totalMillies \u003d 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":305,"author":{"gitId":"Chenduo1412"},"content":"        long avgTensure \u003d 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":306,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":307,"author":{"gitId":"Chenduo1412"},"content":"        try {","lastModifiedDate":"2021-03-17"},{"lineNumber":308,"author":{"gitId":"Chenduo1412"},"content":"            for (int i \u003d 0; i \u003c internalList.size(); i++) {","lastModifiedDate":"2021-03-17"},{"lineNumber":309,"author":{"gitId":"Chenduo1412"},"content":"                dateOfJoin \u003d new SimpleDateFormat(\"yyyy-MM-dd\").parse(internalList.get(i).getDateOfJoining().value);","lastModifiedDate":"2021-03-17"},{"lineNumber":310,"author":{"gitId":"Chenduo1412"},"content":"                diffInMillies \u003d todaysDate.getTime() - dateOfJoin.getTime();","lastModifiedDate":"2021-03-17"},{"lineNumber":311,"author":{"gitId":"Chenduo1412"},"content":"                totalMillies +\u003d diffInMillies;","lastModifiedDate":"2021-03-17"},{"lineNumber":312,"author":{"gitId":"Chenduo1412"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":313,"author":{"gitId":"Chenduo1412"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-03-18"},{"lineNumber":314,"author":{"gitId":"Chenduo1412"},"content":"            System.out.println(e.toString());","lastModifiedDate":"2021-03-18"},{"lineNumber":315,"author":{"gitId":"Chenduo1412"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":316,"author":{"gitId":"Chenduo1412"},"content":"        avgTensure \u003d totalMillies / internalList.size();","lastModifiedDate":"2021-03-17"},{"lineNumber":317,"author":{"gitId":"Chenduo1412"},"content":"        int totalYears \u003d (int) (avgTensure / yearMiniSec);","lastModifiedDate":"2021-03-17"},{"lineNumber":318,"author":{"gitId":"Chenduo1412"},"content":"        int days \u003d (int) (avgTensure / dayMiniSec - (totalYears * 365));","lastModifiedDate":"2021-03-17"},{"lineNumber":319,"author":{"gitId":"Chenduo1412"},"content":"        return totalYears + \" Year(s) \" + days + \" Day(s)\";","lastModifiedDate":"2021-03-20"},{"lineNumber":320,"author":{"gitId":"Chenduo1412"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":321,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":322,"author":{"gitId":"e0260222"},"content":"}","lastModifiedDate":"2021-02-27"}],"authorContributionMap":{"daiweinus":24,"e0260222":136,"Chenduo1412":162}},{"path":"src/main/java/employeetracker/model/employee/exceptions/DuplicateEmployeeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.model.employee.exceptions;","lastModifiedDate":"2021-02-28"},{"lineNumber":2,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"/**","lastModifiedDate":"2021-02-28"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":" * Signals that the operation will result in duplicate Employees (Employees are considered duplicates if they have the","lastModifiedDate":"2021-02-28"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":" * same identity).","lastModifiedDate":"2021-02-28"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":" */","lastModifiedDate":"2021-02-28"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"public class DuplicateEmployeeException extends RuntimeException {","lastModifiedDate":"2021-02-28"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"    public DuplicateEmployeeException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2021-02-28"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"}","lastModifiedDate":"2021-02-28"}],"authorContributionMap":{"e0260222":11}},{"path":"src/main/java/employeetracker/model/employee/exceptions/EmployeeNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.model.employee.exceptions;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"/**","lastModifiedDate":"2021-02-27"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":" * Signals that the operation is unable to find the specified employee.","lastModifiedDate":"2021-02-27"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":" */","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"public class EmployeeNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-02-28"}],"authorContributionMap":{"e0260222":6}},{"path":"src/main/java/employeetracker/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.model.tag;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":" * Represents a Tag in the Employee Tracker.","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"e0260222":3,"-":51}},{"path":"src/main/java/employeetracker/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.model.util;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.EmployeeTracker;","lastModifiedDate":"2021-02-20"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.ReadOnlyEmployeeTracker;","lastModifiedDate":"2021-02-20"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Address;","lastModifiedDate":"2021-02-27"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.DateOfBirth;","lastModifiedDate":"2021-02-27"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.DateOfJoining;","lastModifiedDate":"2021-02-27"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Email;","lastModifiedDate":"2021-02-27"},{"lineNumber":13,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":14,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Name;","lastModifiedDate":"2021-02-27"},{"lineNumber":15,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Phone;","lastModifiedDate":"2021-02-27"},{"lineNumber":16,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Role;","lastModifiedDate":"2021-02-27"},{"lineNumber":17,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Salary;","lastModifiedDate":"2021-02-27"},{"lineNumber":18,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.tag.Tag;","lastModifiedDate":"2021-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"e0260222"},"content":" * Contains utility methods for populating {@code EmployeeTracker} with sample data.","lastModifiedDate":"2021-02-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"e0260222"},"content":"    public static Employee[] getSampleEmployees() {","lastModifiedDate":"2021-02-28"},{"lineNumber":25,"author":{"gitId":"e0260222"},"content":"        return new Employee[] {","lastModifiedDate":"2021-02-27"},{"lineNumber":26,"author":{"gitId":"e0260222"},"content":"            new Employee(new Name(\"Alex Yeoh\"), new Role(\"Developer\"), new Phone(\"87438807\"),","lastModifiedDate":"2021-02-27"},{"lineNumber":27,"author":{"gitId":"e0260222"},"content":"                    new Email(\"alexyeoh@example.com\"), new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2021-02-24"},{"lineNumber":28,"author":{"gitId":"e0260222"},"content":"                    new DateOfBirth(\"1990-12-10\"), new DateOfJoining(\"2020-01-02\"), new Salary(\"5000\"),","lastModifiedDate":"2021-02-24"},{"lineNumber":29,"author":{"gitId":"e0260222"},"content":"                    getTagSet(\"Founder\")),","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":31,"author":{"gitId":"e0260222"},"content":"            new Employee(new Name(\"Bernice Yu\"), new Role(\"Developer\"), new Phone(\"99272758\"),","lastModifiedDate":"2021-02-27"},{"lineNumber":32,"author":{"gitId":"e0260222"},"content":"                    new Email(\"berniceyu@example.com\"), new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2021-02-24"},{"lineNumber":33,"author":{"gitId":"e0260222"},"content":"                    new DateOfBirth(\"1988-03-10\"), new DateOfJoining(\"2020-01-02\"), new Salary(\"5000\"),","lastModifiedDate":"2021-02-24"},{"lineNumber":34,"author":{"gitId":"e0260222"},"content":"                    getTagSet(\"Mentor\", \"l33tCoder\")),","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":36,"author":{"gitId":"e0260222"},"content":"            new Employee(new Name(\"Charlotte Oliveiro\"), new Role(\"System Analyst\"), new Phone(\"93210283\"),","lastModifiedDate":"2021-02-27"},{"lineNumber":37,"author":{"gitId":"e0260222"},"content":"                    new Email(\"charlotte@example.com\"), new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2021-02-24"},{"lineNumber":38,"author":{"gitId":"e0260222"},"content":"                    new DateOfBirth(\"1991-11-01\"), new DateOfJoining(\"2020-01-15\"), new Salary(\"6000\"),","lastModifiedDate":"2021-02-24"},{"lineNumber":39,"author":{"gitId":"e0260222"},"content":"                    getTagSet(\"ComputerWizard\")),","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":41,"author":{"gitId":"e0260222"},"content":"            new Employee(new Name(\"David Li\"), new Role(\"Finance Manager\"), new Phone(\"91031282\"),","lastModifiedDate":"2021-02-27"},{"lineNumber":42,"author":{"gitId":"e0260222"},"content":"                    new Email(\"lidavid@example.com\"), new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2021-02-24"},{"lineNumber":43,"author":{"gitId":"e0260222"},"content":"                    new DateOfBirth(\"1992-05-28\"), new DateOfJoining(\"2020-02-01\"), new Salary(\"6000\"),","lastModifiedDate":"2021-02-24"},{"lineNumber":44,"author":{"gitId":"e0260222"},"content":"                    getTagSet(\"AmateurCoder\")),","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":46,"author":{"gitId":"e0260222"},"content":"            new Employee(new Name(\"Irfan Ibrahim\"), new Role(\"Account Manager\"), new Phone(\"92492021\"),","lastModifiedDate":"2021-02-27"},{"lineNumber":47,"author":{"gitId":"e0260222"},"content":"                    new Email(\"irfan@example.com\"), new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2021-02-24"},{"lineNumber":48,"author":{"gitId":"e0260222"},"content":"                    new DateOfBirth(\"1984-08-20\"), new DateOfJoining(\"2020-02-01\"), new Salary(\"6000\"),","lastModifiedDate":"2021-02-24"},{"lineNumber":49,"author":{"gitId":"e0260222"},"content":"                    getTagSet(\"BusiestEmployee\")),","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":51,"author":{"gitId":"e0260222"},"content":"            new Employee(new Name(\"Roy Balakrishnan\"), new Role(\"Project Manager\"), new Phone(\"92624417\"),","lastModifiedDate":"2021-02-27"},{"lineNumber":52,"author":{"gitId":"e0260222"},"content":"                    new Email(\"royb@example.com\"), new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2021-02-24"},{"lineNumber":53,"author":{"gitId":"e0260222"},"content":"                    new DateOfBirth(\"1979-01-14\"), new DateOfJoining(\"2020-03-01\"), new Salary(\"7000\"),","lastModifiedDate":"2021-02-24"},{"lineNumber":54,"author":{"gitId":"e0260222"},"content":"                    getTagSet(\"NewestEmployee\"))","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"e0260222"},"content":"    public static ReadOnlyEmployeeTracker getSampleEmployeeTracker() {","lastModifiedDate":"2021-02-20"},{"lineNumber":59,"author":{"gitId":"e0260222"},"content":"        EmployeeTracker sampleAb \u003d new EmployeeTracker();","lastModifiedDate":"2021-02-20"},{"lineNumber":60,"author":{"gitId":"e0260222"},"content":"        for (Employee sampleEmployee : getSampleEmployees()) {","lastModifiedDate":"2021-02-28"},{"lineNumber":61,"author":{"gitId":"e0260222"},"content":"            sampleAb.addEmployee(sampleEmployee);","lastModifiedDate":"2021-02-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"e0260222":49,"-":25}},{"path":"src/main/java/employeetracker/storage/EmployeeTrackerStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.storage;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-02-20"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.EmployeeTracker;","lastModifiedDate":"2021-02-20"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.ReadOnlyEmployeeTracker;","lastModifiedDate":"2021-02-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":" * Represents a storage for {@link EmployeeTracker}.","lastModifiedDate":"2021-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"e0260222"},"content":"public interface EmployeeTrackerStorage {","lastModifiedDate":"2021-02-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"e0260222"},"content":"    Path getEmployeeTrackerFilePath();","lastModifiedDate":"2021-02-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"e0260222"},"content":"     * Returns EmployeeTracker data as a {@link ReadOnlyEmployeeTracker}.","lastModifiedDate":"2021-02-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"e0260222"},"content":"    Optional\u003cReadOnlyEmployeeTracker\u003e readEmployeeTracker() throws DataConversionException, IOException;","lastModifiedDate":"2021-02-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"e0260222"},"content":"     * @see #getEmployeeTrackerFilePath()","lastModifiedDate":"2021-02-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"e0260222"},"content":"    Optional\u003cReadOnlyEmployeeTracker\u003e readEmployeeTracker(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-02-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"e0260222"},"content":"     * Saves the given {@link ReadOnlyEmployeeTracker} to the storage.","lastModifiedDate":"2021-02-20"},{"lineNumber":36,"author":{"gitId":"e0260222"},"content":"     * @param employeeTracker cannot be null.","lastModifiedDate":"2021-02-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"e0260222"},"content":"    void saveEmployeeTracker(ReadOnlyEmployeeTracker employeeTracker) throws IOException;","lastModifiedDate":"2021-02-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"e0260222"},"content":"     * @see #saveEmployeeTracker(ReadOnlyEmployeeTracker)","lastModifiedDate":"2021-02-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"e0260222"},"content":"    void saveEmployeeTracker(ReadOnlyEmployeeTracker employeeTracker, Path filePath) throws IOException;","lastModifiedDate":"2021-02-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"e0260222":16,"-":30}},{"path":"src/main/java/employeetracker/storage/JsonAdaptedEmployee.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.storage;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-02-20"},{"lineNumber":13,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Address;","lastModifiedDate":"2021-02-27"},{"lineNumber":14,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.DateOfBirth;","lastModifiedDate":"2021-02-27"},{"lineNumber":15,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.DateOfJoining;","lastModifiedDate":"2021-02-27"},{"lineNumber":16,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Email;","lastModifiedDate":"2021-02-27"},{"lineNumber":17,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":18,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Name;","lastModifiedDate":"2021-02-27"},{"lineNumber":19,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Phone;","lastModifiedDate":"2021-02-27"},{"lineNumber":20,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Role;","lastModifiedDate":"2021-02-27"},{"lineNumber":21,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Salary;","lastModifiedDate":"2021-02-27"},{"lineNumber":22,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.tag.Tag;","lastModifiedDate":"2021-02-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"e0260222"},"content":" * Jackson-friendly version of {@link Employee}.","lastModifiedDate":"2021-02-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"e0260222"},"content":"class JsonAdaptedEmployee {","lastModifiedDate":"2021-02-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"e0260222"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Employee\u0027s %s field is missing!\";","lastModifiedDate":"2021-02-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"e0260222"},"content":"    private final String role;","lastModifiedDate":"2021-02-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"e0260222"},"content":"    private final String dateOfBirth;","lastModifiedDate":"2021-02-22"},{"lineNumber":37,"author":{"gitId":"e0260222"},"content":"    private final String dateOfJoining;","lastModifiedDate":"2021-02-23"},{"lineNumber":38,"author":{"gitId":"e0260222"},"content":"    private final String salary;","lastModifiedDate":"2021-02-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"e0260222"},"content":"     * Constructs a {@code JsonAdaptedEmployee} with the given employee details.","lastModifiedDate":"2021-02-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"e0260222"},"content":"    public JsonAdaptedEmployee(@JsonProperty(\"name\") String name, @JsonProperty(\"role\") String role,","lastModifiedDate":"2021-02-28"},{"lineNumber":46,"author":{"gitId":"e0260222"},"content":"            @JsonProperty(\"phone\") String phone, @JsonProperty(\"email\") String email,","lastModifiedDate":"2021-02-24"},{"lineNumber":47,"author":{"gitId":"e0260222"},"content":"            @JsonProperty(\"address\") String address, @JsonProperty(\"dateOfBirth\") String dateOfBirth,","lastModifiedDate":"2021-02-24"},{"lineNumber":48,"author":{"gitId":"e0260222"},"content":"            @JsonProperty(\"dateOfJoining\") String dateOfJoining, @JsonProperty(\"salary\") String salary,","lastModifiedDate":"2021-02-24"},{"lineNumber":49,"author":{"gitId":"e0260222"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2021-02-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"e0260222"},"content":"        this.role \u003d role;","lastModifiedDate":"2021-02-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"e0260222"},"content":"        this.dateOfBirth \u003d dateOfBirth;","lastModifiedDate":"2021-02-22"},{"lineNumber":56,"author":{"gitId":"e0260222"},"content":"        this.dateOfJoining \u003d dateOfJoining;","lastModifiedDate":"2021-02-23"},{"lineNumber":57,"author":{"gitId":"e0260222"},"content":"        this.salary \u003d salary;","lastModifiedDate":"2021-02-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"e0260222"},"content":"     * Converts a given {@code Employee} into this class for Jackson use.","lastModifiedDate":"2021-02-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"e0260222"},"content":"    public JsonAdaptedEmployee(Employee source) {","lastModifiedDate":"2021-02-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"e0260222"},"content":"        role \u003d source.getRole().value;","lastModifiedDate":"2021-02-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"e0260222"},"content":"        dateOfBirth \u003d source.getDateOfBirth().value;","lastModifiedDate":"2021-02-22"},{"lineNumber":73,"author":{"gitId":"e0260222"},"content":"        dateOfJoining \u003d source.getDateOfJoining().value;","lastModifiedDate":"2021-02-23"},{"lineNumber":74,"author":{"gitId":"e0260222"},"content":"        salary \u003d source.getSalary().value;","lastModifiedDate":"2021-02-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"e0260222"},"content":"     * Converts this Jackson-friendly adapted employee object into the model\u0027s {@code Employee} object.","lastModifiedDate":"2021-02-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"e0260222"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted employee.","lastModifiedDate":"2021-02-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"e0260222"},"content":"    public Employee toModelType() throws IllegalValueException {","lastModifiedDate":"2021-02-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"e0260222"},"content":"        if (role \u003d\u003d null) {","lastModifiedDate":"2021-02-24"},{"lineNumber":100,"author":{"gitId":"e0260222"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Role.class.getSimpleName()));","lastModifiedDate":"2021-02-24"},{"lineNumber":101,"author":{"gitId":"e0260222"},"content":"        }","lastModifiedDate":"2021-02-24"},{"lineNumber":102,"author":{"gitId":"e0260222"},"content":"        if (!Role.isValidRole(role)) {","lastModifiedDate":"2021-02-24"},{"lineNumber":103,"author":{"gitId":"e0260222"},"content":"            throw new IllegalValueException(Role.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-11"},{"lineNumber":104,"author":{"gitId":"e0260222"},"content":"        }","lastModifiedDate":"2021-02-24"},{"lineNumber":105,"author":{"gitId":"e0260222"},"content":"        final Role modelRole \u003d new Role(role);","lastModifiedDate":"2021-02-24"},{"lineNumber":106,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"e0260222"},"content":"        if (dateOfBirth \u003d\u003d null) {","lastModifiedDate":"2021-02-22"},{"lineNumber":132,"author":{"gitId":"e0260222"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-02-23"},{"lineNumber":133,"author":{"gitId":"e0260222"},"content":"                    DateOfBirth.class.getSimpleName()));","lastModifiedDate":"2021-02-23"},{"lineNumber":134,"author":{"gitId":"e0260222"},"content":"        }","lastModifiedDate":"2021-02-22"},{"lineNumber":135,"author":{"gitId":"e0260222"},"content":"        if (!DateOfBirth.isValidDateOfBirth(dateOfBirth)) {","lastModifiedDate":"2021-02-22"},{"lineNumber":136,"author":{"gitId":"e0260222"},"content":"            throw new IllegalValueException(DateOfBirth.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-02-22"},{"lineNumber":137,"author":{"gitId":"e0260222"},"content":"        }","lastModifiedDate":"2021-02-22"},{"lineNumber":138,"author":{"gitId":"e0260222"},"content":"        final DateOfBirth modelDateOfBirth \u003d new DateOfBirth(dateOfBirth);","lastModifiedDate":"2021-02-22"},{"lineNumber":139,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":140,"author":{"gitId":"e0260222"},"content":"        if (dateOfJoining \u003d\u003d null) {","lastModifiedDate":"2021-02-23"},{"lineNumber":141,"author":{"gitId":"e0260222"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-02-23"},{"lineNumber":142,"author":{"gitId":"e0260222"},"content":"                    DateOfJoining.class.getSimpleName()));","lastModifiedDate":"2021-02-23"},{"lineNumber":143,"author":{"gitId":"e0260222"},"content":"        }","lastModifiedDate":"2021-02-23"},{"lineNumber":144,"author":{"gitId":"e0260222"},"content":"        if (!DateOfJoining.isValidDateOfJoining(dateOfJoining)) {","lastModifiedDate":"2021-02-23"},{"lineNumber":145,"author":{"gitId":"e0260222"},"content":"            throw new IllegalValueException(DateOfJoining.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-02-23"},{"lineNumber":146,"author":{"gitId":"e0260222"},"content":"        }","lastModifiedDate":"2021-02-23"},{"lineNumber":147,"author":{"gitId":"e0260222"},"content":"        final DateOfJoining modelDateOfJoining \u003d new DateOfJoining(dateOfJoining);","lastModifiedDate":"2021-02-23"},{"lineNumber":148,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":149,"author":{"gitId":"e0260222"},"content":"        if (salary \u003d\u003d null) {","lastModifiedDate":"2021-02-24"},{"lineNumber":150,"author":{"gitId":"e0260222"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-02-24"},{"lineNumber":151,"author":{"gitId":"e0260222"},"content":"                    Salary.class.getSimpleName()));","lastModifiedDate":"2021-02-24"},{"lineNumber":152,"author":{"gitId":"e0260222"},"content":"        }","lastModifiedDate":"2021-02-24"},{"lineNumber":153,"author":{"gitId":"e0260222"},"content":"        if (!Salary.isValidSalary(salary)) {","lastModifiedDate":"2021-02-24"},{"lineNumber":154,"author":{"gitId":"e0260222"},"content":"            throw new IllegalValueException(Salary.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-02-24"},{"lineNumber":155,"author":{"gitId":"e0260222"},"content":"        }","lastModifiedDate":"2021-02-24"},{"lineNumber":156,"author":{"gitId":"e0260222"},"content":"        final Salary modelSalary \u003d new Salary(salary);","lastModifiedDate":"2021-02-24"},{"lineNumber":157,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":159,"author":{"gitId":"e0260222"},"content":"        return new Employee(modelName, modelRole, modelPhone, modelEmail, modelAddress, modelDateOfBirth,","lastModifiedDate":"2021-02-27"},{"lineNumber":160,"author":{"gitId":"e0260222"},"content":"                modelDateOfJoining, modelSalary, modelTags);","lastModifiedDate":"2021-02-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"e0260222":75,"-":88}},{"path":"src/main/java/employeetracker/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.storage;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-02-20"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.tag.Tag;","lastModifiedDate":"2021-02-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"e0260222":3,"-":45}},{"path":"src/main/java/employeetracker/storage/JsonEmployeeTrackerStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.storage;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.core.LogsCenter;","lastModifiedDate":"2021-02-20"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-02-20"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-02-20"},{"lineNumber":13,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.util.FileUtil;","lastModifiedDate":"2021-02-20"},{"lineNumber":14,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.util.JsonUtil;","lastModifiedDate":"2021-02-20"},{"lineNumber":15,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.ReadOnlyEmployeeTracker;","lastModifiedDate":"2021-02-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"e0260222"},"content":" * A class to access EmployeeTracker data stored as a json file on the hard disk.","lastModifiedDate":"2021-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"e0260222"},"content":"public class JsonEmployeeTrackerStorage implements EmployeeTrackerStorage {","lastModifiedDate":"2021-02-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"e0260222"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonEmployeeTrackerStorage.class);","lastModifiedDate":"2021-02-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"e0260222"},"content":"    public JsonEmployeeTrackerStorage(Path filePath) {","lastModifiedDate":"2021-02-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"e0260222"},"content":"    public Path getEmployeeTrackerFilePath() {","lastModifiedDate":"2021-02-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"e0260222"},"content":"    public Optional\u003cReadOnlyEmployeeTracker\u003e readEmployeeTracker() throws DataConversionException {","lastModifiedDate":"2021-02-20"},{"lineNumber":36,"author":{"gitId":"e0260222"},"content":"        return readEmployeeTracker(filePath);","lastModifiedDate":"2021-02-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"e0260222"},"content":"     * Similar to {@link #readEmployeeTracker()}.","lastModifiedDate":"2021-02-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"e0260222"},"content":"    public Optional\u003cReadOnlyEmployeeTracker\u003e readEmployeeTracker(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-02-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"e0260222"},"content":"        Optional\u003cJsonSerializableEmployeeTracker\u003e jsonEmployeeTracker \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-02-24"},{"lineNumber":49,"author":{"gitId":"e0260222"},"content":"                filePath, JsonSerializableEmployeeTracker.class);","lastModifiedDate":"2021-02-20"},{"lineNumber":50,"author":{"gitId":"e0260222"},"content":"        if (!jsonEmployeeTracker.isPresent()) {","lastModifiedDate":"2021-02-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"e0260222"},"content":"            return Optional.of(jsonEmployeeTracker.get().toModelType());","lastModifiedDate":"2021-02-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"e0260222"},"content":"    public void saveEmployeeTracker(ReadOnlyEmployeeTracker employeeTracker) throws IOException {","lastModifiedDate":"2021-02-23"},{"lineNumber":64,"author":{"gitId":"e0260222"},"content":"        saveEmployeeTracker(employeeTracker, filePath);","lastModifiedDate":"2021-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"e0260222"},"content":"     * Similar to {@link #saveEmployeeTracker(ReadOnlyEmployeeTracker)}.","lastModifiedDate":"2021-02-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"e0260222"},"content":"    public void saveEmployeeTracker(ReadOnlyEmployeeTracker employeeTracker, Path filePath) throws IOException {","lastModifiedDate":"2021-02-24"},{"lineNumber":73,"author":{"gitId":"e0260222"},"content":"        requireNonNull(employeeTracker);","lastModifiedDate":"2021-02-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"e0260222"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableEmployeeTracker(employeeTracker), filePath);","lastModifiedDate":"2021-02-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"e0260222":26,"-":54}},{"path":"src/main/java/employeetracker/storage/JsonSerializableEmployeeTracker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.storage;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-02-20"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.EmployeeTracker;","lastModifiedDate":"2021-02-20"},{"lineNumber":13,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.ReadOnlyEmployeeTracker;","lastModifiedDate":"2021-02-20"},{"lineNumber":14,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"e0260222"},"content":" * An Immutable EmployeeTracker that is serializable to JSON format.","lastModifiedDate":"2021-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"e0260222"},"content":"@JsonRootName(value \u003d \"employeetracker\")","lastModifiedDate":"2021-02-23"},{"lineNumber":20,"author":{"gitId":"e0260222"},"content":"class JsonSerializableEmployeeTracker {","lastModifiedDate":"2021-02-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"e0260222"},"content":"    public static final String MESSAGE_DUPLICATE_EMPLOYEE \u003d \"Employees list contains duplicate employee(s).\";","lastModifiedDate":"2021-02-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"e0260222"},"content":"    private final List\u003cJsonAdaptedEmployee\u003e employees \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-02-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"e0260222"},"content":"     * Constructs a {@code JsonSerializableEmployeeTracker} with the given persons.","lastModifiedDate":"2021-02-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"e0260222"},"content":"    public JsonSerializableEmployeeTracker(@JsonProperty(\"employees\") List\u003cJsonAdaptedEmployee\u003e employees) {","lastModifiedDate":"2021-02-28"},{"lineNumber":31,"author":{"gitId":"e0260222"},"content":"        this.employees.addAll(employees);","lastModifiedDate":"2021-02-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"e0260222"},"content":"     * Converts a given {@code ReadOnlyEmployeeTracker} into this class for Jackson use.","lastModifiedDate":"2021-02-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"e0260222"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableEmployeeTracker}.","lastModifiedDate":"2021-02-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"e0260222"},"content":"    public JsonSerializableEmployeeTracker(ReadOnlyEmployeeTracker source) {","lastModifiedDate":"2021-02-20"},{"lineNumber":40,"author":{"gitId":"e0260222"},"content":"        employees.addAll(source.getEmployeeList().stream().map(JsonAdaptedEmployee::new).collect(Collectors.toList()));","lastModifiedDate":"2021-02-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"e0260222"},"content":"     * Converts this address book into the model\u0027s {@code EmployeeTracker} object.","lastModifiedDate":"2021-02-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"e0260222"},"content":"    public EmployeeTracker toModelType() throws IllegalValueException {","lastModifiedDate":"2021-02-20"},{"lineNumber":49,"author":{"gitId":"e0260222"},"content":"        EmployeeTracker employeeTracker \u003d new EmployeeTracker();","lastModifiedDate":"2021-02-23"},{"lineNumber":50,"author":{"gitId":"e0260222"},"content":"        for (JsonAdaptedEmployee jsonAdaptedEmployee : employees) {","lastModifiedDate":"2021-02-28"},{"lineNumber":51,"author":{"gitId":"e0260222"},"content":"            Employee employee \u003d jsonAdaptedEmployee.toModelType();","lastModifiedDate":"2021-02-28"},{"lineNumber":52,"author":{"gitId":"e0260222"},"content":"            if (employeeTracker.hasEmployee(employee)) {","lastModifiedDate":"2021-02-28"},{"lineNumber":53,"author":{"gitId":"e0260222"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_EMPLOYEE);","lastModifiedDate":"2021-02-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"e0260222"},"content":"            employeeTracker.addEmployee(employee);","lastModifiedDate":"2021-02-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"e0260222"},"content":"        return employeeTracker;","lastModifiedDate":"2021-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"e0260222":26,"-":34}},{"path":"src/main/java/employeetracker/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.storage;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-02-20"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.util.JsonUtil;","lastModifiedDate":"2021-02-20"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-02-20"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.UserPrefs;","lastModifiedDate":"2021-02-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"e0260222":5,"-":42}},{"path":"src/main/java/employeetracker/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.storage;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-02-20"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.ReadOnlyEmployeeTracker;","lastModifiedDate":"2021-02-20"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-02-20"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.UserPrefs;","lastModifiedDate":"2021-02-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"e0260222"},"content":"public interface Storage extends EmployeeTrackerStorage, UserPrefsStorage {","lastModifiedDate":"2021-02-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"e0260222"},"content":"    Path getEmployeeTrackerFilePath();","lastModifiedDate":"2021-02-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"e0260222"},"content":"    Optional\u003cReadOnlyEmployeeTracker\u003e readEmployeeTracker() throws DataConversionException, IOException;","lastModifiedDate":"2021-02-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"e0260222"},"content":"    void saveEmployeeTracker(ReadOnlyEmployeeTracker addressBook) throws IOException;","lastModifiedDate":"2021-02-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"e0260222":9,"-":23}},{"path":"src/main/java/employeetracker/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.storage;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.core.LogsCenter;","lastModifiedDate":"2021-02-20"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-02-20"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.ReadOnlyEmployeeTracker;","lastModifiedDate":"2021-02-20"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-02-20"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.UserPrefs;","lastModifiedDate":"2021-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"e0260222"},"content":" * Manages storage of EmployeeTracker data in local storage.","lastModifiedDate":"2021-02-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"e0260222"},"content":"    private EmployeeTrackerStorage employeeTrackerStorage;","lastModifiedDate":"2021-02-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"e0260222"},"content":"     * Creates a {@code StorageManager} with the given {@code EmployeeTrackerStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2021-02-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"e0260222"},"content":"    public StorageManager(EmployeeTrackerStorage employeeTrackerStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2021-02-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"e0260222"},"content":"        this.employeeTrackerStorage \u003d employeeTrackerStorage;","lastModifiedDate":"2021-02-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"e0260222"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d EmployeeTracker methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-02-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"e0260222"},"content":"    public Path getEmployeeTrackerFilePath() {","lastModifiedDate":"2021-02-20"},{"lineNumber":54,"author":{"gitId":"e0260222"},"content":"        return employeeTrackerStorage.getEmployeeTrackerFilePath();","lastModifiedDate":"2021-02-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"e0260222"},"content":"    public Optional\u003cReadOnlyEmployeeTracker\u003e readEmployeeTracker() throws DataConversionException, IOException {","lastModifiedDate":"2021-02-20"},{"lineNumber":59,"author":{"gitId":"e0260222"},"content":"        return readEmployeeTracker(employeeTrackerStorage.getEmployeeTrackerFilePath());","lastModifiedDate":"2021-02-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"e0260222"},"content":"    public Optional\u003cReadOnlyEmployeeTracker\u003e readEmployeeTracker(Path filePath)","lastModifiedDate":"2021-02-20"},{"lineNumber":64,"author":{"gitId":"e0260222"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2021-02-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"e0260222"},"content":"        return employeeTrackerStorage.readEmployeeTracker(filePath);","lastModifiedDate":"2021-02-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"e0260222"},"content":"    public void saveEmployeeTracker(ReadOnlyEmployeeTracker employeeTracker) throws IOException {","lastModifiedDate":"2021-02-24"},{"lineNumber":71,"author":{"gitId":"e0260222"},"content":"        saveEmployeeTracker(employeeTracker, employeeTrackerStorage.getEmployeeTrackerFilePath());","lastModifiedDate":"2021-02-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"e0260222"},"content":"    public void saveEmployeeTracker(ReadOnlyEmployeeTracker employeeTracker, Path filePath) throws IOException {","lastModifiedDate":"2021-02-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"e0260222"},"content":"        employeeTrackerStorage.saveEmployeeTracker(employeeTracker, filePath);","lastModifiedDate":"2021-02-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"e0260222":23,"-":57}},{"path":"src/main/java/employeetracker/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.storage;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-02-20"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-02-20"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.UserPrefs;","lastModifiedDate":"2021-02-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":" * Represents a storage for {@link employeetracker.model.UserPrefs}.","lastModifiedDate":"2021-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"e0260222"},"content":"     * Saves the given {@link employeetracker.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2021-02-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"e0260222":6,"-":30}},{"path":"src/main/java/employeetracker/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.ui;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.commands.CommandResult;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-02-20"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"e0260222"},"content":"         * @see employeetracker.logic.Logic#execute(String)","lastModifiedDate":"2021-02-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"e0260222":5,"-":80}},{"path":"src/main/java/employeetracker/ui/EmployeeCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.ui;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"e0260222"},"content":" * An UI component that displays information of a {@code Employee}.","lastModifiedDate":"2021-02-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"e0260222"},"content":"public class EmployeeCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-02-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"e0260222"},"content":"    private static final String FXML \u003d \"EmployeeListCard.fxml\";","lastModifiedDate":"2021-02-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"e0260222"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on EmployeeTracker level 4\u003c/a\u003e","lastModifiedDate":"2021-02-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"e0260222"},"content":"    public final Employee employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"e0260222"},"content":"    private Label role;","lastModifiedDate":"2021-02-24"},{"lineNumber":35,"author":{"gitId":"e0260222"},"content":"    @FXML","lastModifiedDate":"2021-02-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"e0260222"},"content":"    private Label dateOfBirth;","lastModifiedDate":"2021-02-22"},{"lineNumber":45,"author":{"gitId":"e0260222"},"content":"    @FXML","lastModifiedDate":"2021-02-22"},{"lineNumber":46,"author":{"gitId":"e0260222"},"content":"    private Label dateOfJoining;","lastModifiedDate":"2021-02-23"},{"lineNumber":47,"author":{"gitId":"e0260222"},"content":"    @FXML","lastModifiedDate":"2021-02-23"},{"lineNumber":48,"author":{"gitId":"e0260222"},"content":"    private Label salary;","lastModifiedDate":"2021-02-24"},{"lineNumber":49,"author":{"gitId":"e0260222"},"content":"    @FXML","lastModifiedDate":"2021-02-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"e0260222"},"content":"     * Creates a {@code PersonCode} with the given {@code Employee} and index to display.","lastModifiedDate":"2021-02-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"e0260222"},"content":"    public EmployeeCard(Employee employee, int displayedIndex) {","lastModifiedDate":"2021-02-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"e0260222"},"content":"        this.employee \u003d employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"e0260222"},"content":"        name.setText(employee.getName().fullName);","lastModifiedDate":"2021-02-27"},{"lineNumber":60,"author":{"gitId":"e0260222"},"content":"        role.setText(\"\\uD83D\\uDC77 \" + employee.getRole().value);","lastModifiedDate":"2021-02-27"},{"lineNumber":61,"author":{"gitId":"e0260222"},"content":"        phone.setText(\"\\uD83D\\uDD81 \" + employee.getPhone().value);","lastModifiedDate":"2021-02-27"},{"lineNumber":62,"author":{"gitId":"e0260222"},"content":"        address.setText(\"\\uD83C\\uDFE0 \" + employee.getAddress().value);","lastModifiedDate":"2021-02-27"},{"lineNumber":63,"author":{"gitId":"e0260222"},"content":"        email.setText(\"\\uD83D\\uDCE7 \" + employee.getEmail().value);","lastModifiedDate":"2021-02-27"},{"lineNumber":64,"author":{"gitId":"e0260222"},"content":"        dateOfBirth.setText(\"\\uD83D\\uDC76 \" + employee.getDateOfBirth().value);","lastModifiedDate":"2021-02-27"},{"lineNumber":65,"author":{"gitId":"e0260222"},"content":"        dateOfJoining.setText(\"\\uD83D\\uDC66 \" + employee.getDateOfJoining().value);","lastModifiedDate":"2021-02-27"},{"lineNumber":66,"author":{"gitId":"e0260222"},"content":"        salary.setText(\"\\uD83D\\uDCB2 \" + String.format(\"%,d\", Integer.parseInt(employee.getSalary().value)));","lastModifiedDate":"2021-03-11"},{"lineNumber":67,"author":{"gitId":"e0260222"},"content":"        employee.getTags().stream()","lastModifiedDate":"2021-02-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"e0260222"},"content":"        if (!(other instanceof EmployeeCard)) {","lastModifiedDate":"2021-02-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"e0260222"},"content":"        EmployeeCard card \u003d (EmployeeCard) other;","lastModifiedDate":"2021-02-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"e0260222"},"content":"                \u0026\u0026 employee.equals(card.employee);","lastModifiedDate":"2021-02-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"e0260222":30,"-":59}},{"path":"src/main/java/employeetracker/ui/EmployeeListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.ui;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.core.LogsCenter;","lastModifiedDate":"2021-02-20"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"e0260222"},"content":" * Panel containing the list of employees.","lastModifiedDate":"2021-02-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"e0260222"},"content":"public class EmployeeListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-02-28"},{"lineNumber":17,"author":{"gitId":"e0260222"},"content":"    private static final String FXML \u003d \"EmployeeListPanel.fxml\";","lastModifiedDate":"2021-02-28"},{"lineNumber":18,"author":{"gitId":"e0260222"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(EmployeeListPanel.class);","lastModifiedDate":"2021-02-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"e0260222"},"content":"    private ListView\u003cEmployee\u003e employeeListView;","lastModifiedDate":"2021-02-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"e0260222"},"content":"     * Creates a {@code EmployeeListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-02-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"e0260222"},"content":"    public EmployeeListPanel(ObservableList\u003cEmployee\u003e employeeList) {","lastModifiedDate":"2021-02-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"e0260222"},"content":"        employeeListView.setItems(employeeList);","lastModifiedDate":"2021-02-28"},{"lineNumber":29,"author":{"gitId":"e0260222"},"content":"        employeeListView.setCellFactory(listView -\u003e new EmployeeListViewCell());","lastModifiedDate":"2021-02-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"e0260222"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Employee} using a {@code EmployeeCard}.","lastModifiedDate":"2021-02-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"e0260222"},"content":"    class EmployeeListViewCell extends ListCell\u003cEmployee\u003e {","lastModifiedDate":"2021-02-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"e0260222"},"content":"        protected void updateItem(Employee employee, boolean empty) {","lastModifiedDate":"2021-02-27"},{"lineNumber":38,"author":{"gitId":"e0260222"},"content":"            super.updateItem(employee, empty);","lastModifiedDate":"2021-02-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"e0260222"},"content":"            if (empty || employee \u003d\u003d null) {","lastModifiedDate":"2021-02-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"e0260222"},"content":"                setGraphic(new EmployeeCard(employee, getIndex() + 1).getRoot());","lastModifiedDate":"2021-02-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"e0260222":18,"-":31}},{"path":"src/main/java/employeetracker/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.ui;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.core.LogsCenter;","lastModifiedDate":"2021-02-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"e0260222"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2021s2-tic4002-f18-2.github.io/tp2/\";","lastModifiedDate":"2021-02-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"e0260222":3,"-":99}},{"path":"src/main/java/employeetracker/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.ui;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.core.GuiSettings;","lastModifiedDate":"2021-02-20"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.core.LogsCenter;","lastModifiedDate":"2021-02-20"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.Logic;","lastModifiedDate":"2021-02-20"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.commands.CommandResult;","lastModifiedDate":"2021-02-20"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-02-20"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"e0260222"},"content":"    private EmployeeListPanel employeeListPanel;","lastModifiedDate":"2021-02-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"e0260222"},"content":"    private StackPane employeeListPanelPlaceholder;","lastModifiedDate":"2021-02-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"e0260222"},"content":"        employeeListPanel \u003d new EmployeeListPanel(logic.getFilteredEmployeeList());","lastModifiedDate":"2021-02-28"},{"lineNumber":115,"author":{"gitId":"e0260222"},"content":"        employeeListPanelPlaceholder.getChildren().add(employeeListPanel.getRoot());","lastModifiedDate":"2021-02-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"e0260222"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getEmployeeTrackerFilePath());","lastModifiedDate":"2021-02-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":156,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":169,"author":{"gitId":"e0260222"},"content":"    public EmployeeListPanel getEmployeeListPanel() {","lastModifiedDate":"2021-02-28"},{"lineNumber":170,"author":{"gitId":"e0260222"},"content":"        return employeeListPanel;","lastModifiedDate":"2021-02-28"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"e0260222"},"content":"     * @see employeetracker.logic.Logic#execute(String)","lastModifiedDate":"2021-02-20"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"e0260222":15,"Chenduo1412":3,"-":181}},{"path":"src/main/java/employeetracker/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.ui;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"e0260222":1,"-":27}},{"path":"src/main/java/employeetracker/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.ui;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"e0260222":1,"-":27}},{"path":"src/main/java/employeetracker/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.ui;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"e0260222":1,"-":12}},{"path":"src/main/java/employeetracker/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.ui;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"import employeetracker.MainApp;","lastModifiedDate":"2021-02-20"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.core.LogsCenter;","lastModifiedDate":"2021-02-20"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.util.StringUtil;","lastModifiedDate":"2021-02-20"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.Logic;","lastModifiedDate":"2021-02-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"e0260222"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/employee_tracker_32.png\";","lastModifiedDate":"2021-02-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"e0260222":6,"-":83}},{"path":"src/main/java/employeetracker/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.ui;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"import employeetracker.MainApp;","lastModifiedDate":"2021-02-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-02-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"e0260222":2,"-":86}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"e0260222"},"content":".cell_small_fixed_width_label {","lastModifiedDate":"2021-03-11"},{"lineNumber":130,"author":{"gitId":"e0260222"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2021-03-11"},{"lineNumber":131,"author":{"gitId":"e0260222"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2021-03-11"},{"lineNumber":132,"author":{"gitId":"e0260222"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2021-03-11"},{"lineNumber":133,"author":{"gitId":"e0260222"},"content":"    -fx-min-width: 140;","lastModifiedDate":"2021-03-11"},{"lineNumber":134,"author":{"gitId":"e0260222"},"content":"    -fx-pref-width: 140;","lastModifiedDate":"2021-03-11"},{"lineNumber":135,"author":{"gitId":"e0260222"},"content":"}","lastModifiedDate":"2021-03-11"},{"lineNumber":136,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2017-03-02"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":273,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":296,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":341,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"e0260222":8,"-":352}},{"path":"src/main/resources/view/EmployeeListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"e0260222"},"content":"      \u003cLabel fx:id\u003d\"role\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$role\" /\u003e","lastModifiedDate":"2021-02-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"e0260222"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"e0260222"},"content":"      \u003cHBox\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"e0260222"},"content":"        \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_fixed_width_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"e0260222"},"content":"        \u003cLabel fx:id\u003d\"salary\" styleClass\u003d\"cell_small_fixed_width_label\" text\u003d\"\\$salary\" /\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"e0260222"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":38,"author":{"gitId":"e0260222"},"content":"      \u003cHBox\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"e0260222"},"content":"        \u003cLabel fx:id\u003d\"dateOfBirth\" styleClass\u003d\"cell_small_fixed_width_label\" text\u003d\"\\$dateOfBirth\" /\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":40,"author":{"gitId":"e0260222"},"content":"        \u003cLabel fx:id\u003d\"dateOfJoining\" styleClass\u003d\"cell_small_fixed_width_label\" text\u003d\"\\$dateOfJoining\" /\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"e0260222"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"e0260222":10,"-":34}},{"path":"src/main/resources/view/EmployeeListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"  \u003cListView fx:id\u003d\"employeeListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"e0260222":1,"-":7}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"e0260222"},"content":"         title\u003d\"Employee Tracker\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-02-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"e0260222"},"content":"    \u003cImage url\u003d\"@/images/employee_tracker_32.png\" /\u003e","lastModifiedDate":"2021-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"e0260222"},"content":"        \u003cVBox fx:id\u003d\"employeeList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-02-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"e0260222"},"content":"          \u003cStackPane fx:id\u003d\"employeeListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"e0260222":4,"-":56}},{"path":"src/test/data/JsonEmployeeTrackerStorageTest/invalidAndValidEmployee.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"e0260222"},"content":"  \"employees\": [ {","lastModifiedDate":"2021-02-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Valid Person\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"    \"role\": \"Developer\",","lastModifiedDate":"2021-02-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-02-23"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"    \"dateOfBirth\": \"1988-01-17\",","lastModifiedDate":"2021-02-23"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"    \"dateOfJoining\": \"2020-01-05\",","lastModifiedDate":"2021-02-24"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"    \"salary\": \"5000\"","lastModifiedDate":"2021-02-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"name\": \"Person With Invalid Phone Field\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"e0260222"},"content":"    \"role\": \"Developer\",","lastModifiedDate":"2021-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"phone\": \"948asdf2424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"e0260222"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-02-23"},{"lineNumber":17,"author":{"gitId":"e0260222"},"content":"    \"dateOfBirth\": \"1988-01-17\",","lastModifiedDate":"2021-02-23"},{"lineNumber":18,"author":{"gitId":"e0260222"},"content":"    \"dateOfJoining\": \"2020-01-05\",","lastModifiedDate":"2021-02-24"},{"lineNumber":19,"author":{"gitId":"e0260222"},"content":"    \"salary\": \"5000\"","lastModifiedDate":"2021-02-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"e0260222":11,"-":10}},{"path":"src/test/data/JsonEmployeeTrackerStorageTest/invalidEmployee.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"e0260222"},"content":"  \"employees\": [ {","lastModifiedDate":"2021-02-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"    \"role\": \"Developer\",","lastModifiedDate":"2021-02-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-02-23"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"    \"dateOfBirth\": \"1988-01-17\",","lastModifiedDate":"2021-02-23"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"    \"dateOfJoining\": \"2020-01-05\",","lastModifiedDate":"2021-02-24"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"    \"salary\": \"5000\"","lastModifiedDate":"2021-02-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"e0260222":6,"-":6}},{"path":"src/test/data/JsonSerializableEmployeeTrackerTest/duplicateEmployee.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"e0260222"},"content":"  \"employees\": [ {","lastModifiedDate":"2021-02-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"    \"role\": \"Finance Manager\",","lastModifiedDate":"2021-02-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"    \"dateOfBirth\": \"1988-09-14\",","lastModifiedDate":"2021-02-23"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"    \"dateOfJoining\": \"2020-02-01\",","lastModifiedDate":"2021-02-23"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"    \"salary\": \"6000\",","lastModifiedDate":"2021-02-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"tagged\": [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"e0260222"},"content":"    \"role\": \"Finance Manager\",","lastModifiedDate":"2021-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \"email\": \"pauline@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"e0260222"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-02-24"},{"lineNumber":18,"author":{"gitId":"e0260222"},"content":"    \"dateOfBirth\": \"1988-09-14\",","lastModifiedDate":"2021-02-23"},{"lineNumber":19,"author":{"gitId":"e0260222"},"content":"    \"salary\": \"6000\",","lastModifiedDate":"2021-02-24"},{"lineNumber":20,"author":{"gitId":"e0260222"},"content":"    \"dateOfJoining\": \"2020-02-01\"","lastModifiedDate":"2021-02-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"e0260222":10,"-":12}},{"path":"src/test/data/JsonSerializableEmployeeTrackerTest/invalidEmployee.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"e0260222"},"content":"  \"employees\": [ {","lastModifiedDate":"2021-02-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Hans Muster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"    \"role\": \"Developer\",","lastModifiedDate":"2021-02-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\": \"invalid@email!3e\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-02-23"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"    \"dateOfBirth\": \"1988-01-17\",","lastModifiedDate":"2021-02-23"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"    \"dateOfJoining\": \"2020-01-05\",","lastModifiedDate":"2021-02-24"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"    \"salary\": \"5000\"","lastModifiedDate":"2021-02-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"e0260222":6,"-":6}},{"path":"src/test/data/JsonSerializableEmployeeTrackerTest/typicalEmployees.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"e0260222"},"content":"  \"_comment\": \"Employee Tracker save file which contains the same Employee values as in TypicalEmployees#getTypicalEmployeeTracker()\",","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"  \"employees\": [ {","lastModifiedDate":"2021-02-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"    \"role\": \"Finance Manager\",","lastModifiedDate":"2021-02-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"    \"dateOfBirth\": \"1988-09-14\",","lastModifiedDate":"2021-02-23"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"    \"dateOfJoining\": \"2020-02-01\",","lastModifiedDate":"2021-02-23"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"    \"salary\": \"6000\",","lastModifiedDate":"2021-02-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"e0260222"},"content":"    \"role\": \"Project Manager\",","lastModifiedDate":"2021-02-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \"address\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"e0260222"},"content":"    \"dateOfBirth\": \"1989-11-14\",","lastModifiedDate":"2021-02-23"},{"lineNumber":20,"author":{"gitId":"e0260222"},"content":"    \"dateOfJoining\": \"2020-02-01\",","lastModifiedDate":"2021-02-23"},{"lineNumber":21,"author":{"gitId":"e0260222"},"content":"    \"salary\": \"6000\",","lastModifiedDate":"2021-02-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"owesMoney\", \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"e0260222"},"content":"    \"role\": \"System Analyst\",","lastModifiedDate":"2021-02-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \"email\" : \"heinz@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \"address\" : \"wall street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"e0260222"},"content":"    \"dateOfBirth\": \"1979-09-01\",","lastModifiedDate":"2021-02-23"},{"lineNumber":30,"author":{"gitId":"e0260222"},"content":"    \"dateOfJoining\": \"2020-02-01\",","lastModifiedDate":"2021-02-23"},{"lineNumber":31,"author":{"gitId":"e0260222"},"content":"    \"salary\": \"6000\",","lastModifiedDate":"2021-02-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"e0260222"},"content":"    \"role\": \"Account Manager\",","lastModifiedDate":"2021-02-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \"address\" : \"10th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"e0260222"},"content":"    \"dateOfBirth\": \"1977-01-05\",","lastModifiedDate":"2021-02-23"},{"lineNumber":40,"author":{"gitId":"e0260222"},"content":"    \"dateOfJoining\": \"2021-02-01\",","lastModifiedDate":"2021-02-23"},{"lineNumber":41,"author":{"gitId":"e0260222"},"content":"    \"salary\": \"6000\",","lastModifiedDate":"2021-02-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"e0260222"},"content":"    \"role\": \"Developer\",","lastModifiedDate":"2021-02-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482224\",","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \"email\" : \"werner@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \"address\" : \"michegan ave\",","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"e0260222"},"content":"    \"dateOfBirth\": \"2001-04-11\",","lastModifiedDate":"2021-02-23"},{"lineNumber":50,"author":{"gitId":"e0260222"},"content":"    \"dateOfJoining\": \"2021-02-01\",","lastModifiedDate":"2021-02-23"},{"lineNumber":51,"author":{"gitId":"e0260222"},"content":"    \"salary\": \"5000\",","lastModifiedDate":"2021-02-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"e0260222"},"content":"    \"role\": \"Developer\",","lastModifiedDate":"2021-02-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482427\",","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \"email\" : \"lydia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \"address\" : \"little tokyo\",","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"e0260222"},"content":"    \"dateOfBirth\": \"2000-08-29\",","lastModifiedDate":"2021-02-23"},{"lineNumber":60,"author":{"gitId":"e0260222"},"content":"    \"dateOfJoining\": \"2021-02-01\",","lastModifiedDate":"2021-02-23"},{"lineNumber":61,"author":{"gitId":"e0260222"},"content":"    \"salary\": \"5000\",","lastModifiedDate":"2021-02-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"e0260222"},"content":"    \"role\": \"Developer\",","lastModifiedDate":"2021-02-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482442\",","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    \"email\" : \"anna@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    \"address\" : \"4th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"e0260222"},"content":"    \"dateOfBirth\": \"1981-03-16\",","lastModifiedDate":"2021-02-23"},{"lineNumber":70,"author":{"gitId":"e0260222"},"content":"    \"dateOfJoining\": \"2020-03-01\",","lastModifiedDate":"2021-02-23"},{"lineNumber":71,"author":{"gitId":"e0260222"},"content":"    \"salary\": \"5000\",","lastModifiedDate":"2021-02-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"e0260222":30,"-":44}},{"path":"src/test/data/JsonUserPrefsStorageTest/ExtraValuesUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"extra\" : \"some value \",","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \"y\" : 100,","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \"z\" : 99","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":"  \"employeeTrackerFilePath\" : \"employeetracker.json\"","lastModifiedDate":"2021-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"e0260222":1,"-":12}},{"path":"src/test/data/JsonUserPrefsStorageTest/TypicalUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"y\" : 100","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"  \"employeeTrackerFilePath\" : \"employeetracker.json\"","lastModifiedDate":"2021-02-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"e0260222":1,"-":10}},{"path":"src/test/java/employeetracker/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"e0260222":1,"-":57}},{"path":"src/test/java/employeetracker/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.commons.core;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"e0260222":1,"-":26}},{"path":"src/test/java/employeetracker/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.commons.core;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"e0260222":2,"-":133}},{"path":"src/test/java/employeetracker/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.commons.core.index;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"e0260222":2,"-":58}},{"path":"src/test/java/employeetracker/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.commons.util;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2021-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":"        assertNotNull(AppUtil.getImage(\"/images/employee_tracker_32.png\"));","lastModifiedDate":"2021-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"e0260222":3,"-":33}},{"path":"src/test/java/employeetracker/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.commons.util;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-02-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-02-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"e0260222":3,"-":105}},{"path":"src/test/java/employeetracker/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.commons.util;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.core.Config;","lastModifiedDate":"2021-02-20"},{"lineNumber":17,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"e0260222":4,"-":112}},{"path":"src/test/java/employeetracker/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.commons.util;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"e0260222":2,"-":21}},{"path":"src/test/java/employeetracker/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.commons.util;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"import employeetracker.testutil.SerializableTestClass;","lastModifiedDate":"2021-02-20"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"import employeetracker.testutil.TestUtil;","lastModifiedDate":"2021-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"e0260222":3,"-":42}},{"path":"src/test/java/employeetracker/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.commons.util;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"e0260222":2,"-":141}},{"path":"src/test/java/employeetracker/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.logic;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.commons.core.Messages.MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX;","lastModifiedDate":"2021-02-28"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"import static employeetracker.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-02-20"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-02-20"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.DATE_OF_BIRTH_DESC_AMY;","lastModifiedDate":"2021-02-23"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.DATE_OF_JOINING_DESC_AMY;","lastModifiedDate":"2021-02-23"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-02-20"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-02-20"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-02-20"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.ROLE_DESC_AMY;","lastModifiedDate":"2021-02-24"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.SALARY_DESC_AMY;","lastModifiedDate":"2021-02-24"},{"lineNumber":13,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-20"},{"lineNumber":14,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.TypicalEmployees.AMY;","lastModifiedDate":"2021-02-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-02-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":24,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.commands.AddCommand;","lastModifiedDate":"2021-02-20"},{"lineNumber":25,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.commands.CommandResult;","lastModifiedDate":"2021-02-20"},{"lineNumber":26,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.commands.ListCommand;","lastModifiedDate":"2021-02-20"},{"lineNumber":27,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-02-20"},{"lineNumber":28,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-20"},{"lineNumber":29,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.Model;","lastModifiedDate":"2021-02-20"},{"lineNumber":30,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.ModelManager;","lastModifiedDate":"2021-02-20"},{"lineNumber":31,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.ReadOnlyEmployeeTracker;","lastModifiedDate":"2021-02-20"},{"lineNumber":32,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.UserPrefs;","lastModifiedDate":"2021-02-20"},{"lineNumber":33,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":34,"author":{"gitId":"e0260222"},"content":"import employeetracker.storage.JsonEmployeeTrackerStorage;","lastModifiedDate":"2021-02-20"},{"lineNumber":35,"author":{"gitId":"e0260222"},"content":"import employeetracker.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-02-20"},{"lineNumber":36,"author":{"gitId":"e0260222"},"content":"import employeetracker.storage.StorageManager;","lastModifiedDate":"2021-02-20"},{"lineNumber":37,"author":{"gitId":"e0260222"},"content":"import employeetracker.testutil.EmployeeBuilder;","lastModifiedDate":"2021-02-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"e0260222"},"content":"        JsonEmployeeTrackerStorage addressBookStorage \u003d","lastModifiedDate":"2021-02-20"},{"lineNumber":51,"author":{"gitId":"e0260222"},"content":"                new JsonEmployeeTrackerStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2021-02-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"e0260222"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX);","lastModifiedDate":"2021-02-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"e0260222"},"content":"        // Setup LogicManager with JsonEmployeeTrackerIoExceptionThrowingStub","lastModifiedDate":"2021-02-20"},{"lineNumber":78,"author":{"gitId":"e0260222"},"content":"        JsonEmployeeTrackerStorage addressBookStorage \u003d","lastModifiedDate":"2021-02-20"},{"lineNumber":79,"author":{"gitId":"e0260222"},"content":"                new JsonEmployeeTrackerIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2021-02-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"e0260222"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + ROLE_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-02-24"},{"lineNumber":87,"author":{"gitId":"e0260222"},"content":"                + DATE_OF_BIRTH_DESC_AMY + DATE_OF_JOINING_DESC_AMY + SALARY_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2021-02-24"},{"lineNumber":88,"author":{"gitId":"e0260222"},"content":"        Employee expectedEmployee \u003d new EmployeeBuilder(AMY).withTags().build();","lastModifiedDate":"2021-02-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"e0260222"},"content":"        expectedModel.addEmployee(expectedEmployee);","lastModifiedDate":"2021-02-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"e0260222"},"content":"    public void getFilteredEmployeeList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":97,"author":{"gitId":"e0260222"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredEmployeeList().remove(0));","lastModifiedDate":"2021-02-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"e0260222"},"content":"        Model expectedModel \u003d new ModelManager(model.getEmployeeTracker(), new UserPrefs());","lastModifiedDate":"2021-02-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"e0260222"},"content":"    private static class JsonEmployeeTrackerIoExceptionThrowingStub extends JsonEmployeeTrackerStorage {","lastModifiedDate":"2021-02-20"},{"lineNumber":157,"author":{"gitId":"e0260222"},"content":"        private JsonEmployeeTrackerIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-02-20"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"e0260222"},"content":"        public void saveEmployeeTracker(ReadOnlyEmployeeTracker employeeTracker, Path filePath) throws IOException {","lastModifiedDate":"2021-02-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"e0260222":43,"-":123}},{"path":"src/test/java/employeetracker/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.logic.commands;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-02-20"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.TypicalEmployees.getTypicalEmployeeTracker;","lastModifiedDate":"2021-02-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.Model;","lastModifiedDate":"2021-02-20"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.ModelManager;","lastModifiedDate":"2021-02-20"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.UserPrefs;","lastModifiedDate":"2021-02-20"},{"lineNumber":13,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":14,"author":{"gitId":"e0260222"},"content":"import employeetracker.testutil.EmployeeBuilder;","lastModifiedDate":"2021-02-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"e0260222"},"content":"        model \u003d new ModelManager(getTypicalEmployeeTracker(), new UserPrefs());","lastModifiedDate":"2021-02-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"e0260222"},"content":"    public void execute_newEmployee_success() {","lastModifiedDate":"2021-02-28"},{"lineNumber":30,"author":{"gitId":"e0260222"},"content":"        Employee validEmployee \u003d new EmployeeBuilder().build();","lastModifiedDate":"2021-02-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"e0260222"},"content":"        Model expectedModel \u003d new ModelManager(model.getEmployeeTracker(), new UserPrefs());","lastModifiedDate":"2021-02-20"},{"lineNumber":33,"author":{"gitId":"e0260222"},"content":"        expectedModel.addEmployee(validEmployee);","lastModifiedDate":"2021-02-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"e0260222"},"content":"        assertCommandSuccess(new AddCommand(validEmployee), model,","lastModifiedDate":"2021-02-27"},{"lineNumber":36,"author":{"gitId":"e0260222"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validEmployee), expectedModel);","lastModifiedDate":"2021-02-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"e0260222"},"content":"    public void execute_duplicateEmployee_throwsCommandException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":41,"author":{"gitId":"e0260222"},"content":"        Employee employeeInList \u003d model.getEmployeeTracker().getEmployeeList().get(0);","lastModifiedDate":"2021-02-28"},{"lineNumber":42,"author":{"gitId":"e0260222"},"content":"        assertCommandFailure(new AddCommand(employeeInList), model, AddCommand.MESSAGE_DUPLICATE_EMPLOYEE);","lastModifiedDate":"2021-02-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"e0260222":19,"-":26}},{"path":"src/test/java/employeetracker/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.logic.commands;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.core.GuiSettings;","lastModifiedDate":"2021-02-20"},{"lineNumber":17,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-02-20"},{"lineNumber":18,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.EmployeeTracker;","lastModifiedDate":"2021-02-20"},{"lineNumber":19,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.Model;","lastModifiedDate":"2021-02-20"},{"lineNumber":20,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.ReadOnlyEmployeeTracker;","lastModifiedDate":"2021-02-20"},{"lineNumber":21,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-02-20"},{"lineNumber":22,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":23,"author":{"gitId":"e0260222"},"content":"import employeetracker.testutil.EmployeeBuilder;","lastModifiedDate":"2021-02-28"},{"lineNumber":24,"author":{"gitId":"e0260222"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-02-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"e0260222"},"content":"    public void constructor_nullEmployee_throwsNullPointerException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"e0260222"},"content":"    public void execute_employeeAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-02-28"},{"lineNumber":35,"author":{"gitId":"e0260222"},"content":"        ModelStubAcceptingEmployeeAdded modelStub \u003d new ModelStubAcceptingEmployeeAdded();","lastModifiedDate":"2021-02-28"},{"lineNumber":36,"author":{"gitId":"e0260222"},"content":"        Employee validEmployee \u003d new EmployeeBuilder().build();","lastModifiedDate":"2021-02-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"e0260222"},"content":"        CommandResult commandResult \u003d new AddCommand(validEmployee).execute(modelStub);","lastModifiedDate":"2021-02-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"e0260222"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validEmployee), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-02-27"},{"lineNumber":41,"author":{"gitId":"e0260222"},"content":"        assertEquals(Arrays.asList(validEmployee), modelStub.employeesAdded);","lastModifiedDate":"2021-02-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"e0260222"},"content":"    public void execute_duplicateEmployee_throwsCommandException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":46,"author":{"gitId":"e0260222"},"content":"        Employee validEmployee \u003d new EmployeeBuilder().build();","lastModifiedDate":"2021-02-28"},{"lineNumber":47,"author":{"gitId":"e0260222"},"content":"        AddCommand addCommand \u003d new AddCommand(validEmployee);","lastModifiedDate":"2021-02-27"},{"lineNumber":48,"author":{"gitId":"e0260222"},"content":"        ModelStub modelStub \u003d new ModelStubWithEmployee(validEmployee);","lastModifiedDate":"2021-02-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"e0260222"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-02-28"},{"lineNumber":51,"author":{"gitId":"e0260222"},"content":"                AddCommand.MESSAGE_DUPLICATE_EMPLOYEE, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2021-02-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"e0260222"},"content":"        Employee alice \u003d new EmployeeBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-02-28"},{"lineNumber":57,"author":{"gitId":"e0260222"},"content":"        Employee bob \u003d new EmployeeBuilder().withName(\"Bob\").build();","lastModifiedDate":"2021-02-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"e0260222"},"content":"        // different employee -\u003e returns false","lastModifiedDate":"2021-02-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"e0260222"},"content":"        public Path getEmployeeTrackerFilePath() {","lastModifiedDate":"2021-02-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"e0260222"},"content":"        public void setEmployeeTrackerFilePath(Path employeeTrackerFilePath) {","lastModifiedDate":"2021-02-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"e0260222"},"content":"        public void addEmployee(Employee employee) {","lastModifiedDate":"2021-02-28"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"e0260222"},"content":"        public void setEmployeeTracker(ReadOnlyEmployeeTracker newData) {","lastModifiedDate":"2021-02-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"e0260222"},"content":"        public ReadOnlyEmployeeTracker getEmployeeTracker() {","lastModifiedDate":"2021-02-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"e0260222"},"content":"        public boolean hasEmployee(Employee employee) {","lastModifiedDate":"2021-02-28"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"e0260222"},"content":"        public void deleteEmployee(Employee target) {","lastModifiedDate":"2021-02-28"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"e0260222"},"content":"        public void setEmployee(Employee target, Employee editedEmployee) {","lastModifiedDate":"2021-02-28"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"e0260222"},"content":"        public ObservableList\u003cEmployee\u003e getFilteredEmployeeList() {","lastModifiedDate":"2021-02-28"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"e0260222"},"content":"        public void updateFilteredEmployeeList(Predicate\u003cEmployee\u003e predicate) {","lastModifiedDate":"2021-02-28"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":152,"author":{"gitId":"daiweinus"},"content":"        @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":153,"author":{"gitId":"daiweinus"},"content":"        public void sortEmployee(String field) {","lastModifiedDate":"2021-03-11"},{"lineNumber":154,"author":{"gitId":"daiweinus"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-11"},{"lineNumber":155,"author":{"gitId":"daiweinus"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":156,"author":{"gitId":"Chenduo1412"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":157,"author":{"gitId":"Chenduo1412"},"content":"        @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":158,"author":{"gitId":"Chenduo1412"},"content":"        public String getStatement() {","lastModifiedDate":"2021-03-18"},{"lineNumber":159,"author":{"gitId":"Chenduo1412"},"content":"            return null;","lastModifiedDate":"2021-03-18"},{"lineNumber":160,"author":{"gitId":"Chenduo1412"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"e0260222"},"content":"     * A Model stub that contains a single employee.","lastModifiedDate":"2021-02-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"e0260222"},"content":"    private class ModelStubWithEmployee extends ModelStub {","lastModifiedDate":"2021-02-28"},{"lineNumber":167,"author":{"gitId":"e0260222"},"content":"        private final Employee employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":169,"author":{"gitId":"e0260222"},"content":"        ModelStubWithEmployee(Employee employee) {","lastModifiedDate":"2021-02-28"},{"lineNumber":170,"author":{"gitId":"e0260222"},"content":"            requireNonNull(employee);","lastModifiedDate":"2021-02-27"},{"lineNumber":171,"author":{"gitId":"e0260222"},"content":"            this.employee \u003d employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"e0260222"},"content":"        public boolean hasEmployee(Employee employee) {","lastModifiedDate":"2021-02-28"},{"lineNumber":176,"author":{"gitId":"e0260222"},"content":"            requireNonNull(employee);","lastModifiedDate":"2021-02-27"},{"lineNumber":177,"author":{"gitId":"e0260222"},"content":"            return this.employee.isSameEmployee(employee);","lastModifiedDate":"2021-02-28"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"e0260222"},"content":"     * A Model stub that always accept the employee being added.","lastModifiedDate":"2021-02-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"e0260222"},"content":"    private class ModelStubAcceptingEmployeeAdded extends ModelStub {","lastModifiedDate":"2021-02-28"},{"lineNumber":185,"author":{"gitId":"e0260222"},"content":"        final ArrayList\u003cEmployee\u003e employeesAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-02-28"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"e0260222"},"content":"        public boolean hasEmployee(Employee employee) {","lastModifiedDate":"2021-02-28"},{"lineNumber":189,"author":{"gitId":"e0260222"},"content":"            requireNonNull(employee);","lastModifiedDate":"2021-02-27"},{"lineNumber":190,"author":{"gitId":"e0260222"},"content":"            return employeesAdded.stream().anyMatch(employee::isSameEmployee);","lastModifiedDate":"2021-02-28"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"e0260222"},"content":"        public void addEmployee(Employee employee) {","lastModifiedDate":"2021-02-28"},{"lineNumber":195,"author":{"gitId":"e0260222"},"content":"            requireNonNull(employee);","lastModifiedDate":"2021-02-27"},{"lineNumber":196,"author":{"gitId":"e0260222"},"content":"            employeesAdded.add(employee);","lastModifiedDate":"2021-02-28"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"e0260222"},"content":"        public ReadOnlyEmployeeTracker getEmployeeTracker() {","lastModifiedDate":"2021-02-20"},{"lineNumber":201,"author":{"gitId":"e0260222"},"content":"            return new EmployeeTracker();","lastModifiedDate":"2021-02-20"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"daiweinus":5,"e0260222":57,"Chenduo1412":5,"-":138}},{"path":"src/test/java/employeetracker/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.logic.commands;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.TypicalEmployees.getTypicalEmployeeTracker;","lastModifiedDate":"2021-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.EmployeeTracker;","lastModifiedDate":"2021-02-20"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.Model;","lastModifiedDate":"2021-02-20"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.ModelManager;","lastModifiedDate":"2021-02-20"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.UserPrefs;","lastModifiedDate":"2021-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"e0260222"},"content":"    public void execute_emptyEmployeeTracker_success() {","lastModifiedDate":"2021-02-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"e0260222"},"content":"    public void execute_nonEmptyEmployeeTracker_success() {","lastModifiedDate":"2021-02-20"},{"lineNumber":25,"author":{"gitId":"e0260222"},"content":"        Model model \u003d new ModelManager(getTypicalEmployeeTracker(), new UserPrefs());","lastModifiedDate":"2021-02-20"},{"lineNumber":26,"author":{"gitId":"e0260222"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalEmployeeTracker(), new UserPrefs());","lastModifiedDate":"2021-02-20"},{"lineNumber":27,"author":{"gitId":"e0260222"},"content":"        expectedModel.setEmployeeTracker(new EmployeeTracker());","lastModifiedDate":"2021-02-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"e0260222":12,"-":20}},{"path":"src/test/java/employeetracker/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.logic.commands;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"e0260222":1,"-":53}},{"path":"src/test/java/employeetracker/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"package employeetracker.logic.commands;","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_DATE_OF_BIRTH;","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_DATE_OF_JOINING;","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"dgc5213"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"dgc5213"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"dgc5213"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"dgc5213"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_SALARY;","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"dgc5213"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"dgc5213"},"content":"import static employeetracker.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"dgc5213"},"content":"import employeetracker.commons.core.index.Index;","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"dgc5213"},"content":"import employeetracker.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"dgc5213"},"content":"import employeetracker.model.EmployeeTracker;","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"dgc5213"},"content":"import employeetracker.model.Model;","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"dgc5213"},"content":"import employeetracker.model.employee.Employee;","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"dgc5213"},"content":"import employeetracker.model.employee.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"dgc5213"},"content":"import employeetracker.testutil.EditEmployeeDescriptorBuilder;","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2021-03-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2021-03-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2021-03-02"},{"lineNumber":35,"author":{"gitId":"dgc5213"},"content":"    public static final String VALID_ROLE_AMY \u003d \"Developer\";","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"e0260222"},"content":"    public static final String VALID_ROLE_BOB \u003d \"Account Manager\";","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2021-03-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2021-03-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2021-03-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2021-03-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2021-03-02"},{"lineNumber":43,"author":{"gitId":"dgc5213"},"content":"    public static final String VALID_DATE_OF_BIRTH_AMY \u003d \"1990-10-12\";","lastModifiedDate":"2021-03-02"},{"lineNumber":44,"author":{"gitId":"dgc5213"},"content":"    public static final String VALID_DATE_OF_BIRTH_BOB \u003d \"1990-11-12\";","lastModifiedDate":"2021-03-02"},{"lineNumber":45,"author":{"gitId":"dgc5213"},"content":"    public static final String VALID_DATE_OF_JOINING_AMY \u003d \"2019-02-01\";","lastModifiedDate":"2021-03-02"},{"lineNumber":46,"author":{"gitId":"dgc5213"},"content":"    public static final String VALID_DATE_OF_JOINING_BOB \u003d \"2020-03-01\";","lastModifiedDate":"2021-03-02"},{"lineNumber":47,"author":{"gitId":"dgc5213"},"content":"    public static final String VALID_SALARY_AMY \u003d \"6000\";","lastModifiedDate":"2021-03-02"},{"lineNumber":48,"author":{"gitId":"dgc5213"},"content":"    public static final String VALID_SALARY_BOB \u003d \"6500\";","lastModifiedDate":"2021-03-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2021-03-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2021-03-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2021-03-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2021-03-02"},{"lineNumber":54,"author":{"gitId":"dgc5213"},"content":"    public static final String ROLE_DESC_AMY \u003d \" \" + PREFIX_ROLE + VALID_ROLE_AMY;","lastModifiedDate":"2021-03-02"},{"lineNumber":55,"author":{"gitId":"dgc5213"},"content":"    public static final String ROLE_DESC_BOB \u003d \" \" + PREFIX_ROLE + VALID_ROLE_BOB;","lastModifiedDate":"2021-03-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2021-03-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2021-03-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2021-03-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2021-03-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2021-03-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-02"},{"lineNumber":62,"author":{"gitId":"dgc5213"},"content":"    public static final String DATE_OF_BIRTH_DESC_AMY \u003d \" \" + PREFIX_DATE_OF_BIRTH + VALID_DATE_OF_BIRTH_AMY;","lastModifiedDate":"2021-03-02"},{"lineNumber":63,"author":{"gitId":"dgc5213"},"content":"    public static final String DATE_OF_BIRTH_DESC_BOB \u003d \" \" + PREFIX_DATE_OF_BIRTH + VALID_DATE_OF_BIRTH_BOB;","lastModifiedDate":"2021-03-02"},{"lineNumber":64,"author":{"gitId":"dgc5213"},"content":"    public static final String DATE_OF_JOINING_DESC_AMY \u003d \" \" + PREFIX_DATE_OF_JOINING + VALID_DATE_OF_JOINING_AMY;","lastModifiedDate":"2021-03-02"},{"lineNumber":65,"author":{"gitId":"dgc5213"},"content":"    public static final String DATE_OF_JOINING_DESC_BOB \u003d \" \" + PREFIX_DATE_OF_JOINING + VALID_DATE_OF_JOINING_BOB;","lastModifiedDate":"2021-03-02"},{"lineNumber":66,"author":{"gitId":"dgc5213"},"content":"    public static final String SALARY_DESC_AMY \u003d \" \" + PREFIX_SALARY + VALID_SALARY_AMY;","lastModifiedDate":"2021-03-02"},{"lineNumber":67,"author":{"gitId":"dgc5213"},"content":"    public static final String SALARY_DESC_BOB \u003d \" \" + PREFIX_SALARY + VALID_SALARY_BOB;","lastModifiedDate":"2021-03-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2021-03-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2021-03-02"},{"lineNumber":72,"author":{"gitId":"e0260222"},"content":"    public static final String INVALID_ROLE_DESC \u003d \" \" + PREFIX_ROLE + \" \"; // empty string not allowed for roles","lastModifiedDate":"2021-03-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2021-03-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2021-03-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2021-03-02"},{"lineNumber":76,"author":{"gitId":"dgc5213"},"content":"    public static final String INVALID_DATE_OF_BIRTH_DESC \u003d","lastModifiedDate":"2021-03-02"},{"lineNumber":77,"author":{"gitId":"dgc5213"},"content":"            \" \" + PREFIX_DATE_OF_BIRTH + \"1990/12/10\"; // \u0027/\u0027 not allowed in date of birth","lastModifiedDate":"2021-03-02"},{"lineNumber":78,"author":{"gitId":"dgc5213"},"content":"    public static final String INVALID_DATE_OF_JOINING_DESC \u003d","lastModifiedDate":"2021-03-02"},{"lineNumber":79,"author":{"gitId":"e0260222"},"content":"            \" \" + PREFIX_DATE_OF_JOINING + \"2020/12/10\"; // \u0027/\u0027 not allowed in date of joining","lastModifiedDate":"2021-03-22"},{"lineNumber":80,"author":{"gitId":"e0260222"},"content":"    public static final String INVALID_SALARY_DESC \u003d \" \" + PREFIX_SALARY + \"1000.00\"; // \u0027.\u0027 not allowed in salaries","lastModifiedDate":"2021-03-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2021-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2021-03-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2021-03-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":86,"author":{"gitId":"dgc5213"},"content":"    public static final EditCommand.EditEmployeeDescriptor DESC_AMY;","lastModifiedDate":"2021-03-02"},{"lineNumber":87,"author":{"gitId":"dgc5213"},"content":"    public static final EditCommand.EditEmployeeDescriptor DESC_BOB;","lastModifiedDate":"2021-03-02"},{"lineNumber":88,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2021-03-02"},{"lineNumber":91,"author":{"gitId":"dgc5213"},"content":"        DESC_AMY \u003d new EditEmployeeDescriptorBuilder().withName(VALID_NAME_AMY).withRole(VALID_ROLE_AMY)","lastModifiedDate":"2021-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2021-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-02"},{"lineNumber":94,"author":{"gitId":"dgc5213"},"content":"        DESC_BOB \u003d new EditEmployeeDescriptorBuilder().withName(VALID_NAME_BOB).withRole(VALID_ROLE_AMY)","lastModifiedDate":"2021-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2021-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2021-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2021-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2021-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2021-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2021-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2021-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2021-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2021-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2021-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2021-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2021-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2021-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":129,"author":{"gitId":"dgc5213"},"content":"     * - the address book, filtered employee list and selected employee in {@code actualModel} remain unchanged","lastModifiedDate":"2021-03-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2021-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2021-03-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2021-03-02"},{"lineNumber":134,"author":{"gitId":"dgc5213"},"content":"        EmployeeTracker expectedEmployeeTracker \u003d new EmployeeTracker(actualModel.getEmployeeTracker());","lastModifiedDate":"2021-03-02"},{"lineNumber":135,"author":{"gitId":"dgc5213"},"content":"        List\u003cEmployee\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredEmployeeList());","lastModifiedDate":"2021-03-02"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2021-03-02"},{"lineNumber":138,"author":{"gitId":"dgc5213"},"content":"        assertEquals(expectedEmployeeTracker, actualModel.getEmployeeTracker());","lastModifiedDate":"2021-03-02"},{"lineNumber":139,"author":{"gitId":"dgc5213"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredEmployeeList());","lastModifiedDate":"2021-03-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":142,"author":{"gitId":"dgc5213"},"content":"     * Updates {@code model}\u0027s filtered list to show only the employee at the given {@code targetIndex} in the","lastModifiedDate":"2021-03-02"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2021-03-02"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":145,"author":{"gitId":"dgc5213"},"content":"    public static void showEmployeeAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-03-02"},{"lineNumber":146,"author":{"gitId":"dgc5213"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredEmployeeList().size());","lastModifiedDate":"2021-03-02"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":148,"author":{"gitId":"dgc5213"},"content":"        Employee employee \u003d model.getFilteredEmployeeList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-02"},{"lineNumber":149,"author":{"gitId":"dgc5213"},"content":"        final String[] splitName \u003d employee.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-03-02"},{"lineNumber":150,"author":{"gitId":"dgc5213"},"content":"        model.updateFilteredEmployeeList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0]), \"n/\"));","lastModifiedDate":"2021-03-03"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":152,"author":{"gitId":"dgc5213"},"content":"        assertEquals(1, model.getFilteredEmployeeList().size());","lastModifiedDate":"2021-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"dgc5213":54,"e0260222":4,"-":97}},{"path":"src/test/java/employeetracker/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.logic.commands;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-02-20"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.showEmployeeAtIndex;","lastModifiedDate":"2021-02-28"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.TypicalEmployees.getTypicalEmployeeTracker;","lastModifiedDate":"2021-02-28"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.TypicalIndexes.INDEX_FIRST_EMPLOYEE;","lastModifiedDate":"2021-02-28"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.TypicalIndexes.INDEX_SECOND_EMPLOYEE;","lastModifiedDate":"2021-02-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-02-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-02-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.core.Messages;","lastModifiedDate":"2021-02-20"},{"lineNumber":15,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.core.index.Index;","lastModifiedDate":"2021-02-20"},{"lineNumber":16,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.Model;","lastModifiedDate":"2021-02-20"},{"lineNumber":17,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.ModelManager;","lastModifiedDate":"2021-02-20"},{"lineNumber":18,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.UserPrefs;","lastModifiedDate":"2021-02-20"},{"lineNumber":19,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"e0260222"},"content":"    private Model model \u003d new ModelManager(getTypicalEmployeeTracker(), new UserPrefs());","lastModifiedDate":"2021-02-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"e0260222"},"content":"        Employee employeeToDelete \u003d model.getFilteredEmployeeList().get(INDEX_FIRST_EMPLOYEE.getZeroBased());","lastModifiedDate":"2021-02-28"},{"lineNumber":32,"author":{"gitId":"e0260222"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_EMPLOYEE);","lastModifiedDate":"2021-02-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"e0260222"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_EMPLOYEE_SUCCESS, employeeToDelete);","lastModifiedDate":"2021-02-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"e0260222"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getEmployeeTracker(), new UserPrefs());","lastModifiedDate":"2021-02-20"},{"lineNumber":37,"author":{"gitId":"e0260222"},"content":"        expectedModel.deleteEmployee(employeeToDelete);","lastModifiedDate":"2021-02-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"e0260222"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredEmployeeList().size() + 1);","lastModifiedDate":"2021-02-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"e0260222"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX);","lastModifiedDate":"2021-02-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"e0260222"},"content":"        showEmployeeAtIndex(model, INDEX_FIRST_EMPLOYEE);","lastModifiedDate":"2021-02-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"e0260222"},"content":"        Employee employeeToDelete \u003d model.getFilteredEmployeeList().get(INDEX_FIRST_EMPLOYEE.getZeroBased());","lastModifiedDate":"2021-02-28"},{"lineNumber":55,"author":{"gitId":"e0260222"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_EMPLOYEE);","lastModifiedDate":"2021-02-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"e0260222"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_EMPLOYEE_SUCCESS, employeeToDelete);","lastModifiedDate":"2021-02-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"e0260222"},"content":"        Model expectedModel \u003d new ModelManager(model.getEmployeeTracker(), new UserPrefs());","lastModifiedDate":"2021-02-20"},{"lineNumber":60,"author":{"gitId":"e0260222"},"content":"        expectedModel.deleteEmployee(employeeToDelete);","lastModifiedDate":"2021-02-28"},{"lineNumber":61,"author":{"gitId":"e0260222"},"content":"        showNoEmployee(expectedModel);","lastModifiedDate":"2021-02-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"e0260222"},"content":"        showEmployeeAtIndex(model, INDEX_FIRST_EMPLOYEE);","lastModifiedDate":"2021-02-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"e0260222"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_EMPLOYEE;","lastModifiedDate":"2021-02-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"e0260222"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getEmployeeTracker().getEmployeeList().size());","lastModifiedDate":"2021-02-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"e0260222"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX);","lastModifiedDate":"2021-02-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"e0260222"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_EMPLOYEE);","lastModifiedDate":"2021-02-28"},{"lineNumber":82,"author":{"gitId":"e0260222"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_EMPLOYEE);","lastModifiedDate":"2021-02-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"e0260222"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_EMPLOYEE);","lastModifiedDate":"2021-02-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"e0260222"},"content":"        // different employee -\u003e returns false","lastModifiedDate":"2021-02-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"e0260222"},"content":"    private void showNoEmployee(Model model) {","lastModifiedDate":"2021-02-28"},{"lineNumber":105,"author":{"gitId":"e0260222"},"content":"        model.updateFilteredEmployeeList(p -\u003e false);","lastModifiedDate":"2021-02-28"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"e0260222"},"content":"        assertTrue(model.getFilteredEmployeeList().isEmpty());","lastModifiedDate":"2021-02-28"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"e0260222":39,"-":70}},{"path":"src/test/java/employeetracker/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.logic.commands;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-02-20"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-02-20"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-02-20"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-02-20"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-02-20"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-02-20"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.showEmployeeAtIndex;","lastModifiedDate":"2021-02-28"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.TypicalEmployees.getTypicalEmployeeTracker;","lastModifiedDate":"2021-02-28"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.TypicalIndexes.INDEX_FIRST_EMPLOYEE;","lastModifiedDate":"2021-02-28"},{"lineNumber":13,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.TypicalIndexes.INDEX_SECOND_EMPLOYEE;","lastModifiedDate":"2021-02-28"},{"lineNumber":14,"author":{"gitId":"e0260222"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-02-20"},{"lineNumber":15,"author":{"gitId":"e0260222"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-02-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.core.Messages;","lastModifiedDate":"2021-02-20"},{"lineNumber":20,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.core.index.Index;","lastModifiedDate":"2021-02-20"},{"lineNumber":21,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.commands.EditCommand.EditEmployeeDescriptor;","lastModifiedDate":"2021-02-28"},{"lineNumber":22,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.EmployeeTracker;","lastModifiedDate":"2021-02-20"},{"lineNumber":23,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.Model;","lastModifiedDate":"2021-02-20"},{"lineNumber":24,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.ModelManager;","lastModifiedDate":"2021-02-20"},{"lineNumber":25,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.UserPrefs;","lastModifiedDate":"2021-02-20"},{"lineNumber":26,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":27,"author":{"gitId":"e0260222"},"content":"import employeetracker.testutil.EditEmployeeDescriptorBuilder;","lastModifiedDate":"2021-02-28"},{"lineNumber":28,"author":{"gitId":"e0260222"},"content":"import employeetracker.testutil.EmployeeBuilder;","lastModifiedDate":"2021-02-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"e0260222"},"content":"    private Model model \u003d new ModelManager(getTypicalEmployeeTracker(), new UserPrefs());","lastModifiedDate":"2021-02-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"e0260222"},"content":"        Employee editedEmployee \u003d new EmployeeBuilder().build();","lastModifiedDate":"2021-02-28"},{"lineNumber":40,"author":{"gitId":"e0260222"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder(editedEmployee).build();","lastModifiedDate":"2021-02-28"},{"lineNumber":41,"author":{"gitId":"e0260222"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_EMPLOYEE, descriptor);","lastModifiedDate":"2021-02-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"e0260222"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_EMPLOYEE_SUCCESS, editedEmployee);","lastModifiedDate":"2021-02-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"e0260222"},"content":"        Model expectedModel \u003d new ModelManager(new EmployeeTracker(model.getEmployeeTracker()), new UserPrefs());","lastModifiedDate":"2021-02-20"},{"lineNumber":46,"author":{"gitId":"e0260222"},"content":"        expectedModel.setEmployee(model.getFilteredEmployeeList().get(0), editedEmployee);","lastModifiedDate":"2021-02-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"e0260222"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredEmployeeList().size());","lastModifiedDate":"2021-02-28"},{"lineNumber":54,"author":{"gitId":"e0260222"},"content":"        Employee lastEmployee \u003d model.getFilteredEmployeeList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2021-02-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"e0260222"},"content":"        EmployeeBuilder personInList \u003d new EmployeeBuilder(lastEmployee);","lastModifiedDate":"2021-02-28"},{"lineNumber":57,"author":{"gitId":"e0260222"},"content":"        Employee editedEmployee \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-02-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"e0260222"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-02-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"e0260222"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_EMPLOYEE_SUCCESS, editedEmployee);","lastModifiedDate":"2021-02-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"e0260222"},"content":"        Model expectedModel \u003d new ModelManager(new EmployeeTracker(model.getEmployeeTracker()), new UserPrefs());","lastModifiedDate":"2021-02-20"},{"lineNumber":67,"author":{"gitId":"e0260222"},"content":"        expectedModel.setEmployee(lastEmployee, editedEmployee);","lastModifiedDate":"2021-02-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"e0260222"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_EMPLOYEE, new EditEmployeeDescriptor());","lastModifiedDate":"2021-02-28"},{"lineNumber":75,"author":{"gitId":"e0260222"},"content":"        Employee editedEmployee \u003d model.getFilteredEmployeeList().get(INDEX_FIRST_EMPLOYEE.getZeroBased());","lastModifiedDate":"2021-02-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"e0260222"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_EMPLOYEE_SUCCESS, editedEmployee);","lastModifiedDate":"2021-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"e0260222"},"content":"        Model expectedModel \u003d new ModelManager(new EmployeeTracker(model.getEmployeeTracker()), new UserPrefs());","lastModifiedDate":"2021-02-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"e0260222"},"content":"        showEmployeeAtIndex(model, INDEX_FIRST_EMPLOYEE);","lastModifiedDate":"2021-02-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"e0260222"},"content":"        Employee employeeInFilteredList \u003d model.getFilteredEmployeeList().get(INDEX_FIRST_EMPLOYEE.getZeroBased());","lastModifiedDate":"2021-02-28"},{"lineNumber":89,"author":{"gitId":"e0260222"},"content":"        Employee editedEmployee \u003d new EmployeeBuilder(employeeInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-02-28"},{"lineNumber":90,"author":{"gitId":"e0260222"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_EMPLOYEE,","lastModifiedDate":"2021-02-28"},{"lineNumber":91,"author":{"gitId":"e0260222"},"content":"                new EditEmployeeDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-02-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"e0260222"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_EMPLOYEE_SUCCESS, editedEmployee);","lastModifiedDate":"2021-02-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"e0260222"},"content":"        Model expectedModel \u003d new ModelManager(new EmployeeTracker(model.getEmployeeTracker()), new UserPrefs());","lastModifiedDate":"2021-02-20"},{"lineNumber":96,"author":{"gitId":"e0260222"},"content":"        expectedModel.setEmployee(model.getFilteredEmployeeList().get(0), editedEmployee);","lastModifiedDate":"2021-02-28"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"e0260222"},"content":"    public void execute_duplicateEmployeeUnfilteredList_failure() {","lastModifiedDate":"2021-02-28"},{"lineNumber":103,"author":{"gitId":"e0260222"},"content":"        Employee firstEmployee \u003d model.getFilteredEmployeeList().get(INDEX_FIRST_EMPLOYEE.getZeroBased());","lastModifiedDate":"2021-02-28"},{"lineNumber":104,"author":{"gitId":"e0260222"},"content":"        EditCommand.EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder(firstEmployee).build();","lastModifiedDate":"2021-02-28"},{"lineNumber":105,"author":{"gitId":"e0260222"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_EMPLOYEE, descriptor);","lastModifiedDate":"2021-02-28"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"e0260222"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_EMPLOYEE);","lastModifiedDate":"2021-02-28"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"e0260222"},"content":"    public void execute_duplicateEmployeeFilteredList_failure() {","lastModifiedDate":"2021-02-28"},{"lineNumber":112,"author":{"gitId":"e0260222"},"content":"        showEmployeeAtIndex(model, INDEX_FIRST_EMPLOYEE);","lastModifiedDate":"2021-02-28"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"e0260222"},"content":"        // edit employee in filtered list into a duplicate in Employee Tracker","lastModifiedDate":"2021-02-28"},{"lineNumber":115,"author":{"gitId":"e0260222"},"content":"        Employee employeeInList \u003d model.getEmployeeTracker().getEmployeeList()","lastModifiedDate":"2021-02-28"},{"lineNumber":116,"author":{"gitId":"e0260222"},"content":"                .get(INDEX_SECOND_EMPLOYEE.getZeroBased());","lastModifiedDate":"2021-02-28"},{"lineNumber":117,"author":{"gitId":"e0260222"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_EMPLOYEE,","lastModifiedDate":"2021-02-28"},{"lineNumber":118,"author":{"gitId":"e0260222"},"content":"                new EditEmployeeDescriptorBuilder(employeeInList).build());","lastModifiedDate":"2021-02-28"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"e0260222"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_EMPLOYEE);","lastModifiedDate":"2021-02-28"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"e0260222"},"content":"    public void execute_invalidEmployeeIndexUnfilteredList_failure() {","lastModifiedDate":"2021-02-28"},{"lineNumber":125,"author":{"gitId":"e0260222"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredEmployeeList().size() + 1);","lastModifiedDate":"2021-02-28"},{"lineNumber":126,"author":{"gitId":"e0260222"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-02-28"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"e0260222"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX);","lastModifiedDate":"2021-02-28"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"e0260222"},"content":"     * but smaller than size of Employee Tracker","lastModifiedDate":"2021-02-28"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"e0260222"},"content":"    public void execute_invalidEmployeeIndexFilteredList_failure() {","lastModifiedDate":"2021-02-28"},{"lineNumber":138,"author":{"gitId":"e0260222"},"content":"        showEmployeeAtIndex(model, INDEX_FIRST_EMPLOYEE);","lastModifiedDate":"2021-02-28"},{"lineNumber":139,"author":{"gitId":"e0260222"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_EMPLOYEE;","lastModifiedDate":"2021-02-28"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"e0260222"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getEmployeeTracker().getEmployeeList().size());","lastModifiedDate":"2021-02-28"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"e0260222"},"content":"                new EditEmployeeDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-02-28"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"e0260222"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX);","lastModifiedDate":"2021-02-28"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"e0260222"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_EMPLOYEE, DESC_AMY);","lastModifiedDate":"2021-02-28"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"e0260222"},"content":"        EditEmployeeDescriptor copyDescriptor \u003d new EditCommand.EditEmployeeDescriptor(DESC_AMY);","lastModifiedDate":"2021-02-28"},{"lineNumber":155,"author":{"gitId":"e0260222"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_EMPLOYEE, copyDescriptor);","lastModifiedDate":"2021-02-28"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"e0260222"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_EMPLOYEE, DESC_AMY)));","lastModifiedDate":"2021-02-28"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"e0260222"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_EMPLOYEE, DESC_BOB)));","lastModifiedDate":"2021-02-28"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"e0260222":80,"-":94}},{"path":"src/test/java/employeetracker/logic/commands/EditEmployeeDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.logic.commands;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-02-20"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-02-20"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_DATE_OF_BIRTH_BOB;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_DATE_OF_JOINING_BOB;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-02-20"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-02-20"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-02-20"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_ROLE_BOB;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_SALARY_BOB;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-02-20"},{"lineNumber":14,"author":{"gitId":"e0260222"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-02-20"},{"lineNumber":15,"author":{"gitId":"e0260222"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-02-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"e0260222"},"content":"import employeetracker.testutil.EditEmployeeDescriptorBuilder;","lastModifiedDate":"2021-02-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"e0260222"},"content":"public class EditEmployeeDescriptorTest {","lastModifiedDate":"2021-02-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"e0260222"},"content":"        EditCommand.EditEmployeeDescriptor descriptorWithSameValues \u003d new EditCommand.EditEmployeeDescriptor(DESC_AMY);","lastModifiedDate":"2021-02-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"e0260222"},"content":"        EditCommand.EditEmployeeDescriptor editedAmy \u003d new EditEmployeeDescriptorBuilder(DESC_AMY)","lastModifiedDate":"2021-02-28"},{"lineNumber":43,"author":{"gitId":"e0260222"},"content":"                .withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-02-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"e0260222"},"content":"        // different role -\u003e returns false","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"e0260222"},"content":"        editedAmy \u003d new EditEmployeeDescriptorBuilder(DESC_AMY).withRole(VALID_ROLE_BOB).build();","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"e0260222"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"e0260222"},"content":"        editedAmy \u003d new EditEmployeeDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-02-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"e0260222"},"content":"        editedAmy \u003d new EditEmployeeDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-02-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"e0260222"},"content":"        editedAmy \u003d new EditEmployeeDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-02-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"e0260222"},"content":"        // different date of birth -\u003e returns false","lastModifiedDate":"2021-03-22"},{"lineNumber":63,"author":{"gitId":"e0260222"},"content":"        editedAmy \u003d new EditEmployeeDescriptorBuilder(DESC_AMY).withDateOfBirth(VALID_DATE_OF_BIRTH_BOB).build();","lastModifiedDate":"2021-03-22"},{"lineNumber":64,"author":{"gitId":"e0260222"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-03-22"},{"lineNumber":65,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":66,"author":{"gitId":"e0260222"},"content":"        // different date of joining -\u003e returns false","lastModifiedDate":"2021-03-22"},{"lineNumber":67,"author":{"gitId":"e0260222"},"content":"        editedAmy \u003d new EditEmployeeDescriptorBuilder(DESC_AMY).withDateOfJoining(VALID_DATE_OF_JOINING_BOB).build();","lastModifiedDate":"2021-03-22"},{"lineNumber":68,"author":{"gitId":"e0260222"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-03-22"},{"lineNumber":69,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":70,"author":{"gitId":"e0260222"},"content":"        // different salary -\u003e returns false","lastModifiedDate":"2021-03-22"},{"lineNumber":71,"author":{"gitId":"e0260222"},"content":"        editedAmy \u003d new EditEmployeeDescriptorBuilder(DESC_AMY).withSalary(VALID_SALARY_BOB).build();","lastModifiedDate":"2021-03-22"},{"lineNumber":72,"author":{"gitId":"e0260222"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-03-22"},{"lineNumber":73,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"e0260222"},"content":"        editedAmy \u003d new EditEmployeeDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-02-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"e0260222":39,"-":39}},{"path":"src/test/java/employeetracker/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.logic.commands;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2021-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.Model;","lastModifiedDate":"2021-02-20"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.ModelManager;","lastModifiedDate":"2021-02-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"e0260222":5,"-":15}},{"path":"src/test/java/employeetracker/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"package employeetracker.logic.commands;","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":"import static employeetracker.commons.core.Messages.MESSAGE_EMPLOYEES_LISTED_OVERVIEW;","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":"import static employeetracker.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":"import static employeetracker.testutil.TypicalEmployees.CARL;","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":"import static employeetracker.testutil.TypicalEmployees.ELLE;","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"dgc5213"},"content":"import static employeetracker.testutil.TypicalEmployees.FIONA;","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"dgc5213"},"content":"import static employeetracker.testutil.TypicalEmployees.getTypicalEmployeeTracker;","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"dgc5213"},"content":"import employeetracker.model.Model;","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"dgc5213"},"content":"import employeetracker.model.ModelManager;","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"dgc5213"},"content":"import employeetracker.model.UserPrefs;","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"dgc5213"},"content":"import employeetracker.model.employee.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"dgc5213"},"content":"    private Model model \u003d new ModelManager(getTypicalEmployeeTracker(), new UserPrefs());","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"dgc5213"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalEmployeeTracker(), new UserPrefs());","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"dgc5213"},"content":"    private String findBy;","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2021-03-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-03-02"},{"lineNumber":34,"author":{"gitId":"dgc5213"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"), findBy);","lastModifiedDate":"2021-03-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"dgc5213"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"), findBy);","lastModifiedDate":"2021-03-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2021-03-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2021-03-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2021-03-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2021-03-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2021-03-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2021-03-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2021-03-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":54,"author":{"gitId":"dgc5213"},"content":"        // different employee -\u003e returns false","lastModifiedDate":"2021-03-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2021-03-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":59,"author":{"gitId":"dgc5213"},"content":"    public void execute_zeroKeywords_noEmployeeFound() {","lastModifiedDate":"2021-03-02"},{"lineNumber":60,"author":{"gitId":"dgc5213"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EMPLOYEES_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-03-02"},{"lineNumber":61,"author":{"gitId":"dgc5213"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(","lastModifiedDate":"2021-03-02"},{"lineNumber":62,"author":{"gitId":"dgc5213"},"content":"                Collections.emptyList(), \"n/\");","lastModifiedDate":"2021-03-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2021-03-02"},{"lineNumber":64,"author":{"gitId":"dgc5213"},"content":"        expectedModel.updateFilteredEmployeeList(predicate);","lastModifiedDate":"2021-03-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-02"},{"lineNumber":66,"author":{"gitId":"dgc5213"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredEmployeeList());","lastModifiedDate":"2021-03-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":70,"author":{"gitId":"dgc5213"},"content":"    public void execute_multipleKeywords_multipleEmployeesFound() {","lastModifiedDate":"2021-03-02"},{"lineNumber":71,"author":{"gitId":"dgc5213"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EMPLOYEES_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-03-02"},{"lineNumber":72,"author":{"gitId":"dgc5213"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(","lastModifiedDate":"2021-03-02"},{"lineNumber":73,"author":{"gitId":"dgc5213"},"content":"                Arrays.asList(\"Kurz\", \"Elle\", \"Kunz\"), \"n/\");","lastModifiedDate":"2021-03-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2021-03-02"},{"lineNumber":75,"author":{"gitId":"dgc5213"},"content":"        expectedModel.updateFilteredEmployeeList(predicate);","lastModifiedDate":"2021-03-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-02"},{"lineNumber":77,"author":{"gitId":"dgc5213"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredEmployeeList());","lastModifiedDate":"2021-03-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":80,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2021-03-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-03-02"},{"lineNumber":86,"author":{"gitId":"dgc5213"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")), findBy);","lastModifiedDate":"2021-03-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"dgc5213":32,"-":56}},{"path":"src/test/java/employeetracker/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.logic.commands;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2021-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.Model;","lastModifiedDate":"2021-02-20"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.ModelManager;","lastModifiedDate":"2021-02-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"e0260222":5,"-":15}},{"path":"src/test/java/employeetracker/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.logic.commands;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.showEmployeeAtIndex;","lastModifiedDate":"2021-02-28"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.TypicalEmployees.getTypicalEmployeeTracker;","lastModifiedDate":"2021-02-28"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.TypicalIndexes.INDEX_FIRST_EMPLOYEE;","lastModifiedDate":"2021-02-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.Model;","lastModifiedDate":"2021-02-20"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.ModelManager;","lastModifiedDate":"2021-02-20"},{"lineNumber":13,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.UserPrefs;","lastModifiedDate":"2021-02-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"e0260222"},"content":"        model \u003d new ModelManager(getTypicalEmployeeTracker(), new UserPrefs());","lastModifiedDate":"2021-02-20"},{"lineNumber":26,"author":{"gitId":"e0260222"},"content":"        expectedModel \u003d new ModelManager(model.getEmployeeTracker(), new UserPrefs());","lastModifiedDate":"2021-02-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"e0260222"},"content":"        showEmployeeAtIndex(model, INDEX_FIRST_EMPLOYEE);","lastModifiedDate":"2021-02-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"e0260222":11,"-":28}},{"path":"src/test/java/employeetracker/logic/commands/SortCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daiweinus"},"content":"package employeetracker.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"daiweinus"},"content":"import static employeetracker.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"daiweinus"},"content":"import static employeetracker.testutil.TypicalEmployees.getTypicalEmployeeTracker;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"daiweinus"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"daiweinus"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"daiweinus"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"daiweinus"},"content":"import employeetracker.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"daiweinus"},"content":"import employeetracker.model.ModelManager;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"daiweinus"},"content":"import employeetracker.model.UserPrefs;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"daiweinus"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"daiweinus"},"content":" * Contains integration tests (interaction with the Model) for {@code SortCommand}.","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"daiweinus"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"daiweinus"},"content":"class SortCommandTest {","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"daiweinus"},"content":"    private final Model model \u003d new ModelManager(getTypicalEmployeeTracker(), new UserPrefs());","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"daiweinus"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalEmployeeTracker(), new UserPrefs());","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"daiweinus"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"daiweinus"},"content":"    public void equals() {","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"daiweinus"},"content":"        SortCommand firstSortCommand \u003d new SortCommand(\"n\");","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"daiweinus"},"content":"        SortCommand secondSortCommand \u003d new SortCommand(\"s\");","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"daiweinus"},"content":"        SortCommand thirdSortCommand \u003d new SortCommand(\"j\");","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"daiweinus"},"content":"        SortCommand fourthSortCommand \u003d new SortCommand(\"b\");","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"daiweinus"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"daiweinus"},"content":"        assertEquals(firstSortCommand, firstSortCommand);","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"daiweinus"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"daiweinus"},"content":"        SortCommand secondSortCommandCopy \u003d new SortCommand(\"s\");","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"daiweinus"},"content":"        assertEquals(secondSortCommandCopy, secondSortCommand);","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"daiweinus"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"daiweinus"},"content":"        assertNotEquals(thirdSortCommand, 1);","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"daiweinus"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"daiweinus"},"content":"        assertNotEquals(fourthSortCommand, null);","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"daiweinus"},"content":"        // different value -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"daiweinus"},"content":"        assertNotEquals(secondSortCommand, firstSortCommand);","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"daiweinus"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"daiweinus"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"daiweinus"},"content":"    public void execute_validArgsN_success() {","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"daiweinus"},"content":"        SortCommand testSortCommand \u003d new SortCommand(\"n\");","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"daiweinus"},"content":"        String expectedMessage \u003d SortCommand.MESSAGE_SORT_EMPLOYEE_SUCCESS;","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"daiweinus"},"content":"        expectedModel.sortEmployee(\"n\");","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"daiweinus"},"content":"        assertCommandSuccess(testSortCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"daiweinus"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"daiweinus"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"daiweinus"},"content":"    public void execute_validArgsS_success() {","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"daiweinus"},"content":"        SortCommand testSortCommand \u003d new SortCommand(\"s\");","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"daiweinus"},"content":"        String expectedMessage \u003d SortCommand.MESSAGE_SORT_EMPLOYEE_SUCCESS;","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"daiweinus"},"content":"        expectedModel.sortEmployee(\"s\");","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"daiweinus"},"content":"        assertCommandSuccess(testSortCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"daiweinus"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"daiweinus"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"daiweinus"},"content":"    public void execute_validArgsJ_success() {","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"daiweinus"},"content":"        SortCommand testSortCommand \u003d new SortCommand(\"j\");","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"daiweinus"},"content":"        String expectedMessage \u003d SortCommand.MESSAGE_SORT_EMPLOYEE_SUCCESS;","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"daiweinus"},"content":"        expectedModel.sortEmployee(\"j\");","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"daiweinus"},"content":"        assertCommandSuccess(testSortCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"daiweinus"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"daiweinus"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"daiweinus"},"content":"    public void execute_validArgsB_success() {","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"daiweinus"},"content":"        SortCommand testSortCommand \u003d new SortCommand(\"b\");","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"daiweinus"},"content":"        String expectedMessage \u003d SortCommand.MESSAGE_SORT_EMPLOYEE_SUCCESS;","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"daiweinus"},"content":"        expectedModel.sortEmployee(\"b\");","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"daiweinus"},"content":"        assertCommandSuccess(testSortCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"daiweinus"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"daiweinus"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"daiweinus":81}},{"path":"src/test/java/employeetracker/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.logic.parser;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-02-20"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2021-02-20"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.DATE_OF_BIRTH_DESC_AMY;","lastModifiedDate":"2021-02-23"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.DATE_OF_BIRTH_DESC_BOB;","lastModifiedDate":"2021-02-23"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.DATE_OF_JOINING_DESC_AMY;","lastModifiedDate":"2021-02-23"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.DATE_OF_JOINING_DESC_BOB;","lastModifiedDate":"2021-02-23"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-02-20"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-02-20"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-02-20"},{"lineNumber":13,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.INVALID_DATE_OF_BIRTH_DESC;","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.INVALID_DATE_OF_JOINING_DESC;","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-02-20"},{"lineNumber":16,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-02-20"},{"lineNumber":17,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-02-20"},{"lineNumber":18,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.INVALID_ROLE_DESC;","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.INVALID_SALARY_DESC;","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-02-20"},{"lineNumber":21,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-02-20"},{"lineNumber":22,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-02-20"},{"lineNumber":23,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-02-20"},{"lineNumber":24,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-02-20"},{"lineNumber":25,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-02-20"},{"lineNumber":26,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-02-20"},{"lineNumber":27,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.ROLE_DESC_AMY;","lastModifiedDate":"2021-02-24"},{"lineNumber":28,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.ROLE_DESC_BOB;","lastModifiedDate":"2021-02-24"},{"lineNumber":29,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.SALARY_DESC_AMY;","lastModifiedDate":"2021-02-24"},{"lineNumber":30,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.SALARY_DESC_BOB;","lastModifiedDate":"2021-02-24"},{"lineNumber":31,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-02-20"},{"lineNumber":32,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-02-20"},{"lineNumber":33,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-02-20"},{"lineNumber":34,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_DATE_OF_BIRTH_BOB;","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_DATE_OF_JOINING_BOB;","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-02-20"},{"lineNumber":37,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-02-20"},{"lineNumber":38,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-02-20"},{"lineNumber":39,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_ROLE_BOB;","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_SALARY_BOB;","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-02-20"},{"lineNumber":42,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-02-20"},{"lineNumber":43,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-02-20"},{"lineNumber":44,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-02-20"},{"lineNumber":45,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.TypicalEmployees.AMY;","lastModifiedDate":"2021-02-28"},{"lineNumber":46,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.TypicalEmployees.BOB;","lastModifiedDate":"2021-02-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.commands.AddCommand;","lastModifiedDate":"2021-02-20"},{"lineNumber":51,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Address;","lastModifiedDate":"2021-02-27"},{"lineNumber":52,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.DateOfBirth;","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.DateOfJoining;","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Email;","lastModifiedDate":"2021-02-27"},{"lineNumber":55,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":56,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Name;","lastModifiedDate":"2021-02-27"},{"lineNumber":57,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Phone;","lastModifiedDate":"2021-02-27"},{"lineNumber":58,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Role;","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Salary;","lastModifiedDate":"2021-03-22"},{"lineNumber":60,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.tag.Tag;","lastModifiedDate":"2021-02-20"},{"lineNumber":61,"author":{"gitId":"e0260222"},"content":"import employeetracker.testutil.EmployeeBuilder;","lastModifiedDate":"2021-02-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"e0260222"},"content":"        Employee expectedEmployee \u003d new EmployeeBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-02-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"e0260222"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + ROLE_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-02-24"},{"lineNumber":72,"author":{"gitId":"e0260222"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + DATE_OF_BIRTH_DESC_BOB + DATE_OF_JOINING_DESC_BOB","lastModifiedDate":"2021-02-24"},{"lineNumber":73,"author":{"gitId":"e0260222"},"content":"                + SALARY_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedEmployee));","lastModifiedDate":"2021-02-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"e0260222"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + ROLE_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-02-24"},{"lineNumber":77,"author":{"gitId":"e0260222"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + DATE_OF_BIRTH_DESC_BOB + DATE_OF_JOINING_DESC_BOB","lastModifiedDate":"2021-02-24"},{"lineNumber":78,"author":{"gitId":"e0260222"},"content":"                + SALARY_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedEmployee));","lastModifiedDate":"2021-02-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"e0260222"},"content":"        // multiple roles - last role accepted","lastModifiedDate":"2021-03-22"},{"lineNumber":81,"author":{"gitId":"e0260222"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + ROLE_DESC_AMY + ROLE_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-22"},{"lineNumber":82,"author":{"gitId":"e0260222"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + DATE_OF_BIRTH_DESC_BOB + DATE_OF_JOINING_DESC_BOB","lastModifiedDate":"2021-03-22"},{"lineNumber":83,"author":{"gitId":"e0260222"},"content":"                + SALARY_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedEmployee));","lastModifiedDate":"2021-03-22"},{"lineNumber":84,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"e0260222"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + ROLE_DESC_BOB + PHONE_DESC_AMY","lastModifiedDate":"2021-03-22"},{"lineNumber":87,"author":{"gitId":"e0260222"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + DATE_OF_BIRTH_DESC_BOB","lastModifiedDate":"2021-02-24"},{"lineNumber":88,"author":{"gitId":"e0260222"},"content":"                + DATE_OF_JOINING_DESC_BOB + SALARY_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedEmployee));","lastModifiedDate":"2021-02-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"e0260222"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + ROLE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY","lastModifiedDate":"2021-02-24"},{"lineNumber":92,"author":{"gitId":"e0260222"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + DATE_OF_BIRTH_DESC_BOB + DATE_OF_JOINING_DESC_BOB","lastModifiedDate":"2021-02-24"},{"lineNumber":93,"author":{"gitId":"e0260222"},"content":"                + SALARY_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedEmployee));","lastModifiedDate":"2021-02-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"e0260222"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + ROLE_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-02-24"},{"lineNumber":97,"author":{"gitId":"e0260222"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_AMY + ADDRESS_DESC_BOB + DATE_OF_BIRTH_DESC_BOB","lastModifiedDate":"2021-02-24"},{"lineNumber":98,"author":{"gitId":"e0260222"},"content":"                + DATE_OF_JOINING_DESC_BOB + SALARY_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedEmployee));","lastModifiedDate":"2021-02-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"e0260222"},"content":"        // multiple dates of birth - last date of birth accepted","lastModifiedDate":"2021-03-22"},{"lineNumber":101,"author":{"gitId":"e0260222"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + ROLE_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-22"},{"lineNumber":102,"author":{"gitId":"e0260222"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + DATE_OF_BIRTH_DESC_AMY + DATE_OF_BIRTH_DESC_BOB","lastModifiedDate":"2021-03-22"},{"lineNumber":103,"author":{"gitId":"e0260222"},"content":"                + DATE_OF_JOINING_DESC_BOB + SALARY_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedEmployee));","lastModifiedDate":"2021-03-22"},{"lineNumber":104,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":105,"author":{"gitId":"e0260222"},"content":"        // multiple dates of joining - last date of joining accepted","lastModifiedDate":"2021-03-22"},{"lineNumber":106,"author":{"gitId":"e0260222"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + ROLE_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-22"},{"lineNumber":107,"author":{"gitId":"e0260222"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + DATE_OF_BIRTH_DESC_BOB + DATE_OF_JOINING_DESC_AMY","lastModifiedDate":"2021-03-22"},{"lineNumber":108,"author":{"gitId":"e0260222"},"content":"                + DATE_OF_JOINING_DESC_BOB + SALARY_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedEmployee));","lastModifiedDate":"2021-03-22"},{"lineNumber":109,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":110,"author":{"gitId":"e0260222"},"content":"        // multiple salaries - last salary accepted","lastModifiedDate":"2021-03-22"},{"lineNumber":111,"author":{"gitId":"e0260222"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + ROLE_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-22"},{"lineNumber":112,"author":{"gitId":"e0260222"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + DATE_OF_BIRTH_DESC_BOB + DATE_OF_JOINING_DESC_BOB","lastModifiedDate":"2021-03-22"},{"lineNumber":113,"author":{"gitId":"e0260222"},"content":"                + SALARY_DESC_AMY + SALARY_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedEmployee));","lastModifiedDate":"2021-03-22"},{"lineNumber":114,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"e0260222"},"content":"        Employee expectedEmployeeMultipleTags \u003d new EmployeeBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2021-02-28"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":118,"author":{"gitId":"e0260222"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + ROLE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-02-24"},{"lineNumber":119,"author":{"gitId":"e0260222"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + DATE_OF_BIRTH_DESC_BOB + DATE_OF_JOINING_DESC_BOB","lastModifiedDate":"2021-02-24"},{"lineNumber":120,"author":{"gitId":"e0260222"},"content":"                + SALARY_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedEmployeeMultipleTags));","lastModifiedDate":"2021-02-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"e0260222"},"content":"        Employee expectedEmployee \u003d new EmployeeBuilder(AMY).withTags().build();","lastModifiedDate":"2021-02-28"},{"lineNumber":127,"author":{"gitId":"e0260222"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + ROLE_DESC_BOB + ROLE_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2021-02-24"},{"lineNumber":128,"author":{"gitId":"e0260222"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + DATE_OF_BIRTH_DESC_AMY + DATE_OF_JOINING_DESC_AMY","lastModifiedDate":"2021-02-24"},{"lineNumber":129,"author":{"gitId":"e0260222"},"content":"                + SALARY_DESC_AMY, new AddCommand(expectedEmployee));","lastModifiedDate":"2021-02-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"e0260222"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + ROLE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-02-24"},{"lineNumber":138,"author":{"gitId":"e0260222"},"content":"                + ADDRESS_DESC_BOB + DATE_OF_BIRTH_DESC_BOB + DATE_OF_JOINING_DESC_BOB + SALARY_DESC_BOB,","lastModifiedDate":"2021-02-24"},{"lineNumber":139,"author":{"gitId":"e0260222"},"content":"                expectedMessage);","lastModifiedDate":"2021-02-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"e0260222"},"content":"        // missing role prefix","lastModifiedDate":"2021-03-22"},{"lineNumber":142,"author":{"gitId":"e0260222"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_ROLE_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-22"},{"lineNumber":143,"author":{"gitId":"e0260222"},"content":"                + ADDRESS_DESC_BOB + DATE_OF_BIRTH_DESC_BOB + DATE_OF_JOINING_DESC_BOB + SALARY_DESC_BOB,","lastModifiedDate":"2021-03-22"},{"lineNumber":144,"author":{"gitId":"e0260222"},"content":"                expectedMessage);","lastModifiedDate":"2021-03-22"},{"lineNumber":145,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"e0260222"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + ROLE_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-02-24"},{"lineNumber":148,"author":{"gitId":"e0260222"},"content":"                + ADDRESS_DESC_BOB + DATE_OF_BIRTH_DESC_BOB + DATE_OF_JOINING_DESC_BOB + SALARY_DESC_BOB,","lastModifiedDate":"2021-02-24"},{"lineNumber":149,"author":{"gitId":"e0260222"},"content":"                expectedMessage);","lastModifiedDate":"2021-02-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"e0260222"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + ROLE_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2021-02-24"},{"lineNumber":153,"author":{"gitId":"e0260222"},"content":"                + ADDRESS_DESC_BOB + DATE_OF_BIRTH_DESC_BOB + DATE_OF_JOINING_DESC_BOB + SALARY_DESC_BOB,","lastModifiedDate":"2021-02-24"},{"lineNumber":154,"author":{"gitId":"e0260222"},"content":"                expectedMessage);","lastModifiedDate":"2021-02-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"e0260222"},"content":"        // missing date of birth prefix","lastModifiedDate":"2021-03-22"},{"lineNumber":157,"author":{"gitId":"e0260222"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + ROLE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-22"},{"lineNumber":158,"author":{"gitId":"e0260222"},"content":"                + ADDRESS_DESC_BOB + VALID_DATE_OF_BIRTH_BOB + DATE_OF_JOINING_DESC_BOB + SALARY_DESC_BOB,","lastModifiedDate":"2021-03-22"},{"lineNumber":159,"author":{"gitId":"e0260222"},"content":"                expectedMessage);","lastModifiedDate":"2021-03-22"},{"lineNumber":160,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":161,"author":{"gitId":"e0260222"},"content":"        // missing date of joining prefix","lastModifiedDate":"2021-03-22"},{"lineNumber":162,"author":{"gitId":"e0260222"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + ROLE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-22"},{"lineNumber":163,"author":{"gitId":"e0260222"},"content":"                + ADDRESS_DESC_BOB + DATE_OF_BIRTH_DESC_BOB + VALID_DATE_OF_JOINING_BOB + SALARY_DESC_BOB,","lastModifiedDate":"2021-03-22"},{"lineNumber":164,"author":{"gitId":"e0260222"},"content":"                expectedMessage);","lastModifiedDate":"2021-03-22"},{"lineNumber":165,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"e0260222"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + ROLE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-02-24"},{"lineNumber":168,"author":{"gitId":"e0260222"},"content":"                + VALID_ADDRESS_BOB + DATE_OF_BIRTH_DESC_BOB + DATE_OF_JOINING_DESC_BOB + SALARY_DESC_BOB,","lastModifiedDate":"2021-02-24"},{"lineNumber":169,"author":{"gitId":"e0260222"},"content":"                expectedMessage);","lastModifiedDate":"2021-02-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"e0260222"},"content":"        // missing salary prefix","lastModifiedDate":"2021-03-22"},{"lineNumber":172,"author":{"gitId":"e0260222"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + ROLE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-22"},{"lineNumber":173,"author":{"gitId":"e0260222"},"content":"                + ADDRESS_DESC_BOB + DATE_OF_BIRTH_DESC_BOB + DATE_OF_JOINING_DESC_BOB + VALID_SALARY_BOB,","lastModifiedDate":"2021-03-22"},{"lineNumber":174,"author":{"gitId":"e0260222"},"content":"                expectedMessage);","lastModifiedDate":"2021-03-22"},{"lineNumber":175,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":177,"author":{"gitId":"e0260222"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + ROLE_DESC_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2021-02-24"},{"lineNumber":178,"author":{"gitId":"e0260222"},"content":"                + VALID_ADDRESS_BOB + DATE_OF_BIRTH_DESC_BOB + DATE_OF_JOINING_DESC_BOB + SALARY_DESC_BOB,","lastModifiedDate":"2021-02-24"},{"lineNumber":179,"author":{"gitId":"e0260222"},"content":"                expectedMessage);","lastModifiedDate":"2021-02-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":185,"author":{"gitId":"e0260222"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + ROLE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-02-24"},{"lineNumber":186,"author":{"gitId":"e0260222"},"content":"                + ADDRESS_DESC_BOB + DATE_OF_BIRTH_DESC_BOB + DATE_OF_JOINING_DESC_BOB + SALARY_DESC_BOB","lastModifiedDate":"2021-02-24"},{"lineNumber":187,"author":{"gitId":"e0260222"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-02-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":189,"author":{"gitId":"e0260222"},"content":"        // invalid role","lastModifiedDate":"2021-03-22"},{"lineNumber":190,"author":{"gitId":"e0260222"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_ROLE_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-22"},{"lineNumber":191,"author":{"gitId":"e0260222"},"content":"                + ADDRESS_DESC_BOB + DATE_OF_BIRTH_DESC_BOB + DATE_OF_JOINING_DESC_BOB + SALARY_DESC_BOB","lastModifiedDate":"2021-03-22"},{"lineNumber":192,"author":{"gitId":"e0260222"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Role.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-22"},{"lineNumber":193,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":195,"author":{"gitId":"e0260222"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + ROLE_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB","lastModifiedDate":"2021-02-24"},{"lineNumber":196,"author":{"gitId":"e0260222"},"content":"                + ADDRESS_DESC_BOB + DATE_OF_BIRTH_DESC_BOB + DATE_OF_JOINING_DESC_BOB + SALARY_DESC_BOB","lastModifiedDate":"2021-02-24"},{"lineNumber":197,"author":{"gitId":"e0260222"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-02-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":200,"author":{"gitId":"e0260222"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + ROLE_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC","lastModifiedDate":"2021-02-24"},{"lineNumber":201,"author":{"gitId":"e0260222"},"content":"                + ADDRESS_DESC_BOB + DATE_OF_BIRTH_DESC_BOB + DATE_OF_JOINING_DESC_BOB + SALARY_DESC_BOB","lastModifiedDate":"2021-02-24"},{"lineNumber":202,"author":{"gitId":"e0260222"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-02-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":205,"author":{"gitId":"e0260222"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + ROLE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-02-24"},{"lineNumber":206,"author":{"gitId":"e0260222"},"content":"                + INVALID_ADDRESS_DESC + DATE_OF_BIRTH_DESC_BOB + DATE_OF_JOINING_DESC_BOB + SALARY_DESC_BOB","lastModifiedDate":"2021-02-24"},{"lineNumber":207,"author":{"gitId":"e0260222"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-02-24"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":209,"author":{"gitId":"e0260222"},"content":"        // invalid date of birth","lastModifiedDate":"2021-03-22"},{"lineNumber":210,"author":{"gitId":"e0260222"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + ROLE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-22"},{"lineNumber":211,"author":{"gitId":"e0260222"},"content":"                + ADDRESS_DESC_BOB + INVALID_DATE_OF_BIRTH_DESC + DATE_OF_JOINING_DESC_BOB + SALARY_DESC_BOB","lastModifiedDate":"2021-03-22"},{"lineNumber":212,"author":{"gitId":"e0260222"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, DateOfBirth.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-22"},{"lineNumber":213,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":214,"author":{"gitId":"e0260222"},"content":"        // invalid date of joining","lastModifiedDate":"2021-03-22"},{"lineNumber":215,"author":{"gitId":"e0260222"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + ROLE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-22"},{"lineNumber":216,"author":{"gitId":"e0260222"},"content":"                + ADDRESS_DESC_BOB + DATE_OF_BIRTH_DESC_BOB + INVALID_DATE_OF_JOINING_DESC + SALARY_DESC_BOB","lastModifiedDate":"2021-03-22"},{"lineNumber":217,"author":{"gitId":"e0260222"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, DateOfJoining.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-22"},{"lineNumber":218,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":219,"author":{"gitId":"e0260222"},"content":"        // invalid salary","lastModifiedDate":"2021-03-22"},{"lineNumber":220,"author":{"gitId":"e0260222"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + ROLE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-22"},{"lineNumber":221,"author":{"gitId":"e0260222"},"content":"                + ADDRESS_DESC_BOB + DATE_OF_BIRTH_DESC_BOB + DATE_OF_JOINING_DESC_BOB + INVALID_SALARY_DESC","lastModifiedDate":"2021-03-22"},{"lineNumber":222,"author":{"gitId":"e0260222"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Salary.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-22"},{"lineNumber":223,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":225,"author":{"gitId":"e0260222"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + ROLE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-02-24"},{"lineNumber":226,"author":{"gitId":"e0260222"},"content":"                + ADDRESS_DESC_BOB + DATE_OF_BIRTH_DESC_BOB + DATE_OF_JOINING_DESC_BOB + SALARY_DESC_BOB","lastModifiedDate":"2021-02-24"},{"lineNumber":227,"author":{"gitId":"e0260222"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-02-24"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":230,"author":{"gitId":"e0260222"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + ROLE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-02-24"},{"lineNumber":231,"author":{"gitId":"e0260222"},"content":"                + INVALID_ADDRESS_DESC + DATE_OF_BIRTH_DESC_BOB + DATE_OF_JOINING_DESC_BOB + SALARY_DESC_BOB,","lastModifiedDate":"2021-02-24"},{"lineNumber":232,"author":{"gitId":"e0260222"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-02-24"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":235,"author":{"gitId":"e0260222"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + ROLE_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-02-24"},{"lineNumber":236,"author":{"gitId":"e0260222"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + DATE_OF_BIRTH_DESC_BOB + DATE_OF_JOINING_DESC_BOB","lastModifiedDate":"2021-02-24"},{"lineNumber":237,"author":{"gitId":"e0260222"},"content":"                + SALARY_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-02-24"},{"lineNumber":238,"author":{"gitId":"e0260222"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-02-24"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":240,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"e0260222":180,"-":61}},{"path":"src/test/java/employeetracker/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.logic.parser;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"e0260222":1,"-":149}},{"path":"src/test/java/employeetracker/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.logic.parser;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.commands.Command;","lastModifiedDate":"2021-02-20"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"e0260222":3,"-":35}},{"path":"src/test/java/employeetracker/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.logic.parser;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-02-20"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-02-20"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.TypicalIndexes.INDEX_FIRST_EMPLOYEE;","lastModifiedDate":"2021-02-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.commands.DeleteCommand;","lastModifiedDate":"2021-02-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"e0260222"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_EMPLOYEE));","lastModifiedDate":"2021-02-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"e0260222":7,"-":25}},{"path":"src/test/java/employeetracker/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.logic.parser;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-02-20"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2021-02-20"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.DATE_OF_BIRTH_DESC_AMY;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.DATE_OF_BIRTH_DESC_BOB;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.DATE_OF_JOINING_DESC_AMY;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.DATE_OF_JOINING_DESC_BOB;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-02-20"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-02-20"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-02-20"},{"lineNumber":13,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.INVALID_DATE_OF_BIRTH_DESC;","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.INVALID_DATE_OF_JOINING_DESC;","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-02-20"},{"lineNumber":16,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-02-20"},{"lineNumber":17,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-02-20"},{"lineNumber":18,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.INVALID_ROLE_DESC;","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.INVALID_SALARY_DESC;","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-02-20"},{"lineNumber":21,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-02-20"},{"lineNumber":22,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-02-20"},{"lineNumber":23,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-02-20"},{"lineNumber":24,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.ROLE_DESC_AMY;","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.ROLE_DESC_BOB;","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.SALARY_DESC_AMY;","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.SALARY_DESC_BOB;","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-02-20"},{"lineNumber":29,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-02-20"},{"lineNumber":30,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-02-20"},{"lineNumber":31,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-02-20"},{"lineNumber":32,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_DATE_OF_BIRTH_AMY;","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_DATE_OF_BIRTH_BOB;","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_DATE_OF_JOINING_AMY;","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_DATE_OF_JOINING_BOB;","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-02-20"},{"lineNumber":37,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-02-20"},{"lineNumber":38,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-02-20"},{"lineNumber":39,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-02-20"},{"lineNumber":40,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-02-20"},{"lineNumber":41,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_ROLE_AMY;","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_ROLE_BOB;","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_SALARY_AMY;","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_SALARY_BOB;","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-02-20"},{"lineNumber":46,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-02-20"},{"lineNumber":47,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-02-20"},{"lineNumber":48,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-02-20"},{"lineNumber":49,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-02-20"},{"lineNumber":50,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.TypicalIndexes.INDEX_FIRST_EMPLOYEE;","lastModifiedDate":"2021-02-28"},{"lineNumber":51,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.TypicalIndexes.INDEX_SECOND_EMPLOYEE;","lastModifiedDate":"2021-02-28"},{"lineNumber":52,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.TypicalIndexes.INDEX_THIRD_EMPLOYEE;","lastModifiedDate":"2021-02-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.core.index.Index;","lastModifiedDate":"2021-02-20"},{"lineNumber":57,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.commands.EditCommand;","lastModifiedDate":"2021-02-20"},{"lineNumber":58,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.commands.EditCommand.EditEmployeeDescriptor;","lastModifiedDate":"2021-02-28"},{"lineNumber":59,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Address;","lastModifiedDate":"2021-02-27"},{"lineNumber":60,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.DateOfBirth;","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.DateOfJoining;","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Email;","lastModifiedDate":"2021-02-27"},{"lineNumber":63,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Name;","lastModifiedDate":"2021-02-27"},{"lineNumber":64,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Phone;","lastModifiedDate":"2021-02-27"},{"lineNumber":65,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Role;","lastModifiedDate":"2021-03-22"},{"lineNumber":66,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Salary;","lastModifiedDate":"2021-03-22"},{"lineNumber":67,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.tag.Tag;","lastModifiedDate":"2021-02-20"},{"lineNumber":68,"author":{"gitId":"e0260222"},"content":"import employeetracker.testutil.EditEmployeeDescriptorBuilder;","lastModifiedDate":"2021-02-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":109,"author":{"gitId":"e0260222"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ROLE_DESC, Role.MESSAGE_CONSTRAINTS); // invalid role","lastModifiedDate":"2021-03-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":113,"author":{"gitId":"e0260222"},"content":"        // invalid date of birth","lastModifiedDate":"2021-03-22"},{"lineNumber":114,"author":{"gitId":"e0260222"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DATE_OF_BIRTH_DESC, DateOfBirth.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-22"},{"lineNumber":115,"author":{"gitId":"e0260222"},"content":"        // invalid date of joining","lastModifiedDate":"2021-03-22"},{"lineNumber":116,"author":{"gitId":"e0260222"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DATE_OF_JOINING_DESC, DateOfJoining.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-22"},{"lineNumber":117,"author":{"gitId":"e0260222"},"content":"        assertParseFailure(parser, \"1\" + INVALID_SALARY_DESC, Salary.MESSAGE_CONSTRAINTS); // invalid salary","lastModifiedDate":"2021-03-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"e0260222"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Employee} being edited,","lastModifiedDate":"2021-02-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":140,"author":{"gitId":"e0260222"},"content":"        Index targetIndex \u003d INDEX_SECOND_EMPLOYEE;","lastModifiedDate":"2021-02-28"},{"lineNumber":141,"author":{"gitId":"e0260222"},"content":"        String userInput \u003d targetIndex.getOneBased() + ROLE_DESC_BOB + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2021-03-22"},{"lineNumber":142,"author":{"gitId":"e0260222"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + DATE_OF_BIRTH_DESC_BOB + DATE_OF_JOINING_DESC_BOB","lastModifiedDate":"2021-03-22"},{"lineNumber":143,"author":{"gitId":"e0260222"},"content":"                + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2021-03-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"e0260222"},"content":"        EditCommand.EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-02-28"},{"lineNumber":146,"author":{"gitId":"e0260222"},"content":"                .withRole(VALID_ROLE_BOB).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2021-03-22"},{"lineNumber":147,"author":{"gitId":"e0260222"},"content":"                .withAddress(VALID_ADDRESS_AMY).withDateOfBirth(VALID_DATE_OF_BIRTH_BOB)","lastModifiedDate":"2021-03-22"},{"lineNumber":148,"author":{"gitId":"e0260222"},"content":"                .withDateOfJoining(VALID_DATE_OF_JOINING_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":156,"author":{"gitId":"e0260222"},"content":"        Index targetIndex \u003d INDEX_FIRST_EMPLOYEE;","lastModifiedDate":"2021-02-28"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"e0260222"},"content":"        EditCommand.EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-02-28"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"e0260222"},"content":"        Index targetIndex \u003d INDEX_THIRD_EMPLOYEE;","lastModifiedDate":"2021-02-28"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"e0260222"},"content":"        EditCommand.EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder()","lastModifiedDate":"2021-02-28"},{"lineNumber":172,"author":{"gitId":"e0260222"},"content":"                .withName(VALID_NAME_AMY).build();","lastModifiedDate":"2021-02-28"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"e0260222"},"content":"        // role","lastModifiedDate":"2021-03-22"},{"lineNumber":177,"author":{"gitId":"e0260222"},"content":"        userInput \u003d targetIndex.getOneBased() + ROLE_DESC_AMY;","lastModifiedDate":"2021-03-22"},{"lineNumber":178,"author":{"gitId":"e0260222"},"content":"        descriptor \u003d new EditEmployeeDescriptorBuilder().withRole(VALID_ROLE_AMY).build();","lastModifiedDate":"2021-03-22"},{"lineNumber":179,"author":{"gitId":"e0260222"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-22"},{"lineNumber":180,"author":{"gitId":"e0260222"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-22"},{"lineNumber":181,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":184,"author":{"gitId":"e0260222"},"content":"        descriptor \u003d new EditEmployeeDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2021-02-28"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":190,"author":{"gitId":"e0260222"},"content":"        descriptor \u003d new EditEmployeeDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-02-28"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":196,"author":{"gitId":"e0260222"},"content":"        descriptor \u003d new EditEmployeeDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2021-02-28"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"e0260222"},"content":"        // date of birth","lastModifiedDate":"2021-03-22"},{"lineNumber":201,"author":{"gitId":"e0260222"},"content":"        userInput \u003d targetIndex.getOneBased() + DATE_OF_BIRTH_DESC_AMY;","lastModifiedDate":"2021-03-22"},{"lineNumber":202,"author":{"gitId":"e0260222"},"content":"        descriptor \u003d new EditEmployeeDescriptorBuilder().withDateOfBirth(VALID_DATE_OF_BIRTH_AMY).build();","lastModifiedDate":"2021-03-22"},{"lineNumber":203,"author":{"gitId":"e0260222"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-22"},{"lineNumber":204,"author":{"gitId":"e0260222"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-22"},{"lineNumber":205,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":206,"author":{"gitId":"e0260222"},"content":"        // date of joining","lastModifiedDate":"2021-03-22"},{"lineNumber":207,"author":{"gitId":"e0260222"},"content":"        userInput \u003d targetIndex.getOneBased() + DATE_OF_JOINING_DESC_AMY;","lastModifiedDate":"2021-03-22"},{"lineNumber":208,"author":{"gitId":"e0260222"},"content":"        descriptor \u003d new EditEmployeeDescriptorBuilder().withDateOfJoining(VALID_DATE_OF_JOINING_AMY).build();","lastModifiedDate":"2021-03-22"},{"lineNumber":209,"author":{"gitId":"e0260222"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-22"},{"lineNumber":210,"author":{"gitId":"e0260222"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-22"},{"lineNumber":211,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":212,"author":{"gitId":"e0260222"},"content":"        // salary","lastModifiedDate":"2021-03-22"},{"lineNumber":213,"author":{"gitId":"e0260222"},"content":"        userInput \u003d targetIndex.getOneBased() + SALARY_DESC_AMY;","lastModifiedDate":"2021-03-22"},{"lineNumber":214,"author":{"gitId":"e0260222"},"content":"        descriptor \u003d new EditEmployeeDescriptorBuilder().withSalary(VALID_SALARY_AMY).build();","lastModifiedDate":"2021-03-22"},{"lineNumber":215,"author":{"gitId":"e0260222"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-22"},{"lineNumber":216,"author":{"gitId":"e0260222"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-22"},{"lineNumber":217,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":220,"author":{"gitId":"e0260222"},"content":"        descriptor \u003d new EditEmployeeDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-02-28"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":227,"author":{"gitId":"e0260222"},"content":"        Index targetIndex \u003d INDEX_FIRST_EMPLOYEE;","lastModifiedDate":"2021-02-28"},{"lineNumber":228,"author":{"gitId":"e0260222"},"content":"        String userInput \u003d targetIndex.getOneBased() + ROLE_DESC_AMY + PHONE_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2021-03-22"},{"lineNumber":229,"author":{"gitId":"e0260222"},"content":"                + EMAIL_DESC_AMY + DATE_OF_JOINING_DESC_AMY + DATE_OF_JOINING_DESC_AMY + SALARY_DESC_AMY","lastModifiedDate":"2021-03-22"},{"lineNumber":230,"author":{"gitId":"e0260222"},"content":"                + TAG_DESC_FRIEND + ROLE_DESC_AMY + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-03-22"},{"lineNumber":231,"author":{"gitId":"e0260222"},"content":"                + DATE_OF_JOINING_DESC_AMY + DATE_OF_JOINING_DESC_AMY + SALARY_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2021-03-22"},{"lineNumber":232,"author":{"gitId":"e0260222"},"content":"                + ROLE_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + DATE_OF_BIRTH_DESC_BOB","lastModifiedDate":"2021-03-22"},{"lineNumber":233,"author":{"gitId":"e0260222"},"content":"                + DATE_OF_JOINING_DESC_BOB + SALARY_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2021-03-22"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":235,"author":{"gitId":"e0260222"},"content":"        EditCommand.EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-02-28"},{"lineNumber":236,"author":{"gitId":"e0260222"},"content":"                .withRole(VALID_ROLE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-03-22"},{"lineNumber":237,"author":{"gitId":"e0260222"},"content":"                .withDateOfBirth(VALID_DATE_OF_BIRTH_BOB).withDateOfJoining(VALID_DATE_OF_JOINING_BOB)","lastModifiedDate":"2021-03-22"},{"lineNumber":238,"author":{"gitId":"e0260222"},"content":"                .withSalary(VALID_SALARY_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-22"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":247,"author":{"gitId":"e0260222"},"content":"        Index targetIndex \u003d INDEX_FIRST_EMPLOYEE;","lastModifiedDate":"2021-02-28"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":249,"author":{"gitId":"e0260222"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-02-28"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":255,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":256,"author":{"gitId":"e0260222"},"content":"        descriptor \u003d new EditEmployeeDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-02-28"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":264,"author":{"gitId":"e0260222"},"content":"        Index targetIndex \u003d INDEX_THIRD_EMPLOYEE;","lastModifiedDate":"2021-02-28"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":267,"author":{"gitId":"e0260222"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder().withTags().build();","lastModifiedDate":"2021-02-28"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"e0260222":128,"-":144}},{"path":"src/test/java/employeetracker/logic/parser/EmployeeTrackerParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"package employeetracker.logic.parser;","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":"import static employeetracker.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":"import static employeetracker.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":"import static employeetracker.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":"import static employeetracker.testutil.TypicalIndexes.INDEX_FIRST_EMPLOYEE;","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"dgc5213"},"content":"import employeetracker.logic.commands.AddCommand;","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"dgc5213"},"content":"import employeetracker.logic.commands.ClearCommand;","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"dgc5213"},"content":"import employeetracker.logic.commands.DeleteCommand;","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"dgc5213"},"content":"import employeetracker.logic.commands.EditCommand;","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"dgc5213"},"content":"import employeetracker.logic.commands.EditCommand.EditEmployeeDescriptor;","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"dgc5213"},"content":"import employeetracker.logic.commands.ExitCommand;","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"dgc5213"},"content":"import employeetracker.logic.commands.FindCommand;","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"dgc5213"},"content":"import employeetracker.logic.commands.HelpCommand;","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"dgc5213"},"content":"import employeetracker.logic.commands.ListCommand;","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"dgc5213"},"content":"import employeetracker.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"dgc5213"},"content":"import employeetracker.model.employee.Employee;","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"dgc5213"},"content":"import employeetracker.model.employee.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"dgc5213"},"content":"import employeetracker.testutil.EditEmployeeDescriptorBuilder;","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"dgc5213"},"content":"import employeetracker.testutil.EmployeeBuilder;","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"dgc5213"},"content":"import employeetracker.testutil.EmployeeUtil;","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":32,"author":{"gitId":"dgc5213"},"content":"public class EmployeeTrackerParserTest {","lastModifiedDate":"2021-03-02"},{"lineNumber":33,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":34,"author":{"gitId":"dgc5213"},"content":"    private final EmployeeTrackerParser parser \u003d new EmployeeTrackerParser();","lastModifiedDate":"2021-03-02"},{"lineNumber":35,"author":{"gitId":"dgc5213"},"content":"    private String findBy;","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2021-03-02"},{"lineNumber":39,"author":{"gitId":"dgc5213"},"content":"        Employee employee \u003d new EmployeeBuilder().build();","lastModifiedDate":"2021-03-02"},{"lineNumber":40,"author":{"gitId":"dgc5213"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(EmployeeUtil.getAddCommand(employee));","lastModifiedDate":"2021-03-02"},{"lineNumber":41,"author":{"gitId":"dgc5213"},"content":"        assertEquals(new AddCommand(employee), command);","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2021-03-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2021-03-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2021-03-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2021-03-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2021-03-02"},{"lineNumber":53,"author":{"gitId":"dgc5213"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_EMPLOYEE.getOneBased());","lastModifiedDate":"2021-03-02"},{"lineNumber":54,"author":{"gitId":"dgc5213"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_EMPLOYEE), command);","lastModifiedDate":"2021-03-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2021-03-02"},{"lineNumber":59,"author":{"gitId":"dgc5213"},"content":"        Employee employee \u003d new EmployeeBuilder().build();","lastModifiedDate":"2021-03-02"},{"lineNumber":60,"author":{"gitId":"dgc5213"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder(employee).build();","lastModifiedDate":"2021-03-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-02"},{"lineNumber":62,"author":{"gitId":"dgc5213"},"content":"                + INDEX_FIRST_EMPLOYEE.getOneBased() + \" \" + EmployeeUtil.getEditEmployeeDescriptorDetails(descriptor));","lastModifiedDate":"2021-03-02"},{"lineNumber":63,"author":{"gitId":"dgc5213"},"content":"        EditCommand command2 \u003d new EditCommand(INDEX_FIRST_EMPLOYEE, descriptor);","lastModifiedDate":"2021-03-02"},{"lineNumber":64,"author":{"gitId":"dgc5213"},"content":"        assertEquals(command2, command);","lastModifiedDate":"2021-03-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2021-03-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2021-03-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2021-03-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2021-03-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2021-03-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2021-03-02"},{"lineNumber":77,"author":{"gitId":"dgc5213"},"content":"                FindCommand.COMMAND_WORD + \" n/ \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2021-03-02"},{"lineNumber":78,"author":{"gitId":"dgc5213"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords, \"n/\")), command);","lastModifiedDate":"2021-03-02"},{"lineNumber":79,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2021-03-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2021-03-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2021-03-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2021-03-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2021-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2021-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2021-03-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2021-03-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2021-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"dgc5213":38,"-":66}},{"path":"src/test/java/employeetracker/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"package employeetracker.logic.parser;","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":"import static employeetracker.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":"import static employeetracker.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":"import static employeetracker.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"dgc5213"},"content":"import employeetracker.logic.commands.FindCommand;","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"dgc5213"},"content":"import employeetracker.model.employee.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"dgc5213"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"), \"n/\"));","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"dgc5213"},"content":"        assertParseSuccess(parser, \"find n/ Alice Bob\", expectedFindCommand);","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-03-02"},{"lineNumber":32,"author":{"gitId":"dgc5213"},"content":"        assertParseSuccess(parser, \"find n/  Alice      Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2021-03-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"dgc5213":10,"-":25}},{"path":"src/test/java/employeetracker/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.logic.parser;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-20"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.TypicalIndexes.INDEX_FIRST_EMPLOYEE;","lastModifiedDate":"2021-02-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-02-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-02-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-20"},{"lineNumber":17,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Address;","lastModifiedDate":"2021-02-27"},{"lineNumber":18,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Email;","lastModifiedDate":"2021-02-27"},{"lineNumber":19,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Name;","lastModifiedDate":"2021-02-27"},{"lineNumber":20,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Phone;","lastModifiedDate":"2021-02-27"},{"lineNumber":21,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.tag.Tag;","lastModifiedDate":"2021-02-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"e0260222"},"content":"        assertEquals(INDEX_FIRST_EMPLOYEE, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-02-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"e0260222"},"content":"        assertEquals(INDEX_FIRST_EMPLOYEE, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-02-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"e0260222":12,"-":184}},{"path":"src/test/java/employeetracker/logic/parser/SortCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daiweinus"},"content":"package employeetracker.logic.parser;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"daiweinus"},"content":"import static employeetracker.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"daiweinus"},"content":"import static employeetracker.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"daiweinus"},"content":"import static employeetracker.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"daiweinus"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"daiweinus"},"content":"import employeetracker.logic.commands.SortCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"daiweinus"},"content":"class SortCommandParserTest {","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"daiweinus"},"content":"    private final SortCommandParser parser \u003d new SortCommandParser();","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"daiweinus"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"daiweinus"},"content":"    public void parse_validArgsN_returnsSortCommand() {","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"daiweinus"},"content":"        SortCommand sortCommand \u003d new SortCommand(\"n\");","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"daiweinus"},"content":"        assertParseSuccess(parser, \"n\", sortCommand);","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"daiweinus"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"daiweinus"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"daiweinus"},"content":"    public void parse_validArgsS_returnsSortCommand() {","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"daiweinus"},"content":"        SortCommand sortCommand \u003d new SortCommand(\"s\");","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"daiweinus"},"content":"        assertParseSuccess(parser, \"s\", sortCommand);","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"daiweinus"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"daiweinus"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"daiweinus"},"content":"    public void parse_validArgsJ_returnsSortCommand() {","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"daiweinus"},"content":"        SortCommand sortCommand \u003d new SortCommand(\"j\");","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"daiweinus"},"content":"        assertParseSuccess(parser, \"j\", sortCommand);","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"daiweinus"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"daiweinus"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"daiweinus"},"content":"    public void parse_validArgsB_returnsSortCommand() {","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"daiweinus"},"content":"        SortCommand sortCommand \u003d new SortCommand(\"b\");","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"daiweinus"},"content":"        assertParseSuccess(parser, \"b\", sortCommand);","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"daiweinus"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"daiweinus"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"daiweinus"},"content":"    public void parse_emptyArgs_throwsParseException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"daiweinus"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"daiweinus"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"daiweinus"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"daiweinus"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"daiweinus"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"daiweinus"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"daiweinus"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"daiweinus"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"daiweinus":48}},{"path":"src/test/java/employeetracker/model/EmployeeTrackerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.model;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-02-20"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-20"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.TypicalEmployees.ALICE;","lastModifiedDate":"2021-02-28"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.TypicalEmployees.getTypicalEmployeeTracker;","lastModifiedDate":"2021-02-28"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-02-20"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-02-20"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-02-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":20,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.exceptions.DuplicateEmployeeException;","lastModifiedDate":"2021-02-28"},{"lineNumber":21,"author":{"gitId":"e0260222"},"content":"import employeetracker.testutil.EmployeeBuilder;","lastModifiedDate":"2021-02-28"},{"lineNumber":22,"author":{"gitId":"e0260222"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-02-20"},{"lineNumber":23,"author":{"gitId":"e0260222"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-02-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"e0260222"},"content":"public class EmployeeTrackerTest {","lastModifiedDate":"2021-02-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"e0260222"},"content":"    private final EmployeeTracker employeeTracker \u003d new EmployeeTracker();","lastModifiedDate":"2021-02-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"e0260222"},"content":"        assertEquals(Collections.emptyList(), employeeTracker.getEmployeeList());","lastModifiedDate":"2021-02-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"e0260222"},"content":"        assertThrows(NullPointerException.class, () -\u003e employeeTracker.resetData(null));","lastModifiedDate":"2021-02-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"e0260222"},"content":"    public void resetData_withValidReadOnlyEmployeeTracker_replacesData() {","lastModifiedDate":"2021-02-20"},{"lineNumber":41,"author":{"gitId":"e0260222"},"content":"        EmployeeTracker newData \u003d getTypicalEmployeeTracker();","lastModifiedDate":"2021-02-20"},{"lineNumber":42,"author":{"gitId":"e0260222"},"content":"        employeeTracker.resetData(newData);","lastModifiedDate":"2021-02-20"},{"lineNumber":43,"author":{"gitId":"e0260222"},"content":"        assertEquals(newData, employeeTracker);","lastModifiedDate":"2021-02-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"e0260222"},"content":"    public void resetData_withDuplicateEmployees_throwsDuplicateEmployeeException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":48,"author":{"gitId":"e0260222"},"content":"        // Two employees with the same identity fields","lastModifiedDate":"2021-02-27"},{"lineNumber":49,"author":{"gitId":"e0260222"},"content":"        Employee editedAlice \u003d new EmployeeBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-02-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"e0260222"},"content":"        List\u003cEmployee\u003e newEmployees \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2021-02-27"},{"lineNumber":52,"author":{"gitId":"e0260222"},"content":"        EmployeeTrackerStub newData \u003d new EmployeeTrackerStub(newEmployees);","lastModifiedDate":"2021-02-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"e0260222"},"content":"        assertThrows(DuplicateEmployeeException.class, () -\u003e employeeTracker.resetData(newData));","lastModifiedDate":"2021-02-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"e0260222"},"content":"    public void hasEmployee_nullEmployee_throwsNullPointerException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":59,"author":{"gitId":"e0260222"},"content":"        assertThrows(NullPointerException.class, () -\u003e employeeTracker.hasEmployee(null));","lastModifiedDate":"2021-02-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"e0260222"},"content":"    public void hasEmployee_employeeNotInEmployeeTracker_returnsFalse() {","lastModifiedDate":"2021-02-28"},{"lineNumber":64,"author":{"gitId":"e0260222"},"content":"        assertFalse(employeeTracker.hasEmployee(ALICE));","lastModifiedDate":"2021-02-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"e0260222"},"content":"    public void hasEmployee_employeeInEmployeeTracker_returnsTrue() {","lastModifiedDate":"2021-02-28"},{"lineNumber":69,"author":{"gitId":"e0260222"},"content":"        employeeTracker.addEmployee(ALICE);","lastModifiedDate":"2021-02-28"},{"lineNumber":70,"author":{"gitId":"e0260222"},"content":"        assertTrue(employeeTracker.hasEmployee(ALICE));","lastModifiedDate":"2021-02-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"e0260222"},"content":"    public void hasEmployee_employeeWithSameIdentityFieldsInEmployeeTracker_returnsTrue() {","lastModifiedDate":"2021-02-28"},{"lineNumber":75,"author":{"gitId":"e0260222"},"content":"        employeeTracker.addEmployee(ALICE);","lastModifiedDate":"2021-02-28"},{"lineNumber":76,"author":{"gitId":"e0260222"},"content":"        Employee editedAlice \u003d new EmployeeBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-02-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"e0260222"},"content":"        assertTrue(employeeTracker.hasEmployee(editedAlice));","lastModifiedDate":"2021-02-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"e0260222"},"content":"    public void getEmployeeList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":83,"author":{"gitId":"e0260222"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e employeeTracker.getEmployeeList().remove(0));","lastModifiedDate":"2021-02-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"e0260222"},"content":"     * A stub ReadOnlyEmployeeTracker whose employees list can violate interface constraints.","lastModifiedDate":"2021-02-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"e0260222"},"content":"    private static class EmployeeTrackerStub implements ReadOnlyEmployeeTracker {","lastModifiedDate":"2021-02-20"},{"lineNumber":90,"author":{"gitId":"e0260222"},"content":"        private final ObservableList\u003cEmployee\u003e employees \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-02-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"e0260222"},"content":"        EmployeeTrackerStub(Collection\u003cEmployee\u003e employees) {","lastModifiedDate":"2021-02-27"},{"lineNumber":93,"author":{"gitId":"e0260222"},"content":"            this.employees.setAll(employees);","lastModifiedDate":"2021-02-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"e0260222"},"content":"        public ObservableList\u003cEmployee\u003e getEmployeeList() {","lastModifiedDate":"2021-02-28"},{"lineNumber":98,"author":{"gitId":"e0260222"},"content":"            return employees;","lastModifiedDate":"2021-02-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"e0260222":48,"-":54}},{"path":"src/test/java/employeetracker/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"package employeetracker.model;","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":"import static employeetracker.model.Model.PREDICATE_SHOW_ALL_EMPLOYEES;","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":"import static employeetracker.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":"import static employeetracker.testutil.TypicalEmployees.ALICE;","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":"import static employeetracker.testutil.TypicalEmployees.BENSON;","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"dgc5213"},"content":"import employeetracker.commons.core.GuiSettings;","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"dgc5213"},"content":"import employeetracker.model.employee.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"dgc5213"},"content":"import employeetracker.testutil.EmployeeTrackerBuilder;","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"dgc5213"},"content":"        assertEquals(new EmployeeTracker(), new EmployeeTracker(modelManager.getEmployeeTracker()));","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2021-03-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2021-03-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-03-02"},{"lineNumber":40,"author":{"gitId":"dgc5213"},"content":"        userPrefs.setEmployeeTrackerFilePath(Paths.get(\"employeetracker/file/path\"));","lastModifiedDate":"2021-03-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2021-03-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2021-03-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2021-03-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2021-03-02"},{"lineNumber":47,"author":{"gitId":"dgc5213"},"content":"        userPrefs.setEmployeeTrackerFilePath(Paths.get(\"new/employeetracker/file/path\"));","lastModifiedDate":"2021-03-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2021-03-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2021-03-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2021-03-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2021-03-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2021-03-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2021-03-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":64,"author":{"gitId":"dgc5213"},"content":"    public void setEmployeeTrackerFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":65,"author":{"gitId":"dgc5213"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setEmployeeTrackerFilePath(null));","lastModifiedDate":"2021-03-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":69,"author":{"gitId":"dgc5213"},"content":"    public void setEmployeeTrackerFilePath_validPath_setsEmployeeTrackerFilePath() {","lastModifiedDate":"2021-03-02"},{"lineNumber":70,"author":{"gitId":"dgc5213"},"content":"        Path path \u003d Paths.get(\"employeetracker/file/path\");","lastModifiedDate":"2021-03-02"},{"lineNumber":71,"author":{"gitId":"dgc5213"},"content":"        modelManager.setEmployeeTrackerFilePath(path);","lastModifiedDate":"2021-03-02"},{"lineNumber":72,"author":{"gitId":"dgc5213"},"content":"        assertEquals(path, modelManager.getEmployeeTrackerFilePath());","lastModifiedDate":"2021-03-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":76,"author":{"gitId":"dgc5213"},"content":"    public void hasEmployee_nullEmployee_throwsNullPointerException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":77,"author":{"gitId":"dgc5213"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasEmployee(null));","lastModifiedDate":"2021-03-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":81,"author":{"gitId":"dgc5213"},"content":"    public void hasEmployee_employeeNotInEmployeeTracker_returnsFalse() {","lastModifiedDate":"2021-03-02"},{"lineNumber":82,"author":{"gitId":"dgc5213"},"content":"        assertFalse(modelManager.hasEmployee(ALICE));","lastModifiedDate":"2021-03-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":86,"author":{"gitId":"dgc5213"},"content":"    public void hasEmployee_employeeInEmployeeTracker_returnsTrue() {","lastModifiedDate":"2021-03-02"},{"lineNumber":87,"author":{"gitId":"dgc5213"},"content":"        modelManager.addEmployee(ALICE);","lastModifiedDate":"2021-03-02"},{"lineNumber":88,"author":{"gitId":"dgc5213"},"content":"        assertTrue(modelManager.hasEmployee(ALICE));","lastModifiedDate":"2021-03-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":92,"author":{"gitId":"dgc5213"},"content":"    public void getFilteredEmployeeList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":93,"author":{"gitId":"dgc5213"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredEmployeeList().remove(0));","lastModifiedDate":"2021-03-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2021-03-02"},{"lineNumber":98,"author":{"gitId":"dgc5213"},"content":"        EmployeeTracker employeeTracker \u003d new EmployeeTrackerBuilder().withEmployee(ALICE).withEmployee(BENSON).build();","lastModifiedDate":"2021-03-02"},{"lineNumber":99,"author":{"gitId":"dgc5213"},"content":"        EmployeeTracker differentEmployeeTracker \u003d new EmployeeTracker();","lastModifiedDate":"2021-03-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-03-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-02"},{"lineNumber":103,"author":{"gitId":"dgc5213"},"content":"        modelManager \u003d new ModelManager(employeeTracker, userPrefs);","lastModifiedDate":"2021-03-02"},{"lineNumber":104,"author":{"gitId":"dgc5213"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(employeeTracker, userPrefs);","lastModifiedDate":"2021-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2021-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2021-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2021-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2021-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2021-03-02"},{"lineNumber":117,"author":{"gitId":"dgc5213"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentEmployeeTracker, userPrefs)));","lastModifiedDate":"2021-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2021-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-03-02"},{"lineNumber":121,"author":{"gitId":"dgc5213"},"content":"        modelManager.updateFilteredEmployeeList(new NameContainsKeywordsPredicate(Arrays.asList(keywords), \"n/\"));","lastModifiedDate":"2021-03-02"},{"lineNumber":122,"author":{"gitId":"dgc5213"},"content":"        assertFalse(modelManager.equals(new ModelManager(employeeTracker, userPrefs)));","lastModifiedDate":"2021-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2021-03-02"},{"lineNumber":125,"author":{"gitId":"dgc5213"},"content":"        modelManager.updateFilteredEmployeeList(PREDICATE_SHOW_ALL_EMPLOYEES);","lastModifiedDate":"2021-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2021-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-03-02"},{"lineNumber":129,"author":{"gitId":"dgc5213"},"content":"        differentUserPrefs.setEmployeeTrackerFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2021-03-02"},{"lineNumber":130,"author":{"gitId":"dgc5213"},"content":"        assertFalse(modelManager.equals(new ModelManager(employeeTracker, differentUserPrefs)));","lastModifiedDate":"2021-03-02"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"dgc5213":36,"-":96}},{"path":"src/test/java/employeetracker/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.model;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"e0260222"},"content":"    public void setEmployeeTrackerFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-02-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"e0260222"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setEmployeeTrackerFilePath(null));","lastModifiedDate":"2021-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"e0260222":4,"-":17}},{"path":"src/test/java/employeetracker/model/employee/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.model.employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"e0260222":2,"-":34}},{"path":"src/test/java/employeetracker/model/employee/DateOfBirthTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.model.employee;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"public class DateOfBirthTest {","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"e0260222"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DateOfBirth(null));","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"e0260222"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"e0260222"},"content":"    public void constructor_invalidDateOfBirth_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"e0260222"},"content":"        String invalidDateOfBirth \u003d \"\";","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"e0260222"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DateOfBirth(invalidDateOfBirth));","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"e0260222"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"e0260222"},"content":"    public void isValidDateOfBirth() {","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"e0260222"},"content":"        // null date of birth","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"e0260222"},"content":"        assertThrows(NullPointerException.class, () -\u003e DateOfBirth.isValidDateOfBirth(null));","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"e0260222"},"content":"        // invalid date of birth","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"e0260222"},"content":"        assertFalse(DateOfBirth.isValidDateOfBirth(\"\")); // empty string","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"e0260222"},"content":"        assertFalse(DateOfBirth.isValidDateOfBirth(\" \")); // spaces only","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"e0260222"},"content":"        assertFalse(DateOfBirth.isValidDateOfBirth(\"1990/12/10\")); // date of birth in yyyy/mm/dd format","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"e0260222"},"content":"        assertFalse(DateOfBirth.isValidDateOfBirth(\"12-10-1990\")); // date of birth in dd-mm-yyyy format","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"e0260222"},"content":"        assertFalse(DateOfBirth.isValidDateOfBirth(\"19901210\")); // date of birth in yyyymmdd format","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"e0260222"},"content":"        assertFalse(DateOfBirth.isValidDateOfBirth(\"199-12-32\")); // date of birth with invalid year","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"e0260222"},"content":"        assertFalse(DateOfBirth.isValidDateOfBirth(\"1990-13-10\")); // date of birth with invalid month","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"e0260222"},"content":"        assertFalse(DateOfBirth.isValidDateOfBirth(\"1990-12-32\")); // date of birth with invalid day","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"e0260222"},"content":"        // valid date of birth","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"e0260222"},"content":"        assertTrue(DateOfBirth.isValidDateOfBirth(\"1990-12-10\"));","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"e0260222"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"e0260222":40}},{"path":"src/test/java/employeetracker/model/employee/DateOfJoiningTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.model.employee;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"public class DateOfJoiningTest {","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"e0260222"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DateOfJoining(null));","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"e0260222"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"e0260222"},"content":"    public void constructor_invalidDateOfJoining_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"e0260222"},"content":"        String invalidDateOfJoining \u003d \"\";","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"e0260222"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DateOfJoining(invalidDateOfJoining));","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"e0260222"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"e0260222"},"content":"    public void isValidDateOfJoining() {","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"e0260222"},"content":"        // null date of joining","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"e0260222"},"content":"        assertThrows(NullPointerException.class, () -\u003e DateOfJoining.isValidDateOfJoining(null));","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"e0260222"},"content":"        // invalid date of joining","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"e0260222"},"content":"        assertFalse(DateOfJoining.isValidDateOfJoining(\"\")); // empty string","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"e0260222"},"content":"        assertFalse(DateOfJoining.isValidDateOfJoining(\" \")); // spaces only","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"e0260222"},"content":"        assertFalse(DateOfJoining.isValidDateOfJoining(\"2020/12/10\")); // date of joining in yyyy/mm/dd format","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"e0260222"},"content":"        assertFalse(DateOfJoining.isValidDateOfJoining(\"12-10-2020\")); // date of joining in dd-mm-yyyy format","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"e0260222"},"content":"        assertFalse(DateOfJoining.isValidDateOfJoining(\"20201210\")); // date of joining in yyyymmdd format","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"e0260222"},"content":"        assertFalse(DateOfJoining.isValidDateOfJoining(\"202-12-32\")); // date of joining with invalid year","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"e0260222"},"content":"        assertFalse(DateOfJoining.isValidDateOfJoining(\"2020-13-10\")); // date of joining with invalid month","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"e0260222"},"content":"        assertFalse(DateOfJoining.isValidDateOfJoining(\"2020-12-32\")); // date of joining with invalid day","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"e0260222"},"content":"        // valid date of joining","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"e0260222"},"content":"        assertTrue(DateOfJoining.isValidDateOfJoining(\"2020-12-10\"));","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"e0260222"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"e0260222":40}},{"path":"src/test/java/employeetracker/model/employee/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.model.employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\"));","lastModifiedDate":"2017-04-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"!#$%\u0026\u0027*+/\u003d?`{|}~^.-@example.org\")); // special characters local part","lastModifiedDate":"2018-02-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be!@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"e0260222":2,"-":59}},{"path":"src/test/java/employeetracker/model/employee/EmployeeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.model.employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_DATE_OF_BIRTH_BOB;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_DATE_OF_JOINING_BOB;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-02-20"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-02-20"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-02-20"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_ROLE_BOB;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_SALARY_BOB;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-02-20"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-20"},{"lineNumber":13,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.TypicalEmployees.ALICE;","lastModifiedDate":"2021-02-28"},{"lineNumber":14,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.TypicalEmployees.BOB;","lastModifiedDate":"2021-02-28"},{"lineNumber":15,"author":{"gitId":"e0260222"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-02-20"},{"lineNumber":16,"author":{"gitId":"e0260222"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-02-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"e0260222"},"content":"import employeetracker.testutil.EmployeeBuilder;","lastModifiedDate":"2021-02-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"e0260222"},"content":"public class EmployeeTest {","lastModifiedDate":"2021-02-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"e0260222"},"content":"        Employee employee \u003d new EmployeeBuilder().build();","lastModifiedDate":"2021-02-28"},{"lineNumber":27,"author":{"gitId":"e0260222"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e employee.getTags().remove(0));","lastModifiedDate":"2021-02-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"e0260222"},"content":"    public void isSameEmployee() {","lastModifiedDate":"2021-02-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"e0260222"},"content":"        assertTrue(ALICE.isSameEmployee(ALICE));","lastModifiedDate":"2021-02-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"e0260222"},"content":"        assertFalse(ALICE.isSameEmployee(null));","lastModifiedDate":"2021-02-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"e0260222"},"content":"        // same name and date of birth, all other attributes different -\u003e returns false","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"e0260222"},"content":"        Employee editedAlice \u003d new EmployeeBuilder(ALICE).withRole(VALID_ROLE_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"e0260222"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withDateOfJoining(VALID_DATE_OF_JOINING_BOB)","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"e0260222"},"content":"                .withSalary(VALID_SALARY_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"e0260222"},"content":"                .build();","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"e0260222"},"content":"        assertTrue(ALICE.isSameEmployee(editedAlice));","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"e0260222"},"content":"        // same name, all other attributes different -\u003e returns false","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"e0260222"},"content":"        editedAlice \u003d new EmployeeBuilder(ALICE).withRole(VALID_ROLE_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"e0260222"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withDateOfBirth(VALID_DATE_OF_BIRTH_BOB)","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"e0260222"},"content":"                .withDateOfJoining(VALID_DATE_OF_JOINING_BOB).withSalary(VALID_SALARY_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"e0260222"},"content":"                .build();","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"e0260222"},"content":"        assertFalse(ALICE.isSameEmployee(editedAlice));","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"e0260222"},"content":"        editedAlice \u003d new EmployeeBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-02-28"},{"lineNumber":54,"author":{"gitId":"e0260222"},"content":"        assertFalse(ALICE.isSameEmployee(editedAlice));","lastModifiedDate":"2021-02-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":57,"author":{"gitId":"e0260222"},"content":"        Employee editedBob \u003d new EmployeeBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2021-02-28"},{"lineNumber":58,"author":{"gitId":"e0260222"},"content":"        assertFalse(BOB.isSameEmployee(editedBob));","lastModifiedDate":"2021-02-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":62,"author":{"gitId":"e0260222"},"content":"        editedBob \u003d new EmployeeBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-02-28"},{"lineNumber":63,"author":{"gitId":"e0260222"},"content":"        assertFalse(BOB.isSameEmployee(editedBob));","lastModifiedDate":"2021-02-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"e0260222"},"content":"        Employee aliceCopy \u003d new EmployeeBuilder(ALICE).build();","lastModifiedDate":"2021-02-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"e0260222"},"content":"        // different employee -\u003e returns false","lastModifiedDate":"2021-02-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"e0260222"},"content":"        Employee editedAlice \u003d new EmployeeBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-02-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"e0260222"},"content":"        // different role -\u003e returns false","lastModifiedDate":"2021-03-22"},{"lineNumber":89,"author":{"gitId":"e0260222"},"content":"        editedAlice \u003d new EmployeeBuilder(ALICE).withRole(VALID_ROLE_BOB).build();","lastModifiedDate":"2021-03-22"},{"lineNumber":90,"author":{"gitId":"e0260222"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-03-22"},{"lineNumber":91,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"e0260222"},"content":"        editedAlice \u003d new EmployeeBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-02-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"e0260222"},"content":"        editedAlice \u003d new EmployeeBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-02-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"e0260222"},"content":"        editedAlice \u003d new EmployeeBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-02-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":104,"author":{"gitId":"e0260222"},"content":"        // different date of birth -\u003e returns false","lastModifiedDate":"2021-03-22"},{"lineNumber":105,"author":{"gitId":"e0260222"},"content":"        editedAlice \u003d new EmployeeBuilder(ALICE).withDateOfBirth(VALID_DATE_OF_BIRTH_BOB).build();","lastModifiedDate":"2021-03-22"},{"lineNumber":106,"author":{"gitId":"e0260222"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-03-22"},{"lineNumber":107,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":108,"author":{"gitId":"e0260222"},"content":"        // different date of joining -\u003e returns false","lastModifiedDate":"2021-03-22"},{"lineNumber":109,"author":{"gitId":"e0260222"},"content":"        editedAlice \u003d new EmployeeBuilder(ALICE).withDateOfJoining(VALID_DATE_OF_JOINING_BOB).build();","lastModifiedDate":"2021-03-22"},{"lineNumber":110,"author":{"gitId":"e0260222"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-03-22"},{"lineNumber":111,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":112,"author":{"gitId":"e0260222"},"content":"        // different salary -\u003e returns false","lastModifiedDate":"2021-03-22"},{"lineNumber":113,"author":{"gitId":"e0260222"},"content":"        editedAlice \u003d new EmployeeBuilder(ALICE).withSalary(VALID_SALARY_BOB).build();","lastModifiedDate":"2021-03-22"},{"lineNumber":114,"author":{"gitId":"e0260222"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-03-22"},{"lineNumber":115,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":117,"author":{"gitId":"e0260222"},"content":"        editedAlice \u003d new EmployeeBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-02-28"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"e0260222":64,"-":56}},{"path":"src/test/java/employeetracker/model/employee/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dgc5213"},"content":"package employeetracker.model.employee;","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"dgc5213"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"dgc5213"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"dgc5213"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"dgc5213"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"dgc5213"},"content":"import java.util.List;","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"dgc5213"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"dgc5213"},"content":"import employeetracker.testutil.EmployeeBuilder;","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"dgc5213"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"dgc5213"},"content":"    private String findBy;","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"dgc5213"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"dgc5213"},"content":"    public void equals() {","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"dgc5213"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"dgc5213"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"dgc5213"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"dgc5213"},"content":"                firstPredicateKeywordList, findBy);","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"dgc5213"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"dgc5213"},"content":"                secondPredicateKeywordList, findBy);","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"dgc5213"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"dgc5213"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"dgc5213"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-02"},{"lineNumber":32,"author":{"gitId":"dgc5213"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(","lastModifiedDate":"2021-03-02"},{"lineNumber":33,"author":{"gitId":"dgc5213"},"content":"                firstPredicateKeywordList, findBy);","lastModifiedDate":"2021-03-02"},{"lineNumber":34,"author":{"gitId":"dgc5213"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-03-02"},{"lineNumber":35,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"dgc5213"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-02"},{"lineNumber":37,"author":{"gitId":"dgc5213"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-03-02"},{"lineNumber":38,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":39,"author":{"gitId":"dgc5213"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-02"},{"lineNumber":40,"author":{"gitId":"dgc5213"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-03-02"},{"lineNumber":41,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"dgc5213"},"content":"        // different employee -\u003e returns false","lastModifiedDate":"2021-03-02"},{"lineNumber":43,"author":{"gitId":"dgc5213"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-03-02"},{"lineNumber":44,"author":{"gitId":"dgc5213"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":45,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":46,"author":{"gitId":"dgc5213"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":47,"author":{"gitId":"dgc5213"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-03-02"},{"lineNumber":48,"author":{"gitId":"dgc5213"},"content":"        // One keyword","lastModifiedDate":"2021-03-02"},{"lineNumber":49,"author":{"gitId":"dgc5213"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(","lastModifiedDate":"2021-03-02"},{"lineNumber":50,"author":{"gitId":"dgc5213"},"content":"                Collections.singletonList(\"Alice\"), \"n/\");","lastModifiedDate":"2021-03-02"},{"lineNumber":51,"author":{"gitId":"dgc5213"},"content":"        assertTrue(predicate.test(new EmployeeBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-02"},{"lineNumber":52,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":53,"author":{"gitId":"dgc5213"},"content":"        // Multiple keywords","lastModifiedDate":"2021-03-02"},{"lineNumber":54,"author":{"gitId":"dgc5213"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"), \"n/\");","lastModifiedDate":"2021-03-02"},{"lineNumber":55,"author":{"gitId":"dgc5213"},"content":"        assertTrue(predicate.test(new EmployeeBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-02"},{"lineNumber":56,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":57,"author":{"gitId":"dgc5213"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-03-02"},{"lineNumber":58,"author":{"gitId":"dgc5213"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"), \"n/\");","lastModifiedDate":"2021-03-02"},{"lineNumber":59,"author":{"gitId":"dgc5213"},"content":"        assertTrue(predicate.test(new EmployeeBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2021-03-02"},{"lineNumber":60,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":61,"author":{"gitId":"dgc5213"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-03-02"},{"lineNumber":62,"author":{"gitId":"dgc5213"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"), \"n/\");","lastModifiedDate":"2021-03-02"},{"lineNumber":63,"author":{"gitId":"dgc5213"},"content":"        assertTrue(predicate.test(new EmployeeBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-02"},{"lineNumber":64,"author":{"gitId":"dgc5213"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":65,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":66,"author":{"gitId":"dgc5213"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":67,"author":{"gitId":"dgc5213"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-03-02"},{"lineNumber":68,"author":{"gitId":"dgc5213"},"content":"        // Zero keywords","lastModifiedDate":"2021-03-02"},{"lineNumber":69,"author":{"gitId":"dgc5213"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList(), \"n/\");","lastModifiedDate":"2021-03-02"},{"lineNumber":70,"author":{"gitId":"dgc5213"},"content":"        assertFalse(predicate.test(new EmployeeBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2021-03-02"},{"lineNumber":71,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":72,"author":{"gitId":"dgc5213"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-03-02"},{"lineNumber":73,"author":{"gitId":"dgc5213"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"), \"n/\");","lastModifiedDate":"2021-03-02"},{"lineNumber":74,"author":{"gitId":"dgc5213"},"content":"        assertFalse(predicate.test(new EmployeeBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-02"},{"lineNumber":75,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":76,"author":{"gitId":"dgc5213"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2021-03-02"},{"lineNumber":77,"author":{"gitId":"dgc5213"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(","lastModifiedDate":"2021-03-02"},{"lineNumber":78,"author":{"gitId":"dgc5213"},"content":"                Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"), \"n/\");","lastModifiedDate":"2021-03-02"},{"lineNumber":79,"author":{"gitId":"dgc5213"},"content":"        assertFalse(predicate.test(new EmployeeBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2021-03-02"},{"lineNumber":80,"author":{"gitId":"dgc5213"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2021-03-02"},{"lineNumber":81,"author":{"gitId":"dgc5213"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":82,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":83,"author":{"gitId":"dgc5213"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"dgc5213"},"content":"    public void test_roleContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"dgc5213"},"content":"        // One keyword","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"dgc5213"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(","lastModifiedDate":"2021-03-23"},{"lineNumber":87,"author":{"gitId":"dgc5213"},"content":"                Collections.singletonList(\"Finance\"), \"r/\");","lastModifiedDate":"2021-03-23"},{"lineNumber":88,"author":{"gitId":"dgc5213"},"content":"        assertTrue(predicate.test(new EmployeeBuilder().withRole(\"Finance Manager\").build()));","lastModifiedDate":"2021-03-23"},{"lineNumber":89,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"dgc5213"},"content":"        // Multiple keywords","lastModifiedDate":"2021-03-23"},{"lineNumber":91,"author":{"gitId":"dgc5213"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Project\", \"Manager\"), \"r/\");","lastModifiedDate":"2021-03-23"},{"lineNumber":92,"author":{"gitId":"dgc5213"},"content":"        assertTrue(predicate.test(new EmployeeBuilder().withRole(\"Project Manager\").build()));","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":94,"author":{"gitId":"dgc5213"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"dgc5213"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Manager\", \"Developer\"), \"r/\");","lastModifiedDate":"2021-03-23"},{"lineNumber":96,"author":{"gitId":"dgc5213"},"content":"        assertTrue(predicate.test(new EmployeeBuilder().withRole(\"Project Manager\").build()));","lastModifiedDate":"2021-03-23"},{"lineNumber":97,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":98,"author":{"gitId":"dgc5213"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-03-23"},{"lineNumber":99,"author":{"gitId":"dgc5213"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"finance\", \"mAnager\"), \"r/\");","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"dgc5213"},"content":"        assertTrue(predicate.test(new EmployeeBuilder().withRole(\"Finance Manager\").build()));","lastModifiedDate":"2021-03-23"},{"lineNumber":101,"author":{"gitId":"dgc5213"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":102,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":103,"author":{"gitId":"dgc5213"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"dgc5213"},"content":"    public void test_roleDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-03-23"},{"lineNumber":105,"author":{"gitId":"dgc5213"},"content":"        // Zero keywords","lastModifiedDate":"2021-03-23"},{"lineNumber":106,"author":{"gitId":"dgc5213"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList(), \"r/\");","lastModifiedDate":"2021-03-23"},{"lineNumber":107,"author":{"gitId":"dgc5213"},"content":"        assertFalse(predicate.test(new EmployeeBuilder().withRole(\"Manager\").build()));","lastModifiedDate":"2021-03-23"},{"lineNumber":108,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":109,"author":{"gitId":"dgc5213"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-03-23"},{"lineNumber":110,"author":{"gitId":"dgc5213"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Developer\"), \"r/\");","lastModifiedDate":"2021-03-23"},{"lineNumber":111,"author":{"gitId":"dgc5213"},"content":"        assertFalse(predicate.test(new EmployeeBuilder().withRole(\"Finance Manager\").build()));","lastModifiedDate":"2021-03-23"},{"lineNumber":112,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":113,"author":{"gitId":"dgc5213"},"content":"        // Keywords match phone, email and address, but does not match role","lastModifiedDate":"2021-03-23"},{"lineNumber":114,"author":{"gitId":"dgc5213"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(","lastModifiedDate":"2021-03-23"},{"lineNumber":115,"author":{"gitId":"dgc5213"},"content":"                Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"), \"r/\");","lastModifiedDate":"2021-03-23"},{"lineNumber":116,"author":{"gitId":"dgc5213"},"content":"        assertFalse(predicate.test(new EmployeeBuilder().withRole(\"Manager\").withPhone(\"12345\")","lastModifiedDate":"2021-03-23"},{"lineNumber":117,"author":{"gitId":"dgc5213"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2021-03-23"},{"lineNumber":118,"author":{"gitId":"dgc5213"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":119,"author":{"gitId":"dgc5213"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":120,"author":{"gitId":"dgc5213"},"content":"    public void test_addressContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-03-23"},{"lineNumber":121,"author":{"gitId":"dgc5213"},"content":"        // One keyword","lastModifiedDate":"2021-03-23"},{"lineNumber":122,"author":{"gitId":"dgc5213"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(","lastModifiedDate":"2021-03-23"},{"lineNumber":123,"author":{"gitId":"dgc5213"},"content":"                Collections.singletonList(\"Woodlands\"), \"a/\");","lastModifiedDate":"2021-03-23"},{"lineNumber":124,"author":{"gitId":"dgc5213"},"content":"        assertTrue(predicate.test(new EmployeeBuilder().withAddress(\"Woodlands Street 41\").build()));","lastModifiedDate":"2021-03-23"},{"lineNumber":125,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":126,"author":{"gitId":"dgc5213"},"content":"        // Multiple keywords","lastModifiedDate":"2021-03-23"},{"lineNumber":127,"author":{"gitId":"dgc5213"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Woodlands\", \"School\"), \"a/\");","lastModifiedDate":"2021-03-23"},{"lineNumber":128,"author":{"gitId":"dgc5213"},"content":"        assertTrue(predicate.test(new EmployeeBuilder().withAddress(\"Woodlands High School\").build()));","lastModifiedDate":"2021-03-23"},{"lineNumber":129,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":130,"author":{"gitId":"dgc5213"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-03-23"},{"lineNumber":131,"author":{"gitId":"dgc5213"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Woodlands\", \"School\"), \"a/\");","lastModifiedDate":"2021-03-23"},{"lineNumber":132,"author":{"gitId":"dgc5213"},"content":"        assertTrue(predicate.test(new EmployeeBuilder().withAddress(\"High School\").build()));","lastModifiedDate":"2021-03-23"},{"lineNumber":133,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":134,"author":{"gitId":"dgc5213"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-03-23"},{"lineNumber":135,"author":{"gitId":"dgc5213"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"WOODLANDS\", \"schOOL\"), \"a/\");","lastModifiedDate":"2021-03-23"},{"lineNumber":136,"author":{"gitId":"dgc5213"},"content":"        assertTrue(predicate.test(new EmployeeBuilder().withAddress(\"Woodlands School\").build()));","lastModifiedDate":"2021-03-23"},{"lineNumber":137,"author":{"gitId":"dgc5213"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":138,"author":{"gitId":"dgc5213"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":139,"author":{"gitId":"dgc5213"},"content":"    public void test_addressDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-03-23"},{"lineNumber":140,"author":{"gitId":"dgc5213"},"content":"        // Zero keywords","lastModifiedDate":"2021-03-23"},{"lineNumber":141,"author":{"gitId":"dgc5213"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList(), \"a/\");","lastModifiedDate":"2021-03-23"},{"lineNumber":142,"author":{"gitId":"dgc5213"},"content":"        assertFalse(predicate.test(new EmployeeBuilder().withAddress(\"Woodlands\").build()));","lastModifiedDate":"2021-03-23"},{"lineNumber":143,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":144,"author":{"gitId":"dgc5213"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-03-23"},{"lineNumber":145,"author":{"gitId":"dgc5213"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Woodlands\"), \"a/\");","lastModifiedDate":"2021-03-23"},{"lineNumber":146,"author":{"gitId":"dgc5213"},"content":"        assertFalse(predicate.test(new EmployeeBuilder().withAddress(\"High School\").build()));","lastModifiedDate":"2021-03-23"},{"lineNumber":147,"author":{"gitId":"dgc5213"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":148,"author":{"gitId":"dgc5213"},"content":"        // Keywords match phone, email and role, but does not match address","lastModifiedDate":"2021-03-23"},{"lineNumber":149,"author":{"gitId":"dgc5213"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(","lastModifiedDate":"2021-03-23"},{"lineNumber":150,"author":{"gitId":"dgc5213"},"content":"                Arrays.asList(\"12345\", \"alice@email.com\", \"Manager\", \"HighSchool\"), \"a/\");","lastModifiedDate":"2021-03-23"},{"lineNumber":151,"author":{"gitId":"dgc5213"},"content":"        assertFalse(predicate.test(new EmployeeBuilder().withRole(\"Manager\").withPhone(\"12345\")","lastModifiedDate":"2021-03-23"},{"lineNumber":152,"author":{"gitId":"dgc5213"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Street\").build()));","lastModifiedDate":"2021-03-23"},{"lineNumber":153,"author":{"gitId":"dgc5213"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":154,"author":{"gitId":"dgc5213"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"dgc5213":154}},{"path":"src/test/java/employeetracker/model/employee/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.model.employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"e0260222":2,"-":38}},{"path":"src/test/java/employeetracker/model/employee/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.model.employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"e0260222":2,"-":38}},{"path":"src/test/java/employeetracker/model/employee/RoleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.model.employee;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"public class RoleTest {","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"e0260222"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Role(null));","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"e0260222"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"e0260222"},"content":"    public void constructor_invalidRole_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"e0260222"},"content":"        String invalidRole \u003d \"\";","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"e0260222"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Role(invalidRole));","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"e0260222"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"e0260222"},"content":"    public void isValidRole() {","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"e0260222"},"content":"        // null role","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"e0260222"},"content":"        assertThrows(NullPointerException.class, () -\u003e Role.isValidRole(null));","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"e0260222"},"content":"        // invalid roles","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"e0260222"},"content":"        assertFalse(Role.isValidRole(\"\")); // empty string","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"e0260222"},"content":"        assertFalse(Role.isValidRole(\" \")); // spaces only","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"e0260222"},"content":"        // valid roles","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"e0260222"},"content":"        assertTrue(Role.isValidRole(\"Developer\"));","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"e0260222"},"content":"        assertTrue(Role.isValidRole(\"-\")); // one character","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"e0260222"},"content":"        assertTrue(Role.isValidRole(\"Project Manager (Geographic Information Systems), Asia Pacific\")); // long role","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"e0260222"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"e0260222":36}},{"path":"src/test/java/employeetracker/model/employee/SalaryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.model.employee;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"public class SalaryTest {","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"e0260222"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Salary(null));","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"e0260222"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"e0260222"},"content":"    public void constructor_invalidSalary_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"e0260222"},"content":"        String invalidSalary \u003d \"\";","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"e0260222"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Salary(invalidSalary));","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"e0260222"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"e0260222"},"content":"    public void isValidSalary() {","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"e0260222"},"content":"        // null salary number","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"e0260222"},"content":"        assertThrows(NullPointerException.class, () -\u003e Salary.isValidSalary(null));","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"e0260222"},"content":"        // invalid salary numbers","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"e0260222"},"content":"        assertFalse(Salary.isValidSalary(\"\")); // empty string","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"e0260222"},"content":"        assertFalse(Salary.isValidSalary(\" \")); // spaces only","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"e0260222"},"content":"        assertFalse(Salary.isValidSalary(\"Salary\")); // non-numeric","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"e0260222"},"content":"        assertFalse(Salary.isValidSalary(\"-1000\")); // negative number","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"e0260222"},"content":"        assertFalse(Salary.isValidSalary(\"1000.00\")); // decimal number","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"e0260222"},"content":"        assertFalse(Salary.isValidSalary(\"$6000\")); // salary number with dollar sign","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"e0260222"},"content":"        // valid salary numbers","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"e0260222"},"content":"        assertTrue(Salary.isValidSalary(\"0\"));","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"e0260222"},"content":"        assertTrue(Salary.isValidSalary(\"9000\"));","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"e0260222"},"content":"        assertTrue(Salary.isValidSalary(\"124293842033123\")); // long salary number","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"e0260222"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"e0260222":40}},{"path":"src/test/java/employeetracker/model/employee/UniqueEmployeeListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.model.employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-02-20"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-20"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.TypicalEmployees.ALICE;","lastModifiedDate":"2021-02-28"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.TypicalEmployees.BOB;","lastModifiedDate":"2021-02-28"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-02-20"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-02-20"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-02-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.exceptions.DuplicateEmployeeException;","lastModifiedDate":"2021-02-28"},{"lineNumber":19,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.exceptions.EmployeeNotFoundException;","lastModifiedDate":"2021-02-28"},{"lineNumber":20,"author":{"gitId":"e0260222"},"content":"import employeetracker.testutil.EmployeeBuilder;","lastModifiedDate":"2021-02-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"e0260222"},"content":"public class UniqueEmployeeListTest {","lastModifiedDate":"2021-02-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"e0260222"},"content":"    private final UniqueEmployeeList uniqueEmployeeList \u003d new UniqueEmployeeList();","lastModifiedDate":"2021-02-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"e0260222"},"content":"    public void contains_nullEmployee_throwsNullPointerException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":28,"author":{"gitId":"e0260222"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEmployeeList.contains(null));","lastModifiedDate":"2021-02-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"e0260222"},"content":"    public void contains_employeeNotInList_returnsFalse() {","lastModifiedDate":"2021-02-28"},{"lineNumber":33,"author":{"gitId":"e0260222"},"content":"        assertFalse(uniqueEmployeeList.contains(ALICE));","lastModifiedDate":"2021-02-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"e0260222"},"content":"    public void contains_employeeInList_returnsTrue() {","lastModifiedDate":"2021-02-28"},{"lineNumber":38,"author":{"gitId":"e0260222"},"content":"        uniqueEmployeeList.add(ALICE);","lastModifiedDate":"2021-02-28"},{"lineNumber":39,"author":{"gitId":"e0260222"},"content":"        assertTrue(uniqueEmployeeList.contains(ALICE));","lastModifiedDate":"2021-02-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"e0260222"},"content":"    public void contains_employeeWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-02-28"},{"lineNumber":44,"author":{"gitId":"e0260222"},"content":"        uniqueEmployeeList.add(ALICE);","lastModifiedDate":"2021-02-28"},{"lineNumber":45,"author":{"gitId":"e0260222"},"content":"        Employee editedAlice \u003d new EmployeeBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-02-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"e0260222"},"content":"        assertTrue(uniqueEmployeeList.contains(editedAlice));","lastModifiedDate":"2021-02-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"e0260222"},"content":"    public void add_nullEmployee_throwsNullPointerException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":52,"author":{"gitId":"e0260222"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEmployeeList.add(null));","lastModifiedDate":"2021-02-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"e0260222"},"content":"    public void add_duplicateEmployee_throwsDuplicateEmployeeException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":57,"author":{"gitId":"e0260222"},"content":"        uniqueEmployeeList.add(ALICE);","lastModifiedDate":"2021-02-28"},{"lineNumber":58,"author":{"gitId":"e0260222"},"content":"        assertThrows(DuplicateEmployeeException.class, () -\u003e uniqueEmployeeList.add(ALICE));","lastModifiedDate":"2021-02-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"e0260222"},"content":"    public void setEmployee_nullTargetEmployee_throwsNullPointerException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":63,"author":{"gitId":"e0260222"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEmployeeList.setEmployee(null, ALICE));","lastModifiedDate":"2021-02-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"e0260222"},"content":"    public void setEmployee_nullEditedEmployee_throwsNullPointerException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":68,"author":{"gitId":"e0260222"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEmployeeList.setEmployee(ALICE, null));","lastModifiedDate":"2021-02-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"e0260222"},"content":"    public void setEmployee_targetEmployeeNotInList_throwsEmployeeNotFoundException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":73,"author":{"gitId":"e0260222"},"content":"        assertThrows(EmployeeNotFoundException.class, () -\u003e uniqueEmployeeList.setEmployee(ALICE, ALICE));","lastModifiedDate":"2021-02-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"e0260222"},"content":"    public void setEmployee_editedEmployeeIsSameEmployee_success() {","lastModifiedDate":"2021-02-28"},{"lineNumber":78,"author":{"gitId":"e0260222"},"content":"        uniqueEmployeeList.add(ALICE);","lastModifiedDate":"2021-02-28"},{"lineNumber":79,"author":{"gitId":"e0260222"},"content":"        uniqueEmployeeList.setEmployee(ALICE, ALICE);","lastModifiedDate":"2021-02-28"},{"lineNumber":80,"author":{"gitId":"e0260222"},"content":"        UniqueEmployeeList expectedUniqueEmployeeList \u003d new UniqueEmployeeList();","lastModifiedDate":"2021-02-28"},{"lineNumber":81,"author":{"gitId":"e0260222"},"content":"        expectedUniqueEmployeeList.add(ALICE);","lastModifiedDate":"2021-02-28"},{"lineNumber":82,"author":{"gitId":"e0260222"},"content":"        assertEquals(expectedUniqueEmployeeList, uniqueEmployeeList);","lastModifiedDate":"2021-02-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"e0260222"},"content":"    public void setEmployee_editedEmployeeHasSameIdentity_success() {","lastModifiedDate":"2021-02-28"},{"lineNumber":87,"author":{"gitId":"e0260222"},"content":"        uniqueEmployeeList.add(ALICE);","lastModifiedDate":"2021-02-28"},{"lineNumber":88,"author":{"gitId":"e0260222"},"content":"        Employee editedAlice \u003d new EmployeeBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-02-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"e0260222"},"content":"        uniqueEmployeeList.setEmployee(ALICE, editedAlice);","lastModifiedDate":"2021-02-28"},{"lineNumber":91,"author":{"gitId":"e0260222"},"content":"        UniqueEmployeeList expectedUniqueEmployeeList \u003d new UniqueEmployeeList();","lastModifiedDate":"2021-02-28"},{"lineNumber":92,"author":{"gitId":"e0260222"},"content":"        expectedUniqueEmployeeList.add(editedAlice);","lastModifiedDate":"2021-02-28"},{"lineNumber":93,"author":{"gitId":"e0260222"},"content":"        assertEquals(expectedUniqueEmployeeList, uniqueEmployeeList);","lastModifiedDate":"2021-02-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"e0260222"},"content":"    public void setEmployee_editedEmployeeHasDifferentIdentity_success() {","lastModifiedDate":"2021-02-28"},{"lineNumber":98,"author":{"gitId":"e0260222"},"content":"        uniqueEmployeeList.add(ALICE);","lastModifiedDate":"2021-02-28"},{"lineNumber":99,"author":{"gitId":"e0260222"},"content":"        uniqueEmployeeList.setEmployee(ALICE, BOB);","lastModifiedDate":"2021-02-28"},{"lineNumber":100,"author":{"gitId":"e0260222"},"content":"        UniqueEmployeeList expectedUniqueEmployeeList \u003d new UniqueEmployeeList();","lastModifiedDate":"2021-02-28"},{"lineNumber":101,"author":{"gitId":"e0260222"},"content":"        expectedUniqueEmployeeList.add(BOB);","lastModifiedDate":"2021-02-28"},{"lineNumber":102,"author":{"gitId":"e0260222"},"content":"        assertEquals(expectedUniqueEmployeeList, uniqueEmployeeList);","lastModifiedDate":"2021-02-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"e0260222"},"content":"    public void setEmployee_editedEmployeeHasNonUniqueIdentity_throwsDuplicateEmployeeException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":107,"author":{"gitId":"e0260222"},"content":"        uniqueEmployeeList.add(ALICE);","lastModifiedDate":"2021-02-28"},{"lineNumber":108,"author":{"gitId":"e0260222"},"content":"        uniqueEmployeeList.add(BOB);","lastModifiedDate":"2021-02-28"},{"lineNumber":109,"author":{"gitId":"e0260222"},"content":"        assertThrows(DuplicateEmployeeException.class, () -\u003e uniqueEmployeeList.setEmployee(ALICE, BOB));","lastModifiedDate":"2021-02-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"e0260222"},"content":"    public void remove_nullEmployee_throwsNullPointerException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":114,"author":{"gitId":"e0260222"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEmployeeList.remove(null));","lastModifiedDate":"2021-02-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"e0260222"},"content":"    public void remove_employeeDoesNotExist_throwsEmployeeNotFoundException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":119,"author":{"gitId":"e0260222"},"content":"        assertThrows(EmployeeNotFoundException.class, () -\u003e uniqueEmployeeList.remove(ALICE));","lastModifiedDate":"2021-02-28"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"e0260222"},"content":"    public void remove_existingEmployee_removesEmployee() {","lastModifiedDate":"2021-02-28"},{"lineNumber":124,"author":{"gitId":"e0260222"},"content":"        uniqueEmployeeList.add(ALICE);","lastModifiedDate":"2021-02-28"},{"lineNumber":125,"author":{"gitId":"e0260222"},"content":"        uniqueEmployeeList.remove(ALICE);","lastModifiedDate":"2021-02-28"},{"lineNumber":126,"author":{"gitId":"e0260222"},"content":"        UniqueEmployeeList expectedUniqueEmployeeList \u003d new UniqueEmployeeList();","lastModifiedDate":"2021-02-28"},{"lineNumber":127,"author":{"gitId":"e0260222"},"content":"        assertEquals(expectedUniqueEmployeeList, uniqueEmployeeList);","lastModifiedDate":"2021-02-28"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"e0260222"},"content":"    public void setEmployees_nullUniqueEmployeeList_throwsNullPointerException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":132,"author":{"gitId":"e0260222"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEmployeeList.setEmployees((UniqueEmployeeList) null));","lastModifiedDate":"2021-02-28"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"e0260222"},"content":"    public void setEmployees_uniqueEmployeeList_replacesOwnListWithProvidedUniqueEmployeeList() {","lastModifiedDate":"2021-02-28"},{"lineNumber":137,"author":{"gitId":"e0260222"},"content":"        uniqueEmployeeList.add(ALICE);","lastModifiedDate":"2021-02-28"},{"lineNumber":138,"author":{"gitId":"e0260222"},"content":"        UniqueEmployeeList expectedUniqueEmployeeList \u003d new UniqueEmployeeList();","lastModifiedDate":"2021-02-28"},{"lineNumber":139,"author":{"gitId":"e0260222"},"content":"        expectedUniqueEmployeeList.add(BOB);","lastModifiedDate":"2021-02-28"},{"lineNumber":140,"author":{"gitId":"e0260222"},"content":"        uniqueEmployeeList.setEmployees(expectedUniqueEmployeeList);","lastModifiedDate":"2021-02-28"},{"lineNumber":141,"author":{"gitId":"e0260222"},"content":"        assertEquals(expectedUniqueEmployeeList, uniqueEmployeeList);","lastModifiedDate":"2021-02-28"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"e0260222"},"content":"    public void setEmployees_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":146,"author":{"gitId":"e0260222"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEmployeeList.setEmployees((List\u003cEmployee\u003e) null));","lastModifiedDate":"2021-02-28"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"e0260222"},"content":"    public void setEmployees_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-02-28"},{"lineNumber":151,"author":{"gitId":"e0260222"},"content":"        uniqueEmployeeList.add(ALICE);","lastModifiedDate":"2021-02-28"},{"lineNumber":152,"author":{"gitId":"e0260222"},"content":"        List\u003cEmployee\u003e employeeList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2021-02-27"},{"lineNumber":153,"author":{"gitId":"e0260222"},"content":"        uniqueEmployeeList.setEmployees(employeeList);","lastModifiedDate":"2021-02-28"},{"lineNumber":154,"author":{"gitId":"e0260222"},"content":"        UniqueEmployeeList expectedUniqueEmployeeList \u003d new UniqueEmployeeList();","lastModifiedDate":"2021-02-28"},{"lineNumber":155,"author":{"gitId":"e0260222"},"content":"        expectedUniqueEmployeeList.add(BOB);","lastModifiedDate":"2021-02-28"},{"lineNumber":156,"author":{"gitId":"e0260222"},"content":"        assertEquals(expectedUniqueEmployeeList, uniqueEmployeeList);","lastModifiedDate":"2021-02-28"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"e0260222"},"content":"    public void setEmployees_listWithDuplicateEmployees_throwsDuplicateEmployeeException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":161,"author":{"gitId":"e0260222"},"content":"        List\u003cEmployee\u003e listWithDuplicateEmployees \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2021-02-27"},{"lineNumber":162,"author":{"gitId":"e0260222"},"content":"        assertThrows(DuplicateEmployeeException.class, () -\u003e uniqueEmployeeList","lastModifiedDate":"2021-02-28"},{"lineNumber":163,"author":{"gitId":"e0260222"},"content":"                .setEmployees(listWithDuplicateEmployees));","lastModifiedDate":"2021-02-28"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"e0260222"},"content":"            -\u003e uniqueEmployeeList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-02-28"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"e0260222":90,"-":81}},{"path":"src/test/java/employeetracker/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.model.tag;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"e0260222":2,"-":24}},{"path":"src/test/java/employeetracker/storage/JsonAdaptedEmployeeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.storage;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.storage.JsonAdaptedEmployee.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-02-28"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-20"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.TypicalEmployees.BENSON;","lastModifiedDate":"2021-02-28"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-02-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-02-20"},{"lineNumber":15,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Address;","lastModifiedDate":"2021-02-27"},{"lineNumber":16,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.DateOfBirth;","lastModifiedDate":"2021-02-27"},{"lineNumber":17,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.DateOfJoining;","lastModifiedDate":"2021-02-27"},{"lineNumber":18,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Email;","lastModifiedDate":"2021-02-27"},{"lineNumber":19,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Name;","lastModifiedDate":"2021-02-27"},{"lineNumber":20,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Phone;","lastModifiedDate":"2021-02-27"},{"lineNumber":21,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Role;","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Salary;","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"e0260222"},"content":"public class JsonAdaptedEmployeeTest {","lastModifiedDate":"2021-02-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"e0260222"},"content":"    private static final String INVALID_ROLE \u003d \" \";","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"e0260222"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2021-02-22"},{"lineNumber":30,"author":{"gitId":"e0260222"},"content":"    private static final String INVALID_DATE_OF_BIRTH \u003d \"30-12-1999\";","lastModifiedDate":"2021-02-22"},{"lineNumber":31,"author":{"gitId":"e0260222"},"content":"    private static final String INVALID_DATE_OF_JOINING \u003d \"30-12-2019\";","lastModifiedDate":"2021-02-23"},{"lineNumber":32,"author":{"gitId":"e0260222"},"content":"    private static final String INVALID_SALARY \u003d \"1000.00\";","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"e0260222"},"content":"    private static final String VALID_ROLE \u003d BENSON.getRole().toString();","lastModifiedDate":"2021-02-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"e0260222"},"content":"    private static final String VALID_DATE_OF_BIRTH \u003d BENSON.getDateOfBirth().toString();","lastModifiedDate":"2021-02-22"},{"lineNumber":41,"author":{"gitId":"e0260222"},"content":"    private static final String VALID_DATE_OF_JOINING \u003d BENSON.getDateOfJoining().toString();","lastModifiedDate":"2021-02-23"},{"lineNumber":42,"author":{"gitId":"e0260222"},"content":"    private static final String VALID_SALARY \u003d BENSON.getSalary().toString();","lastModifiedDate":"2021-02-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"e0260222"},"content":"    public void toModelType_validEmployeeDetails_returnsEmployee() throws Exception {","lastModifiedDate":"2021-02-28"},{"lineNumber":49,"author":{"gitId":"e0260222"},"content":"        JsonAdaptedEmployee person \u003d new JsonAdaptedEmployee(BENSON);","lastModifiedDate":"2021-02-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"e0260222"},"content":"        JsonAdaptedEmployee person \u003d new JsonAdaptedEmployee(INVALID_NAME, VALID_ROLE, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-02-28"},{"lineNumber":56,"author":{"gitId":"e0260222"},"content":"                VALID_ADDRESS, VALID_DATE_OF_BIRTH, VALID_DATE_OF_JOINING, VALID_SALARY, VALID_TAGS);","lastModifiedDate":"2021-02-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"e0260222"},"content":"        JsonAdaptedEmployee person \u003d new JsonAdaptedEmployee(null, VALID_ROLE, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-02-28"},{"lineNumber":64,"author":{"gitId":"e0260222"},"content":"                VALID_ADDRESS, VALID_DATE_OF_BIRTH, VALID_DATE_OF_JOINING, VALID_SALARY, VALID_TAGS);","lastModifiedDate":"2021-02-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"e0260222"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":70,"author":{"gitId":"e0260222"},"content":"    public void toModelType_invalidRole_throwsIllegalValueException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":71,"author":{"gitId":"e0260222"},"content":"        JsonAdaptedEmployee person \u003d new JsonAdaptedEmployee(VALID_NAME, INVALID_ROLE, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-03-22"},{"lineNumber":72,"author":{"gitId":"e0260222"},"content":"                VALID_ADDRESS, VALID_DATE_OF_BIRTH, VALID_DATE_OF_JOINING, VALID_SALARY, VALID_TAGS);","lastModifiedDate":"2021-03-22"},{"lineNumber":73,"author":{"gitId":"e0260222"},"content":"        String expectedMessage \u003d Role.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-22"},{"lineNumber":74,"author":{"gitId":"e0260222"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-22"},{"lineNumber":75,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":76,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":77,"author":{"gitId":"e0260222"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":78,"author":{"gitId":"e0260222"},"content":"    public void toModelType_nullRole_throwsIllegalValueException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":79,"author":{"gitId":"e0260222"},"content":"        JsonAdaptedEmployee person \u003d new JsonAdaptedEmployee(VALID_NAME, null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-03-22"},{"lineNumber":80,"author":{"gitId":"e0260222"},"content":"                VALID_ADDRESS, VALID_DATE_OF_BIRTH, VALID_DATE_OF_JOINING, VALID_SALARY, VALID_TAGS);","lastModifiedDate":"2021-03-22"},{"lineNumber":81,"author":{"gitId":"e0260222"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Role.class.getSimpleName());","lastModifiedDate":"2021-03-22"},{"lineNumber":82,"author":{"gitId":"e0260222"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-22"},{"lineNumber":83,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":84,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"e0260222"},"content":"        JsonAdaptedEmployee person \u003d new JsonAdaptedEmployee(VALID_NAME, VALID_ROLE, INVALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-02-28"},{"lineNumber":88,"author":{"gitId":"e0260222"},"content":"                VALID_ADDRESS, VALID_DATE_OF_BIRTH, VALID_DATE_OF_JOINING, VALID_SALARY, VALID_TAGS);","lastModifiedDate":"2021-02-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"e0260222"},"content":"        JsonAdaptedEmployee person \u003d new JsonAdaptedEmployee(VALID_NAME, VALID_ROLE, null, VALID_EMAIL,","lastModifiedDate":"2021-02-28"},{"lineNumber":96,"author":{"gitId":"e0260222"},"content":"                VALID_ADDRESS, VALID_DATE_OF_BIRTH, VALID_DATE_OF_JOINING, VALID_SALARY, VALID_TAGS);","lastModifiedDate":"2021-02-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"e0260222"},"content":"        JsonAdaptedEmployee person \u003d new JsonAdaptedEmployee(VALID_NAME, VALID_ROLE, VALID_PHONE, INVALID_EMAIL,","lastModifiedDate":"2021-02-28"},{"lineNumber":104,"author":{"gitId":"e0260222"},"content":"                VALID_ADDRESS, VALID_DATE_OF_BIRTH, VALID_DATE_OF_JOINING, VALID_SALARY, VALID_TAGS);","lastModifiedDate":"2021-02-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"e0260222"},"content":"        JsonAdaptedEmployee person \u003d new JsonAdaptedEmployee(VALID_NAME, VALID_ROLE, VALID_PHONE, null,","lastModifiedDate":"2021-02-28"},{"lineNumber":112,"author":{"gitId":"e0260222"},"content":"                VALID_ADDRESS, VALID_DATE_OF_BIRTH, VALID_DATE_OF_JOINING, VALID_SALARY, VALID_TAGS);","lastModifiedDate":"2021-02-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"e0260222"},"content":"        JsonAdaptedEmployee person \u003d new JsonAdaptedEmployee(VALID_NAME, VALID_ROLE, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-02-28"},{"lineNumber":120,"author":{"gitId":"e0260222"},"content":"                INVALID_ADDRESS, VALID_DATE_OF_BIRTH, VALID_DATE_OF_JOINING, VALID_SALARY, VALID_TAGS);","lastModifiedDate":"2021-02-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"e0260222"},"content":"        JsonAdaptedEmployee person \u003d new JsonAdaptedEmployee(VALID_NAME, VALID_ROLE, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-02-28"},{"lineNumber":128,"author":{"gitId":"e0260222"},"content":"                null, VALID_DATE_OF_BIRTH, VALID_DATE_OF_JOINING, VALID_SALARY, VALID_TAGS);","lastModifiedDate":"2021-02-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"e0260222"},"content":"    @Test","lastModifiedDate":"2021-02-23"},{"lineNumber":134,"author":{"gitId":"e0260222"},"content":"    public void toModelType_invalidDateOfBirth_throwsIllegalValueException() {","lastModifiedDate":"2021-02-23"},{"lineNumber":135,"author":{"gitId":"e0260222"},"content":"        JsonAdaptedEmployee person \u003d new JsonAdaptedEmployee(VALID_NAME, VALID_ROLE, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-02-28"},{"lineNumber":136,"author":{"gitId":"e0260222"},"content":"                VALID_ADDRESS, INVALID_DATE_OF_BIRTH, VALID_DATE_OF_JOINING, VALID_SALARY, VALID_TAGS);","lastModifiedDate":"2021-02-24"},{"lineNumber":137,"author":{"gitId":"e0260222"},"content":"        String expectedMessage \u003d DateOfBirth.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-02-23"},{"lineNumber":138,"author":{"gitId":"e0260222"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-02-23"},{"lineNumber":139,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-23"},{"lineNumber":140,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":141,"author":{"gitId":"e0260222"},"content":"    @Test","lastModifiedDate":"2021-02-23"},{"lineNumber":142,"author":{"gitId":"e0260222"},"content":"    public void toModelType_nullDateOfBirth_throwsIllegalValueException() {","lastModifiedDate":"2021-02-23"},{"lineNumber":143,"author":{"gitId":"e0260222"},"content":"        JsonAdaptedEmployee person \u003d new JsonAdaptedEmployee(VALID_NAME, VALID_ROLE, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-02-28"},{"lineNumber":144,"author":{"gitId":"e0260222"},"content":"                VALID_ADDRESS, null, VALID_DATE_OF_JOINING, VALID_SALARY, VALID_TAGS);","lastModifiedDate":"2021-02-24"},{"lineNumber":145,"author":{"gitId":"e0260222"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, DateOfBirth.class.getSimpleName());","lastModifiedDate":"2021-02-23"},{"lineNumber":146,"author":{"gitId":"e0260222"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-02-23"},{"lineNumber":147,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-23"},{"lineNumber":148,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":149,"author":{"gitId":"e0260222"},"content":"    @Test","lastModifiedDate":"2021-02-23"},{"lineNumber":150,"author":{"gitId":"e0260222"},"content":"    public void toModelType_invalidDateOfJoining_throwsIllegalValueException() {","lastModifiedDate":"2021-02-23"},{"lineNumber":151,"author":{"gitId":"e0260222"},"content":"        JsonAdaptedEmployee person \u003d new JsonAdaptedEmployee(VALID_NAME, VALID_ROLE, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-02-28"},{"lineNumber":152,"author":{"gitId":"e0260222"},"content":"                VALID_ADDRESS, VALID_DATE_OF_BIRTH, INVALID_DATE_OF_JOINING, VALID_SALARY, VALID_TAGS);","lastModifiedDate":"2021-02-24"},{"lineNumber":153,"author":{"gitId":"e0260222"},"content":"        String expectedMessage \u003d DateOfJoining.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-02-23"},{"lineNumber":154,"author":{"gitId":"e0260222"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-02-23"},{"lineNumber":155,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-23"},{"lineNumber":156,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":157,"author":{"gitId":"e0260222"},"content":"    @Test","lastModifiedDate":"2021-02-23"},{"lineNumber":158,"author":{"gitId":"e0260222"},"content":"    public void toModelType_nullDateOfJoining_throwsIllegalValueException() {","lastModifiedDate":"2021-02-23"},{"lineNumber":159,"author":{"gitId":"e0260222"},"content":"        JsonAdaptedEmployee person \u003d new JsonAdaptedEmployee(VALID_NAME, VALID_ROLE, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-02-28"},{"lineNumber":160,"author":{"gitId":"e0260222"},"content":"                VALID_ADDRESS, VALID_DATE_OF_BIRTH, null, VALID_SALARY, VALID_TAGS);","lastModifiedDate":"2021-02-24"},{"lineNumber":161,"author":{"gitId":"e0260222"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, DateOfJoining.class.getSimpleName());","lastModifiedDate":"2021-02-23"},{"lineNumber":162,"author":{"gitId":"e0260222"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-02-23"},{"lineNumber":163,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-23"},{"lineNumber":164,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":165,"author":{"gitId":"e0260222"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":166,"author":{"gitId":"e0260222"},"content":"    public void toModelType_invalidSalary_throwsIllegalValueException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":167,"author":{"gitId":"e0260222"},"content":"        JsonAdaptedEmployee person \u003d new JsonAdaptedEmployee(VALID_NAME, VALID_ROLE, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-03-22"},{"lineNumber":168,"author":{"gitId":"e0260222"},"content":"                VALID_ADDRESS, VALID_DATE_OF_BIRTH, VALID_DATE_OF_JOINING, INVALID_SALARY, VALID_TAGS);","lastModifiedDate":"2021-03-22"},{"lineNumber":169,"author":{"gitId":"e0260222"},"content":"        String expectedMessage \u003d Salary.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-22"},{"lineNumber":170,"author":{"gitId":"e0260222"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-22"},{"lineNumber":171,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":172,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":173,"author":{"gitId":"e0260222"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":174,"author":{"gitId":"e0260222"},"content":"    public void toModelType_nullSalary_throwsIllegalValueException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":175,"author":{"gitId":"e0260222"},"content":"        JsonAdaptedEmployee person \u003d new JsonAdaptedEmployee(VALID_NAME, VALID_ROLE, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-03-22"},{"lineNumber":176,"author":{"gitId":"e0260222"},"content":"                VALID_ADDRESS, VALID_DATE_OF_BIRTH, VALID_DATE_OF_JOINING, null, VALID_TAGS);","lastModifiedDate":"2021-03-22"},{"lineNumber":177,"author":{"gitId":"e0260222"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Salary.class.getSimpleName());","lastModifiedDate":"2021-03-22"},{"lineNumber":178,"author":{"gitId":"e0260222"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-22"},{"lineNumber":179,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":180,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":185,"author":{"gitId":"e0260222"},"content":"        JsonAdaptedEmployee person \u003d new JsonAdaptedEmployee(VALID_NAME, VALID_ROLE, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-02-28"},{"lineNumber":186,"author":{"gitId":"e0260222"},"content":"                VALID_ADDRESS, VALID_DATE_OF_BIRTH, VALID_DATE_OF_JOINING, VALID_SALARY, invalidTags);","lastModifiedDate":"2021-02-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"e0260222":108,"-":82}},{"path":"src/test/java/employeetracker/storage/JsonEmployeeTrackerStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.storage;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.TypicalEmployees.ALICE;","lastModifiedDate":"2021-02-28"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.TypicalEmployees.HOON;","lastModifiedDate":"2021-02-28"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.TypicalEmployees.IDA;","lastModifiedDate":"2021-02-28"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.TypicalEmployees.getTypicalEmployeeTracker;","lastModifiedDate":"2021-02-28"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-02-20"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-02-20"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"import java.io.IOException;","lastModifiedDate":"2021-02-20"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-02-20"},{"lineNumber":13,"author":{"gitId":"e0260222"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-02-20"},{"lineNumber":14,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":15,"author":{"gitId":"e0260222"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-02-20"},{"lineNumber":16,"author":{"gitId":"e0260222"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-02-20"},{"lineNumber":17,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":18,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-02-20"},{"lineNumber":19,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.EmployeeTracker;","lastModifiedDate":"2021-02-20"},{"lineNumber":20,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.ReadOnlyEmployeeTracker;","lastModifiedDate":"2021-02-20"},{"lineNumber":21,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":22,"author":{"gitId":"e0260222"},"content":"public class JsonEmployeeTrackerStorageTest {","lastModifiedDate":"2021-02-20"},{"lineNumber":23,"author":{"gitId":"e0260222"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonEmployeeTrackerStorageTest\");","lastModifiedDate":"2021-02-20"},{"lineNumber":24,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":25,"author":{"gitId":"e0260222"},"content":"    @TempDir","lastModifiedDate":"2021-02-20"},{"lineNumber":26,"author":{"gitId":"e0260222"},"content":"    public Path testFolder;","lastModifiedDate":"2021-02-20"},{"lineNumber":27,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":28,"author":{"gitId":"e0260222"},"content":"    @Test","lastModifiedDate":"2021-02-20"},{"lineNumber":29,"author":{"gitId":"e0260222"},"content":"    public void readEmployeeTracker_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-02-20"},{"lineNumber":30,"author":{"gitId":"e0260222"},"content":"        assertThrows(NullPointerException.class, () -\u003e readEmployeeTracker(null));","lastModifiedDate":"2021-02-20"},{"lineNumber":31,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-20"},{"lineNumber":32,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":33,"author":{"gitId":"e0260222"},"content":"    private java.util.Optional\u003cReadOnlyEmployeeTracker\u003e readEmployeeTracker(String filePath) throws Exception {","lastModifiedDate":"2021-02-20"},{"lineNumber":34,"author":{"gitId":"e0260222"},"content":"        return new JsonEmployeeTrackerStorage(Paths.get(filePath))","lastModifiedDate":"2021-02-20"},{"lineNumber":35,"author":{"gitId":"e0260222"},"content":"                .readEmployeeTracker(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-02-20"},{"lineNumber":36,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-20"},{"lineNumber":37,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":38,"author":{"gitId":"e0260222"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2021-02-20"},{"lineNumber":39,"author":{"gitId":"e0260222"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2021-02-20"},{"lineNumber":40,"author":{"gitId":"e0260222"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2021-02-20"},{"lineNumber":41,"author":{"gitId":"e0260222"},"content":"                : null;","lastModifiedDate":"2021-02-20"},{"lineNumber":42,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-20"},{"lineNumber":43,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":44,"author":{"gitId":"e0260222"},"content":"    @Test","lastModifiedDate":"2021-02-20"},{"lineNumber":45,"author":{"gitId":"e0260222"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2021-02-20"},{"lineNumber":46,"author":{"gitId":"e0260222"},"content":"        assertFalse(readEmployeeTracker(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-02-20"},{"lineNumber":47,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-20"},{"lineNumber":48,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":49,"author":{"gitId":"e0260222"},"content":"    @Test","lastModifiedDate":"2021-02-20"},{"lineNumber":50,"author":{"gitId":"e0260222"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2021-02-20"},{"lineNumber":51,"author":{"gitId":"e0260222"},"content":"        assertThrows(DataConversionException.class, () -\u003e readEmployeeTracker(\"notJsonFormat.json\"));","lastModifiedDate":"2021-02-28"},{"lineNumber":52,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-20"},{"lineNumber":53,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":54,"author":{"gitId":"e0260222"},"content":"    @Test","lastModifiedDate":"2021-02-20"},{"lineNumber":55,"author":{"gitId":"e0260222"},"content":"    public void readEmployeeTracker_invalidEmployee_throwDataConversionException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":56,"author":{"gitId":"e0260222"},"content":"        assertThrows(DataConversionException.class, () -\u003e readEmployeeTracker(\"invalidEmployee.json\"));","lastModifiedDate":"2021-02-28"},{"lineNumber":57,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-20"},{"lineNumber":58,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":59,"author":{"gitId":"e0260222"},"content":"    @Test","lastModifiedDate":"2021-02-20"},{"lineNumber":60,"author":{"gitId":"e0260222"},"content":"    public void readEmployeeTracker_invalidAndValidEmployee_throwDataConversionException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":61,"author":{"gitId":"e0260222"},"content":"        assertThrows(DataConversionException.class, () -\u003e","lastModifiedDate":"2021-02-20"},{"lineNumber":62,"author":{"gitId":"e0260222"},"content":"                readEmployeeTracker(\"invalidAndValidEmployee.json\"));","lastModifiedDate":"2021-02-28"},{"lineNumber":63,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-20"},{"lineNumber":64,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":65,"author":{"gitId":"e0260222"},"content":"    @Test","lastModifiedDate":"2021-02-20"},{"lineNumber":66,"author":{"gitId":"e0260222"},"content":"    public void readAndSaveEmployeeTracker_allInOrder_success() throws Exception {","lastModifiedDate":"2021-02-20"},{"lineNumber":67,"author":{"gitId":"e0260222"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2021-02-20"},{"lineNumber":68,"author":{"gitId":"e0260222"},"content":"        EmployeeTracker original \u003d getTypicalEmployeeTracker();","lastModifiedDate":"2021-02-20"},{"lineNumber":69,"author":{"gitId":"e0260222"},"content":"        JsonEmployeeTrackerStorage jsonEmployeeTrackerStorage \u003d new JsonEmployeeTrackerStorage(filePath);","lastModifiedDate":"2021-02-28"},{"lineNumber":70,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":71,"author":{"gitId":"e0260222"},"content":"        // Save in new file and read back","lastModifiedDate":"2021-02-20"},{"lineNumber":72,"author":{"gitId":"e0260222"},"content":"        jsonEmployeeTrackerStorage.saveEmployeeTracker(original, filePath);","lastModifiedDate":"2021-02-28"},{"lineNumber":73,"author":{"gitId":"e0260222"},"content":"        ReadOnlyEmployeeTracker readBack \u003d jsonEmployeeTrackerStorage.readEmployeeTracker(filePath).get();","lastModifiedDate":"2021-02-28"},{"lineNumber":74,"author":{"gitId":"e0260222"},"content":"        assertEquals(original, new EmployeeTracker(readBack));","lastModifiedDate":"2021-02-20"},{"lineNumber":75,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":76,"author":{"gitId":"e0260222"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2021-02-20"},{"lineNumber":77,"author":{"gitId":"e0260222"},"content":"        original.addEmployee(HOON);","lastModifiedDate":"2021-02-28"},{"lineNumber":78,"author":{"gitId":"e0260222"},"content":"        original.removeEmployee(ALICE);","lastModifiedDate":"2021-02-28"},{"lineNumber":79,"author":{"gitId":"e0260222"},"content":"        jsonEmployeeTrackerStorage.saveEmployeeTracker(original, filePath);","lastModifiedDate":"2021-02-28"},{"lineNumber":80,"author":{"gitId":"e0260222"},"content":"        readBack \u003d jsonEmployeeTrackerStorage.readEmployeeTracker(filePath).get();","lastModifiedDate":"2021-02-28"},{"lineNumber":81,"author":{"gitId":"e0260222"},"content":"        assertEquals(original, new EmployeeTracker(readBack));","lastModifiedDate":"2021-02-20"},{"lineNumber":82,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":83,"author":{"gitId":"e0260222"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2021-02-20"},{"lineNumber":84,"author":{"gitId":"e0260222"},"content":"        original.addEmployee(IDA);","lastModifiedDate":"2021-02-28"},{"lineNumber":85,"author":{"gitId":"e0260222"},"content":"        jsonEmployeeTrackerStorage.saveEmployeeTracker(original); // file path not specified","lastModifiedDate":"2021-02-28"},{"lineNumber":86,"author":{"gitId":"e0260222"},"content":"        readBack \u003d jsonEmployeeTrackerStorage.readEmployeeTracker().get(); // file path not specified","lastModifiedDate":"2021-02-28"},{"lineNumber":87,"author":{"gitId":"e0260222"},"content":"        assertEquals(original, new EmployeeTracker(readBack));","lastModifiedDate":"2021-02-20"},{"lineNumber":88,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":89,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-20"},{"lineNumber":90,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":91,"author":{"gitId":"e0260222"},"content":"    @Test","lastModifiedDate":"2021-02-20"},{"lineNumber":92,"author":{"gitId":"e0260222"},"content":"    public void saveEmployeeTracker_nullEmployeeTracker_throwsNullPointerException() {","lastModifiedDate":"2021-02-20"},{"lineNumber":93,"author":{"gitId":"e0260222"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveEmployeeTracker(null, \"SomeFile.json\"));","lastModifiedDate":"2021-02-20"},{"lineNumber":94,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-20"},{"lineNumber":95,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":96,"author":{"gitId":"e0260222"},"content":"    /**","lastModifiedDate":"2021-02-20"},{"lineNumber":97,"author":{"gitId":"e0260222"},"content":"     * Saves {@code EmployeeTracker} at the specified {@code filePath}.","lastModifiedDate":"2021-03-22"},{"lineNumber":98,"author":{"gitId":"e0260222"},"content":"     */","lastModifiedDate":"2021-02-20"},{"lineNumber":99,"author":{"gitId":"e0260222"},"content":"    private void saveEmployeeTracker(ReadOnlyEmployeeTracker addressBook, String filePath) {","lastModifiedDate":"2021-02-20"},{"lineNumber":100,"author":{"gitId":"e0260222"},"content":"        try {","lastModifiedDate":"2021-02-20"},{"lineNumber":101,"author":{"gitId":"e0260222"},"content":"            new JsonEmployeeTrackerStorage(Paths.get(filePath))","lastModifiedDate":"2021-02-20"},{"lineNumber":102,"author":{"gitId":"e0260222"},"content":"                    .saveEmployeeTracker(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-02-20"},{"lineNumber":103,"author":{"gitId":"e0260222"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-02-20"},{"lineNumber":104,"author":{"gitId":"e0260222"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2021-02-20"},{"lineNumber":105,"author":{"gitId":"e0260222"},"content":"        }","lastModifiedDate":"2021-02-20"},{"lineNumber":106,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-20"},{"lineNumber":107,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":108,"author":{"gitId":"e0260222"},"content":"    @Test","lastModifiedDate":"2021-02-20"},{"lineNumber":109,"author":{"gitId":"e0260222"},"content":"    public void saveEmployeeTracker_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-02-20"},{"lineNumber":110,"author":{"gitId":"e0260222"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveEmployeeTracker(new EmployeeTracker(), null));","lastModifiedDate":"2021-02-20"},{"lineNumber":111,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-20"},{"lineNumber":112,"author":{"gitId":"e0260222"},"content":"}","lastModifiedDate":"2021-02-20"}],"authorContributionMap":{"e0260222":112}},{"path":"src/test/java/employeetracker/storage/JsonSerializableEmployeeTrackerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.storage;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-02-20"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.util.JsonUtil;","lastModifiedDate":"2021-02-20"},{"lineNumber":13,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.EmployeeTracker;","lastModifiedDate":"2021-02-20"},{"lineNumber":14,"author":{"gitId":"e0260222"},"content":"import employeetracker.testutil.TypicalEmployees;","lastModifiedDate":"2021-02-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"e0260222"},"content":"public class JsonSerializableEmployeeTrackerTest {","lastModifiedDate":"2021-02-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"e0260222"},"content":"    private static final Path TEST_DATA_FOLDER \u003d","lastModifiedDate":"2021-02-20"},{"lineNumber":19,"author":{"gitId":"e0260222"},"content":"            Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableEmployeeTrackerTest\");","lastModifiedDate":"2021-02-20"},{"lineNumber":20,"author":{"gitId":"e0260222"},"content":"    private static final Path TYPICAL_EMPLOYEES_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalEmployees.json\");","lastModifiedDate":"2021-02-28"},{"lineNumber":21,"author":{"gitId":"e0260222"},"content":"    private static final Path INVALID_EMPLOYEE_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidEmployee.json\");","lastModifiedDate":"2021-02-28"},{"lineNumber":22,"author":{"gitId":"e0260222"},"content":"    private static final Path DUPLICATE_EMPLOYEE_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateEmployee.json\");","lastModifiedDate":"2021-02-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"e0260222"},"content":"    public void toModelType_typicalEmployeesFile_success() throws Exception {","lastModifiedDate":"2021-02-28"},{"lineNumber":26,"author":{"gitId":"e0260222"},"content":"        JsonSerializableEmployeeTracker dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_EMPLOYEES_FILE,","lastModifiedDate":"2021-02-28"},{"lineNumber":27,"author":{"gitId":"e0260222"},"content":"                JsonSerializableEmployeeTracker.class).get();","lastModifiedDate":"2021-02-20"},{"lineNumber":28,"author":{"gitId":"e0260222"},"content":"        EmployeeTracker employeeTrackerFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-02-23"},{"lineNumber":29,"author":{"gitId":"e0260222"},"content":"        EmployeeTracker typicalPersonsEmployeeTracker \u003d TypicalEmployees.getTypicalEmployeeTracker();","lastModifiedDate":"2021-02-28"},{"lineNumber":30,"author":{"gitId":"e0260222"},"content":"        assertEquals(employeeTrackerFromFile, typicalPersonsEmployeeTracker);","lastModifiedDate":"2021-02-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"e0260222"},"content":"    public void toModelType_invalidEmployeeFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-02-28"},{"lineNumber":35,"author":{"gitId":"e0260222"},"content":"        JsonSerializableEmployeeTracker dataFromFile \u003d JsonUtil.readJsonFile(INVALID_EMPLOYEE_FILE,","lastModifiedDate":"2021-02-28"},{"lineNumber":36,"author":{"gitId":"e0260222"},"content":"                JsonSerializableEmployeeTracker.class).get();","lastModifiedDate":"2021-02-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"e0260222"},"content":"    public void toModelType_duplicateEmployees_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-02-28"},{"lineNumber":42,"author":{"gitId":"e0260222"},"content":"        JsonSerializableEmployeeTracker dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_EMPLOYEE_FILE,","lastModifiedDate":"2021-02-28"},{"lineNumber":43,"author":{"gitId":"e0260222"},"content":"                JsonSerializableEmployeeTracker.class).get();","lastModifiedDate":"2021-02-20"},{"lineNumber":44,"author":{"gitId":"e0260222"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableEmployeeTracker.MESSAGE_DUPLICATE_EMPLOYEE,","lastModifiedDate":"2021-02-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"e0260222":26,"-":22}},{"path":"src/test/java/employeetracker/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.storage;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.core.GuiSettings;","lastModifiedDate":"2021-02-20"},{"lineNumber":16,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-02-20"},{"lineNumber":17,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.UserPrefs;","lastModifiedDate":"2021-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"e0260222"},"content":"        userPrefs.setEmployeeTrackerFilePath(Paths.get(\"employeetracker.json\"));","lastModifiedDate":"2021-02-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"e0260222":6,"-":117}},{"path":"src/test/java/employeetracker/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.storage;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.TypicalEmployees.getTypicalEmployeeTracker;","lastModifiedDate":"2021-02-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.core.GuiSettings;","lastModifiedDate":"2021-02-20"},{"lineNumber":14,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.EmployeeTracker;","lastModifiedDate":"2021-02-20"},{"lineNumber":15,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.ReadOnlyEmployeeTracker;","lastModifiedDate":"2021-02-20"},{"lineNumber":16,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.UserPrefs;","lastModifiedDate":"2021-02-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"e0260222"},"content":"        JsonEmployeeTrackerStorage addressBookStorage \u003d new JsonEmployeeTrackerStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2021-02-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"e0260222"},"content":"    public void employeeTrackerReadSave() throws Exception {","lastModifiedDate":"2021-02-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"e0260222"},"content":"         * {@link JsonEmployeeTrackerStorage} class.","lastModifiedDate":"2021-02-20"},{"lineNumber":55,"author":{"gitId":"e0260222"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonEmployeeTrackerStorageTest} class.","lastModifiedDate":"2021-02-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"e0260222"},"content":"        EmployeeTracker original \u003d getTypicalEmployeeTracker();","lastModifiedDate":"2021-02-20"},{"lineNumber":58,"author":{"gitId":"e0260222"},"content":"        storageManager.saveEmployeeTracker(original);","lastModifiedDate":"2021-02-20"},{"lineNumber":59,"author":{"gitId":"e0260222"},"content":"        ReadOnlyEmployeeTracker retrieved \u003d storageManager.readEmployeeTracker().get();","lastModifiedDate":"2021-02-20"},{"lineNumber":60,"author":{"gitId":"e0260222"},"content":"        assertEquals(original, new EmployeeTracker(retrieved));","lastModifiedDate":"2021-02-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"e0260222"},"content":"    public void getEmployeeTrackerFilePath() {","lastModifiedDate":"2021-02-20"},{"lineNumber":65,"author":{"gitId":"e0260222"},"content":"        assertNotNull(storageManager.getEmployeeTrackerFilePath());","lastModifiedDate":"2021-02-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"e0260222":16,"-":52}},{"path":"src/test/java/employeetracker/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.testutil;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"e0260222":1,"-":33}},{"path":"src/test/java/employeetracker/testutil/EditEmployeeDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.testutil;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.commands.EditCommand;","lastModifiedDate":"2021-02-28"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.commands.EditCommand.EditEmployeeDescriptor;","lastModifiedDate":"2021-02-28"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Address;","lastModifiedDate":"2021-02-27"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.DateOfBirth;","lastModifiedDate":"2021-02-27"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.DateOfJoining;","lastModifiedDate":"2021-02-27"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Email;","lastModifiedDate":"2021-02-27"},{"lineNumber":13,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":14,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Name;","lastModifiedDate":"2021-02-27"},{"lineNumber":15,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Phone;","lastModifiedDate":"2021-02-27"},{"lineNumber":16,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Role;","lastModifiedDate":"2021-02-27"},{"lineNumber":17,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Salary;","lastModifiedDate":"2021-02-27"},{"lineNumber":18,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.tag.Tag;","lastModifiedDate":"2021-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"e0260222"},"content":" * A utility class to help with building EditEmployeeDescriptor objects.","lastModifiedDate":"2021-02-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"e0260222"},"content":"public class EditEmployeeDescriptorBuilder {","lastModifiedDate":"2021-02-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"e0260222"},"content":"    private EditCommand.EditEmployeeDescriptor descriptor;","lastModifiedDate":"2021-02-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"e0260222"},"content":"    public EditEmployeeDescriptorBuilder() {","lastModifiedDate":"2021-02-28"},{"lineNumber":28,"author":{"gitId":"e0260222"},"content":"        descriptor \u003d new EditEmployeeDescriptor();","lastModifiedDate":"2021-02-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"e0260222"},"content":"    public EditEmployeeDescriptorBuilder(EditEmployeeDescriptor descriptor) {","lastModifiedDate":"2021-02-28"},{"lineNumber":32,"author":{"gitId":"e0260222"},"content":"        this.descriptor \u003d new EditEmployeeDescriptor(descriptor);","lastModifiedDate":"2021-02-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"e0260222"},"content":"     * Returns an {@code EditEmployeeDescriptor} with fields containing {@code employee}\u0027s details","lastModifiedDate":"2021-02-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"e0260222"},"content":"    public EditEmployeeDescriptorBuilder(Employee employee) {","lastModifiedDate":"2021-02-28"},{"lineNumber":39,"author":{"gitId":"e0260222"},"content":"        descriptor \u003d new EditCommand.EditEmployeeDescriptor();","lastModifiedDate":"2021-02-28"},{"lineNumber":40,"author":{"gitId":"e0260222"},"content":"        descriptor.setName(employee.getName());","lastModifiedDate":"2021-02-27"},{"lineNumber":41,"author":{"gitId":"e0260222"},"content":"        descriptor.setRole(employee.getRole());","lastModifiedDate":"2021-02-27"},{"lineNumber":42,"author":{"gitId":"e0260222"},"content":"        descriptor.setPhone(employee.getPhone());","lastModifiedDate":"2021-02-27"},{"lineNumber":43,"author":{"gitId":"e0260222"},"content":"        descriptor.setEmail(employee.getEmail());","lastModifiedDate":"2021-02-27"},{"lineNumber":44,"author":{"gitId":"e0260222"},"content":"        descriptor.setAddress(employee.getAddress());","lastModifiedDate":"2021-02-27"},{"lineNumber":45,"author":{"gitId":"e0260222"},"content":"        descriptor.setDateOfBirth(employee.getDateOfBirth());","lastModifiedDate":"2021-02-27"},{"lineNumber":46,"author":{"gitId":"e0260222"},"content":"        descriptor.setDateOfJoining(employee.getDateOfJoining());","lastModifiedDate":"2021-02-27"},{"lineNumber":47,"author":{"gitId":"e0260222"},"content":"        descriptor.setSalary(employee.getSalary());","lastModifiedDate":"2021-02-27"},{"lineNumber":48,"author":{"gitId":"e0260222"},"content":"        descriptor.setTags(employee.getTags());","lastModifiedDate":"2021-02-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"e0260222"},"content":"     * Sets the {@code Name} of the {@code EditEmployeeDescriptor} that we are building.","lastModifiedDate":"2021-02-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"e0260222"},"content":"    public EditEmployeeDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-02-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"e0260222"},"content":"    /**","lastModifiedDate":"2021-02-24"},{"lineNumber":60,"author":{"gitId":"e0260222"},"content":"     * Sets the {@code Role} of the {@code EditEmployeeDescriptor} that we are building.","lastModifiedDate":"2021-02-28"},{"lineNumber":61,"author":{"gitId":"e0260222"},"content":"     */","lastModifiedDate":"2021-02-24"},{"lineNumber":62,"author":{"gitId":"e0260222"},"content":"    public EditEmployeeDescriptorBuilder withRole(String role) {","lastModifiedDate":"2021-02-28"},{"lineNumber":63,"author":{"gitId":"e0260222"},"content":"        descriptor.setRole(new Role(role));","lastModifiedDate":"2021-02-24"},{"lineNumber":64,"author":{"gitId":"e0260222"},"content":"        return this;","lastModifiedDate":"2021-02-24"},{"lineNumber":65,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-24"},{"lineNumber":66,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"e0260222"},"content":"     * Sets the {@code Phone} of the {@code EditEmployeeDescriptor} that we are building.","lastModifiedDate":"2021-02-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"e0260222"},"content":"    public EditEmployeeDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2021-02-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"e0260222"},"content":"     * Sets the {@code Email} of the {@code EditEmployeeDescriptor} that we are building.","lastModifiedDate":"2021-02-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"e0260222"},"content":"    public EditEmployeeDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2021-02-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"e0260222"},"content":"     * Sets the {@code Address} of the {@code EditEmployeeDescriptor} that we are building.","lastModifiedDate":"2021-02-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"e0260222"},"content":"    public EditEmployeeDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2021-02-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":91,"author":{"gitId":"e0260222"},"content":"    /**","lastModifiedDate":"2021-02-23"},{"lineNumber":92,"author":{"gitId":"e0260222"},"content":"     * Sets the {@code DateOfBirth} of the {@code EditEmployeeDescriptor} that we are building.","lastModifiedDate":"2021-02-28"},{"lineNumber":93,"author":{"gitId":"e0260222"},"content":"     */","lastModifiedDate":"2021-02-23"},{"lineNumber":94,"author":{"gitId":"e0260222"},"content":"    public EditEmployeeDescriptorBuilder withDateOfBirth(String dateOfBirth) {","lastModifiedDate":"2021-02-28"},{"lineNumber":95,"author":{"gitId":"e0260222"},"content":"        descriptor.setDateOfBirth(new DateOfBirth(dateOfBirth));","lastModifiedDate":"2021-02-23"},{"lineNumber":96,"author":{"gitId":"e0260222"},"content":"        return this;","lastModifiedDate":"2021-02-23"},{"lineNumber":97,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-23"},{"lineNumber":98,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":99,"author":{"gitId":"e0260222"},"content":"    /**","lastModifiedDate":"2021-02-23"},{"lineNumber":100,"author":{"gitId":"e0260222"},"content":"     * Sets the {@code DateOfJoining} of the {@code EditEmployeeDescriptor} that we are building.","lastModifiedDate":"2021-02-28"},{"lineNumber":101,"author":{"gitId":"e0260222"},"content":"     */","lastModifiedDate":"2021-02-23"},{"lineNumber":102,"author":{"gitId":"e0260222"},"content":"    public EditEmployeeDescriptorBuilder withDateOfJoining(String dateOfJoining) {","lastModifiedDate":"2021-02-28"},{"lineNumber":103,"author":{"gitId":"e0260222"},"content":"        descriptor.setDateOfJoining(new DateOfJoining(dateOfJoining));","lastModifiedDate":"2021-02-23"},{"lineNumber":104,"author":{"gitId":"e0260222"},"content":"        return this;","lastModifiedDate":"2021-02-23"},{"lineNumber":105,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-23"},{"lineNumber":106,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":107,"author":{"gitId":"e0260222"},"content":"    /**","lastModifiedDate":"2021-02-24"},{"lineNumber":108,"author":{"gitId":"e0260222"},"content":"     * Sets the {@code Salary} of the {@code EditEmployeeDescriptor} that we are building.","lastModifiedDate":"2021-02-28"},{"lineNumber":109,"author":{"gitId":"e0260222"},"content":"     */","lastModifiedDate":"2021-02-24"},{"lineNumber":110,"author":{"gitId":"e0260222"},"content":"    public EditEmployeeDescriptorBuilder withSalary(String salary) {","lastModifiedDate":"2021-02-28"},{"lineNumber":111,"author":{"gitId":"e0260222"},"content":"        descriptor.setSalary(new Salary(salary));","lastModifiedDate":"2021-02-24"},{"lineNumber":112,"author":{"gitId":"e0260222"},"content":"        return this;","lastModifiedDate":"2021-02-24"},{"lineNumber":113,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-24"},{"lineNumber":114,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":116,"author":{"gitId":"e0260222"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditEmployeeDescriptor}","lastModifiedDate":"2021-02-28"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":119,"author":{"gitId":"e0260222"},"content":"    public EditEmployeeDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2021-02-28"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":125,"author":{"gitId":"e0260222"},"content":"    public EditEmployeeDescriptor build() {","lastModifiedDate":"2021-02-28"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"e0260222":75,"-":53}},{"path":"src/test/java/employeetracker/testutil/EmployeeBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.testutil;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Address;","lastModifiedDate":"2021-02-27"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.DateOfBirth;","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.DateOfJoining;","lastModifiedDate":"2021-02-27"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Email;","lastModifiedDate":"2021-02-27"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Name;","lastModifiedDate":"2021-02-27"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Phone;","lastModifiedDate":"2021-02-27"},{"lineNumber":13,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Role;","lastModifiedDate":"2021-02-27"},{"lineNumber":14,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Salary;","lastModifiedDate":"2021-02-27"},{"lineNumber":15,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.tag.Tag;","lastModifiedDate":"2021-02-20"},{"lineNumber":16,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.util.SampleDataUtil;","lastModifiedDate":"2021-02-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"e0260222"},"content":" * A utility class to help with building Employee objects.","lastModifiedDate":"2021-02-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"e0260222"},"content":"public class EmployeeBuilder {","lastModifiedDate":"2021-02-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"e0260222"},"content":"    public static final String DEFAULT_ROLE \u003d \"Developer\";","lastModifiedDate":"2021-02-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"e0260222"},"content":"    public static final String DEFAULT_DATE_OF_BIRTH \u003d \"1990-10-12\";","lastModifiedDate":"2021-02-24"},{"lineNumber":29,"author":{"gitId":"e0260222"},"content":"    public static final String DEFAULT_DATE_OF_JOINING \u003d \"2020-01-01\";","lastModifiedDate":"2021-02-23"},{"lineNumber":30,"author":{"gitId":"e0260222"},"content":"    public static final String DEFAULT_SALARY \u003d \"6000\";","lastModifiedDate":"2021-02-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"e0260222"},"content":"    private Role role;","lastModifiedDate":"2021-02-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"e0260222"},"content":"    private DateOfBirth dateOfBirth;","lastModifiedDate":"2021-02-23"},{"lineNumber":38,"author":{"gitId":"e0260222"},"content":"    private DateOfJoining dateOfJoining;","lastModifiedDate":"2021-02-23"},{"lineNumber":39,"author":{"gitId":"e0260222"},"content":"    private Salary salary;","lastModifiedDate":"2021-02-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"e0260222"},"content":"     * Creates a {@code EmployeeBuilder} with the default details.","lastModifiedDate":"2021-02-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"e0260222"},"content":"    public EmployeeBuilder() {","lastModifiedDate":"2021-02-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"e0260222"},"content":"        role \u003d new Role(DEFAULT_ROLE);","lastModifiedDate":"2021-02-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"e0260222"},"content":"        dateOfBirth \u003d new DateOfBirth(DEFAULT_DATE_OF_BIRTH);","lastModifiedDate":"2021-02-23"},{"lineNumber":52,"author":{"gitId":"e0260222"},"content":"        dateOfJoining \u003d new DateOfJoining(DEFAULT_DATE_OF_JOINING);","lastModifiedDate":"2021-02-23"},{"lineNumber":53,"author":{"gitId":"e0260222"},"content":"        salary \u003d new Salary(DEFAULT_SALARY);","lastModifiedDate":"2021-02-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":58,"author":{"gitId":"e0260222"},"content":"     * Initializes the EmployeeBuilder with the data of {@code employeeToCopy}.","lastModifiedDate":"2021-02-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":60,"author":{"gitId":"e0260222"},"content":"    public EmployeeBuilder(Employee employeeToCopy) {","lastModifiedDate":"2021-02-28"},{"lineNumber":61,"author":{"gitId":"e0260222"},"content":"        name \u003d employeeToCopy.getName();","lastModifiedDate":"2021-02-27"},{"lineNumber":62,"author":{"gitId":"e0260222"},"content":"        role \u003d employeeToCopy.getRole();","lastModifiedDate":"2021-02-27"},{"lineNumber":63,"author":{"gitId":"e0260222"},"content":"        phone \u003d employeeToCopy.getPhone();","lastModifiedDate":"2021-02-27"},{"lineNumber":64,"author":{"gitId":"e0260222"},"content":"        email \u003d employeeToCopy.getEmail();","lastModifiedDate":"2021-02-27"},{"lineNumber":65,"author":{"gitId":"e0260222"},"content":"        address \u003d employeeToCopy.getAddress();","lastModifiedDate":"2021-02-27"},{"lineNumber":66,"author":{"gitId":"e0260222"},"content":"        dateOfBirth \u003d employeeToCopy.getDateOfBirth();","lastModifiedDate":"2021-02-27"},{"lineNumber":67,"author":{"gitId":"e0260222"},"content":"        dateOfJoining \u003d employeeToCopy.getDateOfJoining();","lastModifiedDate":"2021-02-27"},{"lineNumber":68,"author":{"gitId":"e0260222"},"content":"        salary \u003d employeeToCopy.getSalary();","lastModifiedDate":"2021-02-27"},{"lineNumber":69,"author":{"gitId":"e0260222"},"content":"        tags \u003d new HashSet\u003c\u003e(employeeToCopy.getTags());","lastModifiedDate":"2021-02-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"e0260222"},"content":"     * Sets the {@code Name} of the {@code Employee} that we are building.","lastModifiedDate":"2021-02-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"e0260222"},"content":"    public EmployeeBuilder withName(String name) {","lastModifiedDate":"2021-02-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"e0260222"},"content":"    /**","lastModifiedDate":"2021-02-24"},{"lineNumber":81,"author":{"gitId":"e0260222"},"content":"     * Sets the {@code Role} of the {@code Employee} that we are building.","lastModifiedDate":"2021-02-27"},{"lineNumber":82,"author":{"gitId":"e0260222"},"content":"     */","lastModifiedDate":"2021-02-24"},{"lineNumber":83,"author":{"gitId":"e0260222"},"content":"    public EmployeeBuilder withRole(String role) {","lastModifiedDate":"2021-02-28"},{"lineNumber":84,"author":{"gitId":"e0260222"},"content":"        this.role \u003d new Role(role);","lastModifiedDate":"2021-02-24"},{"lineNumber":85,"author":{"gitId":"e0260222"},"content":"        return this;","lastModifiedDate":"2021-02-24"},{"lineNumber":86,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-24"},{"lineNumber":87,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"e0260222"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Employee} that we are building.","lastModifiedDate":"2021-02-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"e0260222"},"content":"    public EmployeeBuilder withTags(String ... tags) {","lastModifiedDate":"2021-02-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"e0260222"},"content":"     * Sets the {@code Address} of the {@code Employee} that we are building.","lastModifiedDate":"2021-02-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"e0260222"},"content":"    public EmployeeBuilder withAddress(String address) {","lastModifiedDate":"2021-02-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":105,"author":{"gitId":"e0260222"},"content":"     * Sets the {@code Phone} of the {@code Employee} that we are building.","lastModifiedDate":"2021-02-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":107,"author":{"gitId":"e0260222"},"content":"    public EmployeeBuilder withPhone(String phone) {","lastModifiedDate":"2021-02-28"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":113,"author":{"gitId":"e0260222"},"content":"     * Sets the {@code Email} of the {@code Employee} that we are building.","lastModifiedDate":"2021-02-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":115,"author":{"gitId":"e0260222"},"content":"    public EmployeeBuilder withEmail(String email) {","lastModifiedDate":"2021-02-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":120,"author":{"gitId":"e0260222"},"content":"    /**","lastModifiedDate":"2021-02-23"},{"lineNumber":121,"author":{"gitId":"e0260222"},"content":"     * Sets the {@code DateOfBirth} of the {@code Employee} that we are building.","lastModifiedDate":"2021-02-27"},{"lineNumber":122,"author":{"gitId":"e0260222"},"content":"     */","lastModifiedDate":"2021-02-23"},{"lineNumber":123,"author":{"gitId":"e0260222"},"content":"    public EmployeeBuilder withDateOfBirth(String dateOfBirth) {","lastModifiedDate":"2021-02-28"},{"lineNumber":124,"author":{"gitId":"e0260222"},"content":"        this.dateOfBirth \u003d new DateOfBirth(dateOfBirth);","lastModifiedDate":"2021-02-23"},{"lineNumber":125,"author":{"gitId":"e0260222"},"content":"        return this;","lastModifiedDate":"2021-02-23"},{"lineNumber":126,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-23"},{"lineNumber":127,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":128,"author":{"gitId":"e0260222"},"content":"    /**","lastModifiedDate":"2021-02-23"},{"lineNumber":129,"author":{"gitId":"e0260222"},"content":"     * Sets the {@code DateOfJoining} of the {@code Employee} that we are building.","lastModifiedDate":"2021-02-27"},{"lineNumber":130,"author":{"gitId":"e0260222"},"content":"     */","lastModifiedDate":"2021-02-23"},{"lineNumber":131,"author":{"gitId":"e0260222"},"content":"    public EmployeeBuilder withDateOfJoining(String dateOfJoining) {","lastModifiedDate":"2021-02-28"},{"lineNumber":132,"author":{"gitId":"e0260222"},"content":"        this.dateOfJoining \u003d new DateOfJoining(dateOfJoining);","lastModifiedDate":"2021-02-23"},{"lineNumber":133,"author":{"gitId":"e0260222"},"content":"        return this;","lastModifiedDate":"2021-02-23"},{"lineNumber":134,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-23"},{"lineNumber":135,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":136,"author":{"gitId":"e0260222"},"content":"    /**","lastModifiedDate":"2021-02-24"},{"lineNumber":137,"author":{"gitId":"e0260222"},"content":"     * Sets the {@code Salary} of the {@code Employee} that we are building.","lastModifiedDate":"2021-02-27"},{"lineNumber":138,"author":{"gitId":"e0260222"},"content":"     */","lastModifiedDate":"2021-02-24"},{"lineNumber":139,"author":{"gitId":"e0260222"},"content":"    public EmployeeBuilder withSalary(String salary) {","lastModifiedDate":"2021-02-28"},{"lineNumber":140,"author":{"gitId":"e0260222"},"content":"        this.salary \u003d new Salary(salary);","lastModifiedDate":"2021-02-24"},{"lineNumber":141,"author":{"gitId":"e0260222"},"content":"        return this;","lastModifiedDate":"2021-02-24"},{"lineNumber":142,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-24"},{"lineNumber":143,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":144,"author":{"gitId":"e0260222"},"content":"    public Employee build() {","lastModifiedDate":"2021-02-27"},{"lineNumber":145,"author":{"gitId":"e0260222"},"content":"        return new Employee(name, role, phone, email, address, dateOfBirth, dateOfJoining, salary, tags);","lastModifiedDate":"2021-02-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"e0260222":83,"-":65}},{"path":"src/test/java/employeetracker/testutil/EmployeeTrackerBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.testutil;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.EmployeeTracker;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"/**","lastModifiedDate":"2021-02-20"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":" * A utility class to help with building EmployeeTracker objects.","lastModifiedDate":"2021-02-20"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2021-02-20"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":" *     {@code EmployeeTracker ab \u003d new EmployeeTrackerBuilder().withEmployee(\"John\", \"Doe\").build();}","lastModifiedDate":"2021-02-28"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":" */","lastModifiedDate":"2021-02-20"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"public class EmployeeTrackerBuilder {","lastModifiedDate":"2021-02-20"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":13,"author":{"gitId":"e0260222"},"content":"    private EmployeeTracker employeeTracker;","lastModifiedDate":"2021-02-20"},{"lineNumber":14,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":15,"author":{"gitId":"e0260222"},"content":"    public EmployeeTrackerBuilder() {","lastModifiedDate":"2021-02-20"},{"lineNumber":16,"author":{"gitId":"e0260222"},"content":"        employeeTracker \u003d new EmployeeTracker();","lastModifiedDate":"2021-02-20"},{"lineNumber":17,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-20"},{"lineNumber":18,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":19,"author":{"gitId":"e0260222"},"content":"    public EmployeeTrackerBuilder(EmployeeTracker employeeTracker) {","lastModifiedDate":"2021-02-20"},{"lineNumber":20,"author":{"gitId":"e0260222"},"content":"        this.employeeTracker \u003d employeeTracker;","lastModifiedDate":"2021-02-20"},{"lineNumber":21,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-20"},{"lineNumber":22,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":23,"author":{"gitId":"e0260222"},"content":"    /**","lastModifiedDate":"2021-02-20"},{"lineNumber":24,"author":{"gitId":"e0260222"},"content":"     * Adds a new {@code Employee} to the {@code EmployeeTracker} that we are building.","lastModifiedDate":"2021-02-27"},{"lineNumber":25,"author":{"gitId":"e0260222"},"content":"     */","lastModifiedDate":"2021-02-20"},{"lineNumber":26,"author":{"gitId":"e0260222"},"content":"    public EmployeeTrackerBuilder withEmployee(Employee employee) {","lastModifiedDate":"2021-02-28"},{"lineNumber":27,"author":{"gitId":"e0260222"},"content":"        employeeTracker.addEmployee(employee);","lastModifiedDate":"2021-02-28"},{"lineNumber":28,"author":{"gitId":"e0260222"},"content":"        return this;","lastModifiedDate":"2021-02-20"},{"lineNumber":29,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-20"},{"lineNumber":30,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":31,"author":{"gitId":"e0260222"},"content":"    public EmployeeTracker build() {","lastModifiedDate":"2021-02-20"},{"lineNumber":32,"author":{"gitId":"e0260222"},"content":"        return employeeTracker;","lastModifiedDate":"2021-02-20"},{"lineNumber":33,"author":{"gitId":"e0260222"},"content":"    }","lastModifiedDate":"2021-02-20"},{"lineNumber":34,"author":{"gitId":"e0260222"},"content":"}","lastModifiedDate":"2021-02-20"}],"authorContributionMap":{"e0260222":34}},{"path":"src/test/java/employeetracker/testutil/EmployeeUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.testutil;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_DATE_OF_BIRTH;","lastModifiedDate":"2021-02-23"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_DATE_OF_JOINING;","lastModifiedDate":"2021-02-23"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-02-20"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-02-20"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-02-20"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2021-02-24"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_SALARY;","lastModifiedDate":"2021-02-24"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.commands.AddCommand;","lastModifiedDate":"2021-02-20"},{"lineNumber":16,"author":{"gitId":"e0260222"},"content":"import employeetracker.logic.commands.EditCommand;","lastModifiedDate":"2021-02-28"},{"lineNumber":17,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":18,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.tag.Tag;","lastModifiedDate":"2021-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"e0260222"},"content":" * A utility class for Employee.","lastModifiedDate":"2021-02-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"e0260222"},"content":"public class EmployeeUtil {","lastModifiedDate":"2021-02-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"e0260222"},"content":"     * Returns an add command string for adding the {@code employee}.","lastModifiedDate":"2021-02-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"e0260222"},"content":"    public static String getAddCommand(Employee employee) {","lastModifiedDate":"2021-02-27"},{"lineNumber":29,"author":{"gitId":"e0260222"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getEmployeeDetails(employee);","lastModifiedDate":"2021-02-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"e0260222"},"content":"     * Returns the part of command string for the given {@code employee}\u0027s details.","lastModifiedDate":"2021-02-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"e0260222"},"content":"    public static String getEmployeeDetails(Employee employee) {","lastModifiedDate":"2021-02-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"e0260222"},"content":"        sb.append(PREFIX_NAME + employee.getName().fullName + \" \");","lastModifiedDate":"2021-02-27"},{"lineNumber":38,"author":{"gitId":"e0260222"},"content":"        sb.append(PREFIX_ROLE + employee.getRole().value + \" \");","lastModifiedDate":"2021-02-27"},{"lineNumber":39,"author":{"gitId":"e0260222"},"content":"        sb.append(PREFIX_PHONE + employee.getPhone().value + \" \");","lastModifiedDate":"2021-02-27"},{"lineNumber":40,"author":{"gitId":"e0260222"},"content":"        sb.append(PREFIX_EMAIL + employee.getEmail().value + \" \");","lastModifiedDate":"2021-02-27"},{"lineNumber":41,"author":{"gitId":"e0260222"},"content":"        sb.append(PREFIX_ADDRESS + employee.getAddress().value + \" \");","lastModifiedDate":"2021-02-27"},{"lineNumber":42,"author":{"gitId":"e0260222"},"content":"        sb.append(PREFIX_DATE_OF_BIRTH + employee.getDateOfBirth().value + \" \");","lastModifiedDate":"2021-02-27"},{"lineNumber":43,"author":{"gitId":"e0260222"},"content":"        sb.append(PREFIX_DATE_OF_JOINING + employee.getDateOfJoining().value + \" \");","lastModifiedDate":"2021-02-27"},{"lineNumber":44,"author":{"gitId":"e0260222"},"content":"        sb.append(PREFIX_SALARY + employee.getSalary().value + \" \");","lastModifiedDate":"2021-02-27"},{"lineNumber":45,"author":{"gitId":"e0260222"},"content":"        employee.getTags().stream().forEach(","lastModifiedDate":"2021-02-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"e0260222"},"content":"     * Returns the part of command string for the given {@code EditEmployeeDescriptor}\u0027s details.","lastModifiedDate":"2021-02-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"e0260222"},"content":"    public static String getEditEmployeeDescriptorDetails(EditCommand.EditEmployeeDescriptor descriptor) {","lastModifiedDate":"2021-02-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"e0260222"},"content":"        descriptor.getRole().ifPresent(role -\u003e sb.append(PREFIX_ROLE).append(role.value).append(\" \"));","lastModifiedDate":"2021-02-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"e0260222"},"content":"        descriptor.getDateOfBirth().ifPresent(dateOfBirth -\u003e","lastModifiedDate":"2021-02-23"},{"lineNumber":62,"author":{"gitId":"e0260222"},"content":"                sb.append(PREFIX_DATE_OF_BIRTH).append(dateOfBirth.value).append(\" \"));","lastModifiedDate":"2021-02-23"},{"lineNumber":63,"author":{"gitId":"e0260222"},"content":"        descriptor.getDateOfJoining().ifPresent(dateOfJoining -\u003e","lastModifiedDate":"2021-02-23"},{"lineNumber":64,"author":{"gitId":"e0260222"},"content":"                sb.append(PREFIX_DATE_OF_JOINING).append(dateOfJoining.value).append(\" \"));","lastModifiedDate":"2021-02-23"},{"lineNumber":65,"author":{"gitId":"e0260222"},"content":"        descriptor.getSalary().ifPresent(salary -\u003e sb.append(PREFIX_SALARY).append(salary.value).append(\" \"));","lastModifiedDate":"2021-02-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"e0260222":38,"-":38}},{"path":"src/test/java/employeetracker/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.testutil;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"e0260222":1,"-":71}},{"path":"src/test/java/employeetracker/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.testutil;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.core.index.Index;","lastModifiedDate":"2021-02-20"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.Model;","lastModifiedDate":"2021-02-20"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"e0260222"},"content":"     * Returns the middle index of the employee in the {@code model}\u0027s employee list.","lastModifiedDate":"2021-02-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"e0260222"},"content":"        return Index.fromOneBased(model.getFilteredEmployeeList().size() / 2);","lastModifiedDate":"2021-02-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"e0260222"},"content":"     * Returns the last index of the employee in the {@code model}\u0027s employee list.","lastModifiedDate":"2021-02-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"e0260222"},"content":"        return Index.fromOneBased(model.getFilteredEmployeeList().size());","lastModifiedDate":"2021-02-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"e0260222"},"content":"     * Returns the employee in the {@code model}\u0027s employee list at {@code index}.","lastModifiedDate":"2021-02-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"e0260222"},"content":"    public static Employee getEmployee(Model model, Index index) {","lastModifiedDate":"2021-02-28"},{"lineNumber":53,"author":{"gitId":"e0260222"},"content":"        return model.getFilteredEmployeeList().get(index.getZeroBased());","lastModifiedDate":"2021-02-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"e0260222":11,"-":44}},{"path":"src/test/java/employeetracker/testutil/TypicalEmployees.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.testutil;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-02-24"},{"lineNumber":4,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-02-24"},{"lineNumber":5,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_DATE_OF_BIRTH_AMY;","lastModifiedDate":"2021-02-24"},{"lineNumber":6,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_DATE_OF_BIRTH_BOB;","lastModifiedDate":"2021-02-24"},{"lineNumber":7,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_DATE_OF_JOINING_AMY;","lastModifiedDate":"2021-02-24"},{"lineNumber":8,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_DATE_OF_JOINING_BOB;","lastModifiedDate":"2021-02-24"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-02-24"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-02-24"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-02-24"},{"lineNumber":12,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-02-24"},{"lineNumber":13,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-02-24"},{"lineNumber":14,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-02-24"},{"lineNumber":15,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_ROLE_AMY;","lastModifiedDate":"2021-02-24"},{"lineNumber":16,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_ROLE_BOB;","lastModifiedDate":"2021-02-24"},{"lineNumber":17,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-02-24"},{"lineNumber":18,"author":{"gitId":"e0260222"},"content":"import static employeetracker.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-02-24"},{"lineNumber":19,"author":{"gitId":"e0260222"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.EmployeeTracker;","lastModifiedDate":"2021-02-20"},{"lineNumber":25,"author":{"gitId":"e0260222"},"content":"import employeetracker.model.employee.Employee;","lastModifiedDate":"2021-02-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"e0260222"},"content":" * A utility class containing a list of {@code Employee} objects to be used in tests.","lastModifiedDate":"2021-02-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"e0260222"},"content":"public class TypicalEmployees {","lastModifiedDate":"2021-02-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"e0260222"},"content":"    public static final Employee ALICE \u003d new EmployeeBuilder().withName(\"Alice Pauline\").withRole(\"Finance Manager\")","lastModifiedDate":"2021-02-28"},{"lineNumber":33,"author":{"gitId":"e0260222"},"content":"            .withPhone(\"94351253\").withEmail(\"alice@example.com\").withAddress(\"123, Jurong West Ave 6, #08-111\")","lastModifiedDate":"2021-02-24"},{"lineNumber":34,"author":{"gitId":"e0260222"},"content":"            .withDateOfBirth(\"1988-09-14\").withDateOfJoining(\"2020-02-01\").withSalary(\"6000\")","lastModifiedDate":"2021-02-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":36,"author":{"gitId":"e0260222"},"content":"    public static final Employee BENSON \u003d new EmployeeBuilder().withName(\"Benson Meier\").withRole(\"Project Manager\")","lastModifiedDate":"2021-02-28"},{"lineNumber":37,"author":{"gitId":"e0260222"},"content":"            .withPhone(\"98765432\").withEmail(\"johnd@example.com\").withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2021-02-24"},{"lineNumber":38,"author":{"gitId":"e0260222"},"content":"            .withDateOfBirth(\"1989-11-14\").withDateOfJoining(\"2020-02-01\").withSalary(\"6000\")","lastModifiedDate":"2021-02-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":40,"author":{"gitId":"e0260222"},"content":"    public static final Employee CARL \u003d new EmployeeBuilder().withName(\"Carl Kurz\").withRole(\"System Analyst\")","lastModifiedDate":"2021-02-28"},{"lineNumber":41,"author":{"gitId":"e0260222"},"content":"            .withPhone(\"95352563\").withEmail(\"heinz@example.com\").withAddress(\"wall street\").withSalary(\"6000\")","lastModifiedDate":"2021-02-24"},{"lineNumber":42,"author":{"gitId":"e0260222"},"content":"            .withDateOfBirth(\"1979-09-01\").withDateOfJoining(\"2020-02-01\").build();","lastModifiedDate":"2021-02-24"},{"lineNumber":43,"author":{"gitId":"e0260222"},"content":"    public static final Employee DANIEL \u003d new EmployeeBuilder().withName(\"Daniel Meier\").withRole(\"Account Manager\")","lastModifiedDate":"2021-02-28"},{"lineNumber":44,"author":{"gitId":"e0260222"},"content":"            .withPhone(\"87652533\").withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withSalary(\"6000\")","lastModifiedDate":"2021-02-24"},{"lineNumber":45,"author":{"gitId":"e0260222"},"content":"            .withDateOfBirth(\"1977-01-05\").withDateOfJoining(\"2021-02-01\").withTags(\"friends\").build();","lastModifiedDate":"2021-02-24"},{"lineNumber":46,"author":{"gitId":"e0260222"},"content":"    public static final Employee ELLE \u003d new EmployeeBuilder().withName(\"Elle Meyer\").withRole(\"Developer\")","lastModifiedDate":"2021-02-28"},{"lineNumber":47,"author":{"gitId":"e0260222"},"content":"            .withPhone(\"9482224\").withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withSalary(\"5000\")","lastModifiedDate":"2021-02-24"},{"lineNumber":48,"author":{"gitId":"e0260222"},"content":"            .withDateOfBirth(\"2001-04-11\").withDateOfJoining(\"2021-02-01\").build();","lastModifiedDate":"2021-02-24"},{"lineNumber":49,"author":{"gitId":"e0260222"},"content":"    public static final Employee FIONA \u003d new EmployeeBuilder().withName(\"Fiona Kunz\").withRole(\"Developer\")","lastModifiedDate":"2021-02-28"},{"lineNumber":50,"author":{"gitId":"e0260222"},"content":"            .withPhone(\"9482427\").withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withSalary(\"5000\")","lastModifiedDate":"2021-02-24"},{"lineNumber":51,"author":{"gitId":"e0260222"},"content":"            .withDateOfBirth(\"2000-08-29\").withDateOfJoining(\"2021-02-01\").build();","lastModifiedDate":"2021-02-24"},{"lineNumber":52,"author":{"gitId":"e0260222"},"content":"    public static final Employee GEORGE \u003d new EmployeeBuilder().withName(\"George Best\").withRole(\"Developer\")","lastModifiedDate":"2021-02-28"},{"lineNumber":53,"author":{"gitId":"e0260222"},"content":"            .withPhone(\"9482442\").withEmail(\"anna@example.com\").withAddress(\"4th street\").withSalary(\"5000\")","lastModifiedDate":"2021-02-24"},{"lineNumber":54,"author":{"gitId":"e0260222"},"content":"            .withDateOfBirth(\"1981-03-16\").withDateOfJoining(\"2020-03-01\").build();","lastModifiedDate":"2021-02-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":57,"author":{"gitId":"e0260222"},"content":"    public static final Employee HOON \u003d new EmployeeBuilder().withName(\"Hoon Meier\").withRole(\"Developer\")","lastModifiedDate":"2021-02-28"},{"lineNumber":58,"author":{"gitId":"e0260222"},"content":"            .withPhone(\"8482424\").withEmail(\"stefan@example.com\").withAddress(\"little india\").withSalary(\"6000\")","lastModifiedDate":"2021-02-24"},{"lineNumber":59,"author":{"gitId":"e0260222"},"content":"            .withDateOfBirth(\"2002-01-01\").withDateOfJoining(\"2020-02-01\").build();","lastModifiedDate":"2021-02-24"},{"lineNumber":60,"author":{"gitId":"e0260222"},"content":"    public static final Employee IDA \u003d new EmployeeBuilder().withName(\"Ida Mueller\").withRole(\"Project Manager\")","lastModifiedDate":"2021-02-28"},{"lineNumber":61,"author":{"gitId":"e0260222"},"content":"            .withPhone(\"8482131\").withEmail(\"hans@example.com\").withAddress(\"chicago ave\").withSalary(\"6000\")","lastModifiedDate":"2021-02-24"},{"lineNumber":62,"author":{"gitId":"e0260222"},"content":"            .withDateOfBirth(\"1974-03-09\").withDateOfJoining(\"2020-02-01\").build();","lastModifiedDate":"2021-02-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":64,"author":{"gitId":"e0260222"},"content":"    // Manually added - Employee\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-02-27"},{"lineNumber":65,"author":{"gitId":"e0260222"},"content":"    public static final Employee AMY \u003d new EmployeeBuilder().withName(VALID_NAME_AMY).withRole(VALID_ROLE_AMY)","lastModifiedDate":"2021-02-28"},{"lineNumber":66,"author":{"gitId":"e0260222"},"content":"            .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2021-02-24"},{"lineNumber":67,"author":{"gitId":"e0260222"},"content":"            .withDateOfBirth(VALID_DATE_OF_BIRTH_AMY).withDateOfJoining(VALID_DATE_OF_JOINING_AMY)","lastModifiedDate":"2021-02-24"},{"lineNumber":68,"author":{"gitId":"e0260222"},"content":"            .withSalary(\"6000\").withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-02-24"},{"lineNumber":69,"author":{"gitId":"e0260222"},"content":"    public static final Employee BOB \u003d new EmployeeBuilder().withName(VALID_NAME_BOB).withRole(VALID_ROLE_BOB)","lastModifiedDate":"2021-02-28"},{"lineNumber":70,"author":{"gitId":"e0260222"},"content":"            .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-02-24"},{"lineNumber":71,"author":{"gitId":"e0260222"},"content":"            .withDateOfBirth(VALID_DATE_OF_BIRTH_BOB).withDateOfJoining(VALID_DATE_OF_JOINING_BOB)","lastModifiedDate":"2021-02-24"},{"lineNumber":72,"author":{"gitId":"e0260222"},"content":"            .withSalary(\"6500\").withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-02-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":76,"author":{"gitId":"e0260222"},"content":"    private TypicalEmployees() {} // prevents instantiation","lastModifiedDate":"2021-02-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"e0260222"},"content":"     * Returns an {@code EmployeeTracker} with all the typical persons.","lastModifiedDate":"2021-02-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"e0260222"},"content":"    public static EmployeeTracker getTypicalEmployeeTracker() {","lastModifiedDate":"2021-02-20"},{"lineNumber":82,"author":{"gitId":"e0260222"},"content":"        EmployeeTracker ab \u003d new EmployeeTracker();","lastModifiedDate":"2021-02-20"},{"lineNumber":83,"author":{"gitId":"e0260222"},"content":"        for (Employee employee : getTypicalEmployees()) {","lastModifiedDate":"2021-02-28"},{"lineNumber":84,"author":{"gitId":"e0260222"},"content":"            ab.addEmployee(employee);","lastModifiedDate":"2021-02-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":89,"author":{"gitId":"e0260222"},"content":"    public static List\u003cEmployee\u003e getTypicalEmployees() {","lastModifiedDate":"2021-02-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"e0260222":65,"-":27}},{"path":"src/test/java/employeetracker/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.testutil;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import employeetracker.commons.core.index.Index;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"e0260222"},"content":"    public static final Index INDEX_FIRST_EMPLOYEE \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-02-28"},{"lineNumber":10,"author":{"gitId":"e0260222"},"content":"    public static final Index INDEX_SECOND_EMPLOYEE \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-02-28"},{"lineNumber":11,"author":{"gitId":"e0260222"},"content":"    public static final Index INDEX_THIRD_EMPLOYEE \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-02-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"e0260222":5,"-":7}},{"path":"src/test/java/employeetracker/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.ui;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"e0260222":1,"-":34}},{"path":"src/test/java/employeetracker/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0260222"},"content":"package employeetracker.ui;","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"import static employeetracker.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"e0260222"},"content":"import employeetracker.MainApp;","lastModifiedDate":"2021-02-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-02-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"e0260222":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"\u003c?import employeetracker.ui.TestFxmlObject?\u003e","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"e0260222":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"e0260222"},"content":"\u003cfx:root type\u003d\"employeetracker.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"e0260222":1,"-":5}}]

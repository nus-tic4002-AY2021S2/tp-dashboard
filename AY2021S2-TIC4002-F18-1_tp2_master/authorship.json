[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"# Police Address Book","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"[![CI Status](https://github.com/AY2021S2-TIC4002-F18-1/tp2/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-TIC4002-F18-1/tp2/actions)","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"* **Police Address Book (PAB)** is a desktop app meant for Police Investigation Officers, optimized for use via a Command Line Interface (CLI) with a Graphical User Interface (GUI).","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"* It is designed to help them manage their investigation cases better by reminding them on which people to call, automatically rescheduling follow up calls and assisting in sending case detail emails to colleagues or call notification emails to people in the contact list.","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"  ","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"* Detailed documentation of this project can be found in the **[Police Address Book Website](https://ay2021s2-tic4002-f18-1.github.io/tp2/)**.","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"  ","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* This project is a **part of the se-education.org** initiative. If you would like to contribute code to this project, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-10"}],"authorContributionMap":{"Impala36":9,"-":5}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"linqing42"},"content":"run {","lastModifiedDate":"2021-03-20"},{"lineNumber":44,"author":{"gitId":"linqing42"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-20"},{"lineNumber":45,"author":{"gitId":"linqing42"},"content":"}","lastModifiedDate":"2021-03-20"},{"lineNumber":46,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":49,"author":{"gitId":"binbinhui"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2021-02-28"},{"lineNumber":50,"author":{"gitId":"binbinhui"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2021-02-28"},{"lineNumber":51,"author":{"gitId":"binbinhui"},"content":"    // https://mvnrepository.com/artifact/com.sun.mail/javax.mail","lastModifiedDate":"2021-02-28"},{"lineNumber":52,"author":{"gitId":"binbinhui"},"content":"    compile group: \u0027com.sun.mail\u0027, name: \u0027javax.mail\u0027, version: \u00271.6.2\u0027","lastModifiedDate":"2021-02-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":78,"author":{"gitId":"Impala36"},"content":"    archiveName \u003d \u0027PoliceAddressBook.jar\u0027","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"linqing42":4,"Impala36":1,"-":71,"binbinhui":5}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":"### Lin Qing","lastModifiedDate":"2021-02-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"linqing42"},"content":"\u003cimg src\u003d\"images/linqing42.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"linqing42"},"content":"[[github](https://github.com/linqing42/tp2)]","lastModifiedDate":"2021-02-20"},{"lineNumber":15,"author":{"gitId":"linqing42"},"content":"[[portfolio](team/linqing.md)]","lastModifiedDate":"2021-02-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"linqing42"},"content":"* Role: Team member","lastModifiedDate":"2021-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"### Wang Zhenquan","lastModifiedDate":"2021-02-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"\u003cimg src\u003d\"images/impala36.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"[[github](http://github.com/impala36/tp2)]","lastModifiedDate":"2021-02-20"},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"[[portfolio](team/zhenquan.md)]","lastModifiedDate":"2021-02-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"linqing42"},"content":"* Role: Team member","lastModifiedDate":"2021-02-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"### Lin Binhui","lastModifiedDate":"2021-02-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"\u003cimg src\u003d\"images/binbinhui.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"[[github](http://github.com/binbinhui/tp2)]","lastModifiedDate":"2021-02-21"},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"[[portfolio](team/binhui.md)]","lastModifiedDate":"2021-02-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"* Role: Team member","lastModifiedDate":"2021-02-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"Yiheng0410"},"content":"### Zheng Yiheng","lastModifiedDate":"2021-02-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"Impala36"},"content":"\u003cimg src\u003d\"images/yiheng0410.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"Yiheng0410"},"content":"[[github](https://github.com/Yiheng0410/tp2)]","lastModifiedDate":"2021-02-21"},{"lineNumber":42,"author":{"gitId":"Yiheng0410"},"content":"[[portfolio](team/yiheng.md)]","lastModifiedDate":"2021-02-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"Yiheng0410"},"content":"* Role: Team member","lastModifiedDate":"2021-02-21"}],"authorContributionMap":{"linqing42":6,"Impala36":5,"Yiheng0410":4,"-":24,"binbinhui":5}},{"path":"docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: DevOps guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Build automation","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2020-06-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2020-05-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  e.g. `./gradlew clean`","lastModifiedDate":"2020-05-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **`shadowJar`**: Uses the ShadowJar plugin to creat a fat JAR file in the `build/lib` folder, *if the current file is outdated*.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  e.g. `./gradlew shadowJar`.","lastModifiedDate":"2020-05-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","lastModifiedDate":"2020-05-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","lastModifiedDate":"2020-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **`test`**: Runs all tests.\u003c","lastModifiedDate":"2020-05-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * `./gradlew test` — Runs all tests","lastModifiedDate":"2020-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * `./gradlew clean test` — Cleans the project and runs tests","lastModifiedDate":"2020-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Continuous integration (CI)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in the `.github/workflows` folder). No further setting up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### Code coverage","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"As part of CI, this project uses Codecov to generate coverage reports. Here are the steps to set up CodeCov for a fork of this repository.","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"1. Sign up with Codecov using your GitHub account [here](https://codecov.io/signup).","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Once you are inside Codecov web app, add your fork to CodeCov.","lastModifiedDate":"2020-08-07"},{"lineNumber":47,"author":{"gitId":"Impala36"},"content":"1. Get the Markdown code for the Codecov badge provided in `Settings \u003e Badges` and update the `docs/index.md` of your repo with it so that the badge [![codecov](https://codecov.io/gh/AY2021S2-TIC4002-F18-1/tp2/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2021S2-TIC4002-F18-1/tp2) in that page reflects the coverage of your project.","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"### Repository-wide checks","lastModifiedDate":"2020-07-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover all files in the repository. They check for repository rules which are hard to enforce on development machines such as line ending requirements.","lastModifiedDate":"2020-07-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root directory:","lastModifiedDate":"2020-07-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"`./config/travis/run-checks.sh`","lastModifiedDate":"2020-07-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2020-07-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"**If adding new checks:**","lastModifiedDate":"2020-07-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will automatically pick up and run files named as such. That is, you can add more such files if you need and the CI will do the rest.","lastModifiedDate":"2020-07-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`","lastModifiedDate":"2020-07-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  * SEVERITY is either ERROR or WARN.","lastModifiedDate":"2020-07-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  * FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2020-07-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  * LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","lastModifiedDate":"2020-07-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2020-07-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"## Making a release","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"Impala36"},"content":"1. Update the version number in [`MainApp.java`](https://github.com/AY2021S2-TIC4002-F18-1/tp2/tree/master/src/main/java/seedu/address/MainApp.java).","lastModifiedDate":"2021-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"1. Generate a fat JAR file using Gradle (i.e., `gradlew shadow`).","lastModifiedDate":"2020-05-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"1. Tag the repo with the version number. e.g. `v0.1`","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"1. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created.","lastModifiedDate":"2020-05-26"}],"authorContributionMap":{"Impala36":2,"-":77}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App. Given below is a quick overview of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2021S2-TIC4002-F18-1/tp2/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2021S2-TIC4002-F18-1/tp2/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2021S2-TIC4002-F18-1/tp2/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Each of the four components,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* exposes its functionality using a concrete `{Component Name}Manager` class (which implements the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"For example, the `Logic` component (see the class diagram given below) defines its API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class which implements the `Logic` interface.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"![Class Diagram of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"linqing42"},"content":"The *Sequence Diagrams* below show how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2021-03-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"Impala36"},"content":"[`Ui.java`](https://github.com/AY2021S2-TIC4002-F18-1/tp2/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"Impala36"},"content":"The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2021S2-TIC4002-F18-1/tp2/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2021S2-TIC4002-F18-1/tp2/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* Executes user commands using the `Logic` component.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"* Listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"![Structure of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"Impala36"},"content":"[`Logic.java`](https://github.com/AY2021S2-TIC4002-F18-1/tp2/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"1. `Logic` uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"1. This results in a `Command` object which is executed by the `LogicManager`.","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"1. The command execution can affect the `Model` (e.g. adding a person).","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"1. In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"![Structure of the Model Component](images/ModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"Impala36"},"content":"**API** : [`Model.java`](https://github.com/AY2021S2-TIC4002-F18-1/tp2/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2021-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"The `Model`,","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"* stores the address book data.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"* exposes an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components.","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"linqing42"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An example of alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique `Tag`, instead of each `Person` needing their own `Tag` object.\u003cbr\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":112,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"![BetterModelClassDiagram](images/BetterModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"![Structure of the Storage Component](images/StorageClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"Impala36"},"content":"**API** : [`Storage.java`](https://github.com/AY2021S2-TIC4002-F18-1/tp2/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2021-03-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* can save `UserPref` objects in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* can save the address book data in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"linqing42"},"content":"### Add feature","lastModifiedDate":"2021-03-20"},{"lineNumber":137,"author":{"gitId":"linqing42"},"content":"The `AddCommand` feature allows the user to add a new person and save it to the address book.","lastModifiedDate":"2021-03-20"},{"lineNumber":138,"author":{"gitId":"Impala36"},"content":"#### Implementation","lastModifiedDate":"2021-03-19"},{"lineNumber":139,"author":{"gitId":"linqing42"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"add n/John Doe d/22-02-2021 i/S2731125H p/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25 de/This man stole 3 times r/shop theft t/NeverCalled\")` API call.","lastModifiedDate":"2021-03-20"},{"lineNumber":140,"author":{"gitId":"linqing42"},"content":"![Interactions Inside the Logic Component for the `add n/John Doe d/22-02-2021 i/S2731125H p/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25 de/This man stole 3 times r/shop theft t/NeverCalled` Command](images/AddCommandSequenceDiagram.png)","lastModifiedDate":"2021-03-20"},{"lineNumber":141,"author":{"gitId":"linqing42"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `AddCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-03-20"},{"lineNumber":142,"author":{"gitId":"linqing42"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":143,"author":{"gitId":"linqing42"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":144,"author":{"gitId":"linqing42"},"content":"The following activity diagram summarizes what happens when a user executes addCommand feature:","lastModifiedDate":"2021-03-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":146,"author":{"gitId":"linqing42"},"content":"![AddCommandActivityDiagram](images/AddCommandActivityDiagram.png)","lastModifiedDate":"2021-03-20"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"linqing42"},"content":"The `add` command facilitated by `AddClaimCommand`which extends the `Command` class and the `AddCommandParser` class, which implements the `Parser` class.","lastModifiedDate":"2021-03-20"},{"lineNumber":150,"author":{"gitId":"linqing42"},"content":"This operation takes in a String input from the user that will create `Person` objects based on the following prefixes and parameters:","lastModifiedDate":"2021-03-20"},{"lineNumber":151,"author":{"gitId":"linqing42"},"content":"n/`name`, d/`date`, i/`nric`, p/`phone`, e/`email`, a/`address` , de/`description` , r/`remark` , t/`tag`.  ","lastModifiedDate":"2021-03-20"},{"lineNumber":152,"author":{"gitId":"linqing42"},"content":"Meanwhile, the r/`remark` and t/`tag` are not compulsory to include.","lastModifiedDate":"2021-03-20"},{"lineNumber":153,"author":{"gitId":"linqing42"},"content":"A regex validation check will be imposed upon the creation. Any checks that fails the validation would display an error message to guide the user.","lastModifiedDate":"2021-03-20"},{"lineNumber":154,"author":{"gitId":"linqing42"},"content":"Parameters will be checked whether they are valid:","lastModifiedDate":"2021-03-20"},{"lineNumber":155,"author":{"gitId":"linqing42"},"content":"* `name` uses `Name#isValidName()` to ensure that name only contain alphanumeric characters and spaces, and it should not be blank.","lastModifiedDate":"2021-03-20"},{"lineNumber":156,"author":{"gitId":"linqing42"},"content":"* `nric` uses `Nric#isValidNric()` to ensure that nric only contain a capital letter,it should start with S, T, F or G,followed by 7 numerical numbers and a capital letter with alphabetical character. It should not be blank.","lastModifiedDate":"2021-03-20"},{"lineNumber":157,"author":{"gitId":"linqing42"},"content":"* `date` uses `Date#isValidDate()` to ensure that date should follow date format \u0027dd-mm-yyyy\u0027 and it should be a valid calendar date.","lastModifiedDate":"2021-03-20"},{"lineNumber":158,"author":{"gitId":"linqing42"},"content":"* `phone` uses `Phone#isValidPhone()` to ensure that phone numbers should only contain numbers, and it should be at least 3 digits long.","lastModifiedDate":"2021-03-20"},{"lineNumber":159,"author":{"gitId":"linqing42"},"content":"* `email` uses `Email#isValidEmail()` to ensure correct email format.","lastModifiedDate":"2021-03-20"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":161,"author":{"gitId":"linqing42"},"content":"Upon receiving a user command that has `add` as the first word, the following object interactions will occur, resulting in the instantiation of an `AddCommand` object:","lastModifiedDate":"2021-03-20"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"linqing42"},"content":"1. `MainWindow` object calls `LogicManager#execute(input)`, where `input` is the user\u0027s input string;","lastModifiedDate":"2021-03-20"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"linqing42"},"content":"2. `LogicManager` object calls `AddressBookParser#parseCommand(commandText)` to parse the user command, where `commandText` is the user\u0027s input string;","lastModifiedDate":"2021-03-20"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"linqing42"},"content":"3. `AddressBookParser#parseCommand()` calls `AddCommandParser#parse(arguments)`, where `arguments` are the parameters in `commandText` such as `i/NRIC`;","lastModifiedDate":"2021-03-20"},{"lineNumber":168,"author":{"gitId":"linqing42"},"content":"In this case, `AddClaimCommandParser#parse()`is being created, and the user\u0027s input will be passed in as a parameter.","lastModifiedDate":"2021-03-20"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"linqing42"},"content":"4. `AddCommandParser#parse()` will do a validation check on the user\u0027s input before creating and returning a`AddCommand` object with `Person` as its attribute.calls ","lastModifiedDate":"2021-03-20"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"linqing42"},"content":"Next, the following object interactions will occur to save the new person information to the `Model` object;","lastModifiedDate":"2021-03-20"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"linqing42"},"content":"1. `LogicManager` object calls `AddCommand#execute(model)`, where `model` is the `Model` object and checking whether there is an existing Person","lastModifiedDate":"2021-03-20"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"linqing42"},"content":"2. `AddCommand#execute()` calls `Model#addPerson(toAdd)` to add the new `Person`, where `toAdd` is the `Person` object to be stored.","lastModifiedDate":"2021-03-20"},{"lineNumber":177,"author":{"gitId":"linqing42"},"content":"It will return a `CommandResult` to the `LogicManager` that will return to user.","lastModifiedDate":"2021-03-20"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"linqing42"},"content":"### Follow up Calls feature","lastModifiedDate":"2021-03-20"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"linqing42"},"content":"#### Implementation","lastModifiedDate":"2021-03-20"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"linqing42"},"content":"This feature is meant to assist the Investigations Officer by reminding which persons are to be called up on the day itself, by showing a notification icon and a message.","lastModifiedDate":"2021-03-20"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"linqing42"},"content":"The following activity diagram summarizes what happens when a user opens the application:","lastModifiedDate":"2021-03-20"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"Impala36"},"content":"![CallTodayActivityDiagram](images/CallTodayActivityDiagram.png)","lastModifiedDate":"2021-03-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"![CommitActivityDiagram](images/CommitActivityDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"Yiheng0410"},"content":"### Add/Remove Tag feature","lastModifiedDate":"2021-03-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"Yiheng0410"},"content":"This feature provides an alternative way for the uer to add/remove a specified tag.","lastModifiedDate":"2021-03-25"},{"lineNumber":197,"author":{"gitId":"Yiheng0410"},"content":"The Edit tag feature `edit t/[Tag]` will overwrite the entire set of tags. ","lastModifiedDate":"2021-03-25"},{"lineNumber":198,"author":{"gitId":"Yiheng0410"},"content":"In other words, if there are few tags, and user only wants to udpate a specified tag, the user will need to re-enter all the tags in the `edit t/[Tag]` command, which is tedious and time consuming.","lastModifiedDate":"2021-03-25"},{"lineNumber":199,"author":{"gitId":"Yiheng0410"},"content":"With the `Add/Remove Tag feature`, the user will be able to remove a specified tag and add in a new tag, or just simply add in a new tag directly.","lastModifiedDate":"2021-03-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":201,"author":{"gitId":"Yiheng0410"},"content":"#### Implementation","lastModifiedDate":"2021-03-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":203,"author":{"gitId":"Yiheng0410"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"addTag 1 at/CalledOnce\") and execute(\"removeTag 1 at/CalledOnce\")` API call.","lastModifiedDate":"2021-03-25"},{"lineNumber":204,"author":{"gitId":"Yiheng0410"},"content":"![Interactions Inside the Logic Component for the `execute(\"addTag 1 at/CalledOnce\")` Command](images/AddTagCommandSequenceDiagram.png)","lastModifiedDate":"2021-03-25"},{"lineNumber":205,"author":{"gitId":"Yiheng0410"},"content":"![Interactions Inside the Logic Component for the `execute(\"removeTag 1 at/CalledOnce\")` Command](images/RemoveTagCommandSequenceDiagram.png)","lastModifiedDate":"2021-03-25"},{"lineNumber":206,"author":{"gitId":"Yiheng0410"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `AddTagCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-03-25"},{"lineNumber":207,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":208,"author":{"gitId":"Yiheng0410"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"#### Design consideration:","lastModifiedDate":"2021-03-20"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"linqing42"},"content":"##### Aspect: How add command executes","lastModifiedDate":"2021-03-20"},{"lineNumber":213,"author":{"gitId":"linqing42"},"content":"* **Alternative 1 (current choice):** unique NRIC, phone number or email to the entire address book.","lastModifiedDate":"2021-03-20"},{"lineNumber":214,"author":{"gitId":"linqing42"},"content":"  * Pros: Since each person have unique NRIC, phone number or email, it can easily be retrieved from `UniquePersonList`.","lastModifiedDate":"2021-03-20"},{"lineNumber":215,"author":{"gitId":"linqing42"},"content":"  This will reduce coupling when the person is to be updated.","lastModifiedDate":"2021-03-20"},{"lineNumber":216,"author":{"gitId":"linqing42"},"content":"  * Cons: Every time we retrieve a person using its `Nric`,`phone number` or `email`, we have to search through the whole `UniquePersonList` to find","lastModifiedDate":"2021-03-20"},{"lineNumber":217,"author":{"gitId":"linqing42"},"content":"          the associated person. As the list gets bigger, this may take more time.","lastModifiedDate":"2021-03-20"},{"lineNumber":218,"author":{"gitId":"linqing42"},"content":"          ","lastModifiedDate":"2021-03-20"},{"lineNumber":219,"author":{"gitId":"linqing42"},"content":"* **Alternative 2 :** unique name to the entire address book","lastModifiedDate":"2021-03-20"},{"lineNumber":220,"author":{"gitId":"linqing42"},"content":"  * Pros: Since each person have unique name, it can easily be retrieved from `UniquePersonList`.","lastModifiedDate":"2021-03-20"},{"lineNumber":221,"author":{"gitId":"linqing42"},"content":"  * Cons: There may be a person that have the same name in the world.Therefore, it will have \"fake\" duplicate issue.","lastModifiedDate":"2021-03-20"},{"lineNumber":222,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":223,"author":{"gitId":"linqing42"},"content":"  \u003cbr\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":224,"author":{"gitId":"linqing42"},"content":"  We have decided to opt for the first option primarily because it reduces the number of potential bugs such as \"fake\" duplication issue ","lastModifiedDate":"2021-03-20"},{"lineNumber":225,"author":{"gitId":"linqing42"},"content":"  and the complexities involved. Moreover, the implementation is still fast enough for small-scale organisations to pick up our app and use it, minimising the cons.","lastModifiedDate":"2021-03-20"},{"lineNumber":226,"author":{"gitId":"linqing42"},"content":"  ","lastModifiedDate":"2021-03-20"},{"lineNumber":227,"author":{"gitId":"linqing42"},"content":"##### Aspect: How delete command executes","lastModifiedDate":"2021-03-20"},{"lineNumber":228,"author":{"gitId":"linqing42"},"content":"* **Alternative 1 (current choice):** deleting by index","lastModifiedDate":"2021-03-20"},{"lineNumber":229,"author":{"gitId":"linqing42"},"content":"  * Pros: Since each person\u0027s information has a unique index, any deletion by the index is less prone to bugs and easier to implement.","lastModifiedDate":"2021-03-20"},{"lineNumber":230,"author":{"gitId":"linqing42"},"content":"  * Cons: User will have to scroll the list for the data entry and look for its index which can be inconvenient.","lastModifiedDate":"2021-03-20"},{"lineNumber":231,"author":{"gitId":"linqing42"},"content":"          ","lastModifiedDate":"2021-03-20"},{"lineNumber":232,"author":{"gitId":"linqing42"},"content":"* **Alternative 2 :** deleting by NRIC","lastModifiedDate":"2021-03-20"},{"lineNumber":233,"author":{"gitId":"linqing42"},"content":"  * Pros: Since each person have unique NRIC, any deletion by the NRIC is less prone to bugs.","lastModifiedDate":"2021-03-20"},{"lineNumber":234,"author":{"gitId":"linqing42"},"content":"  * Cons: User will need to remember the specific person\u0027s NRIC, it is very inconvenient to user.","lastModifiedDate":"2021-03-20"},{"lineNumber":235,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":236,"author":{"gitId":"linqing42"},"content":"  \u003cbr\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":237,"author":{"gitId":"linqing42"},"content":"  We have decided to opt for the first option primarily because it is more convenient to the user as compare to alternative 2. ","lastModifiedDate":"2021-03-20"},{"lineNumber":238,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"Impala36"},"content":"**Target user profile**: Police Investigation Officer","lastModifiedDate":"2021-02-20"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"Impala36"},"content":"* has a need to record contact details, case description and report number","lastModifiedDate":"2021-02-20"},{"lineNumber":260,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"Impala36"},"content":"**Value proposition**: Helps to remind which people to call, helps to auto reschedule follow up calls, able to update a person\u0027s information and add own notes after a call","lastModifiedDate":"2021-02-20"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"| `* * *`  | new user | see usage instructions         | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"Impala36"},"content":"| `* * *`  | user | add a new person               | record new cases                                                                       |","lastModifiedDate":"2021-02-20"},{"lineNumber":276,"author":{"gitId":"-"},"content":"| `* * *`  | user | delete a person                | remove entries that I no longer need                                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"linqing42"},"content":"| `* * *`  | user | list all person\u0027s information          | view all my person\u0027s information|","lastModifiedDate":"2021-03-03"},{"lineNumber":278,"author":{"gitId":"linqing42"},"content":"| `* * *`  | police officer | edit a person\u0027s information        | modify a person\u0027s information|","lastModifiedDate":"2021-03-03"},{"lineNumber":279,"author":{"gitId":"linqing42"},"content":"| `* * *`  | police officer | clear all person\u0027s information       | start afresh with the app|","lastModifiedDate":"2021-03-03"},{"lineNumber":280,"author":{"gitId":"Impala36"},"content":"| `* * *`  | police officer | have an NRIC field         | easily find the unique person |","lastModifiedDate":"2021-02-20"},{"lineNumber":281,"author":{"gitId":"Impala36"},"content":"| `* * *`  | police officer | add remarks to a case         | record my own notes after a call |","lastModifiedDate":"2021-02-21"},{"lineNumber":282,"author":{"gitId":"Impala36"},"content":"| `* * *`  | police officer | find a person by field         | easily locate details of persons with any bit of information I can remember |","lastModifiedDate":"2021-02-20"},{"lineNumber":283,"author":{"gitId":"Impala36"},"content":"| `* * *`  | police officer | have a date for each case         | know when the case occurred |","lastModifiedDate":"2021-02-20"},{"lineNumber":284,"author":{"gitId":"Impala36"},"content":"| `* * *`  | police officer | have a description for each case      | see the details of the person and the case for follow up in future |","lastModifiedDate":"2021-02-20"},{"lineNumber":285,"author":{"gitId":"Impala36"},"content":"| `* * *`  | police officer | set time intervals           | be reminded to give a follow up call |","lastModifiedDate":"2021-02-20"},{"lineNumber":286,"author":{"gitId":"Impala36"},"content":"| `* *`  | police officer | have no repeated data           | avoid duplicate entries (check by phone number or NRIC) |","lastModifiedDate":"2021-02-20"},{"lineNumber":287,"author":{"gitId":"Impala36"},"content":"| `* *`  | police officer | have an email field           | still contact the person in another way in case no one answers the phone |","lastModifiedDate":"2021-02-20"},{"lineNumber":288,"author":{"gitId":"Impala36"},"content":"| `*`    | police officer | have a better GUI display of information           | easily see the details of each person and their case |","lastModifiedDate":"2021-02-20"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"Impala36"},"content":"(For all use cases below, the **System** is the `Police Address Book` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-02-20"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"Impala36"},"content":"**Use case: Add a person**","lastModifiedDate":"2021-02-20"},{"lineNumber":295,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":296,"author":{"gitId":"Impala36"},"content":"1.  User attempts to add a person","lastModifiedDate":"2021-02-20"},{"lineNumber":297,"author":{"gitId":"Impala36"},"content":"2.  Police Address Book adds the person","lastModifiedDate":"2021-02-20"},{"lineNumber":298,"author":{"gitId":"Impala36"},"content":"3.  Police Address Book shows the new person in the list","lastModifiedDate":"2021-02-20"},{"lineNumber":299,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":300,"author":{"gitId":"Impala36"},"content":"    Use case ends.","lastModifiedDate":"2021-02-20"},{"lineNumber":301,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":302,"author":{"gitId":"Impala36"},"content":"**Extensions**","lastModifiedDate":"2021-02-20"},{"lineNumber":303,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":304,"author":{"gitId":"Impala36"},"content":"* 1a. There are missing fields.","lastModifiedDate":"2021-02-20"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"Impala36"},"content":"    * 1a1. Police Address Book shows an error message and an example.","lastModifiedDate":"2021-02-20"},{"lineNumber":307,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":308,"author":{"gitId":"Impala36"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-02-20"},{"lineNumber":309,"author":{"gitId":"Impala36"},"content":"    ","lastModifiedDate":"2021-02-20"},{"lineNumber":310,"author":{"gitId":"Impala36"},"content":"* 2a. There are duplicate entries.","lastModifiedDate":"2021-02-20"},{"lineNumber":311,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":312,"author":{"gitId":"Impala36"},"content":"    * 2a1. Police Address Book shows an error message.","lastModifiedDate":"2021-02-20"},{"lineNumber":313,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":314,"author":{"gitId":"Impala36"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-02-20"},{"lineNumber":315,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":316,"author":{"gitId":"Impala36"},"content":"**Use case: Find a person**","lastModifiedDate":"2021-02-20"},{"lineNumber":317,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":318,"author":{"gitId":"Impala36"},"content":"1.  User find a person by field","lastModifiedDate":"2021-02-20"},{"lineNumber":319,"author":{"gitId":"Impala36"},"content":"2.  Police Address Book shows a list of matching persons","lastModifiedDate":"2021-02-20"},{"lineNumber":320,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":321,"author":{"gitId":"Impala36"},"content":"    Use case ends.","lastModifiedDate":"2021-02-20"},{"lineNumber":322,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":323,"author":{"gitId":"Impala36"},"content":"**Extensions**","lastModifiedDate":"2021-02-20"},{"lineNumber":324,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":325,"author":{"gitId":"Impala36"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-02-20"},{"lineNumber":326,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":327,"author":{"gitId":"Impala36"},"content":"  Use case ends.","lastModifiedDate":"2021-02-20"},{"lineNumber":328,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":329,"author":{"gitId":"Impala36"},"content":"* 2b. There are no matching results.","lastModifiedDate":"2021-02-20"},{"lineNumber":330,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":331,"author":{"gitId":"Impala36"},"content":"    * 2b1. Police Address Book shows nothing.","lastModifiedDate":"2021-02-20"},{"lineNumber":332,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":333,"author":{"gitId":"Impala36"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-02-20"},{"lineNumber":334,"author":{"gitId":"Impala36"},"content":"    ","lastModifiedDate":"2021-02-20"},{"lineNumber":335,"author":{"gitId":"Impala36"},"content":"* 2c. The given field is invalid.","lastModifiedDate":"2021-02-20"},{"lineNumber":336,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":337,"author":{"gitId":"Impala36"},"content":"    * 2b1. Police Address Book shows an error message.","lastModifiedDate":"2021-02-20"},{"lineNumber":338,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":339,"author":{"gitId":"Impala36"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-02-20"},{"lineNumber":340,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":341,"author":{"gitId":"Impala36"},"content":"**Use case: Delete a person**","lastModifiedDate":"2021-02-20"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"Impala36"},"content":"2.  Police Address Book shows a list of persons","lastModifiedDate":"2021-02-20"},{"lineNumber":345,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"Impala36"},"content":"4.  Police Address Book deletes the person","lastModifiedDate":"2021-02-20"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"Impala36"},"content":"    * 3a1. Police Address Book shows an error message.","lastModifiedDate":"2021-02-20"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"linqing42"},"content":"**Use case: Edit a person**","lastModifiedDate":"2021-03-07"},{"lineNumber":363,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":364,"author":{"gitId":"linqing42"},"content":"1.  User requests to list persons","lastModifiedDate":"2021-03-07"},{"lineNumber":365,"author":{"gitId":"linqing42"},"content":"2.  Police Address Book shows a list of persons","lastModifiedDate":"2021-03-07"},{"lineNumber":366,"author":{"gitId":"linqing42"},"content":"3.  User requests to edit a specific person in the list","lastModifiedDate":"2021-03-07"},{"lineNumber":367,"author":{"gitId":"linqing42"},"content":"4.  Police Address Book update the person\u0027s information","lastModifiedDate":"2021-03-07"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2021-03-07"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":371,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-03-07"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":373,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-03-07"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":375,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2021-03-07"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":377,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-03-07"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":379,"author":{"gitId":"linqing42"},"content":"    * 3a1. Police Address Book shows an error message.","lastModifiedDate":"2021-03-07"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":381,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-03-07"},{"lineNumber":382,"author":{"gitId":"linqing42"},"content":"      ","lastModifiedDate":"2021-03-07"},{"lineNumber":383,"author":{"gitId":"linqing42"},"content":"**Use case: Send email to person**","lastModifiedDate":"2021-03-07"},{"lineNumber":384,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":385,"author":{"gitId":"linqing42"},"content":"1.  User requests to list persons","lastModifiedDate":"2021-03-07"},{"lineNumber":386,"author":{"gitId":"linqing42"},"content":"2.  Police Address Book shows a list of persons","lastModifiedDate":"2021-03-07"},{"lineNumber":387,"author":{"gitId":"linqing42"},"content":"3.  User requests to send a specific email address to specific person in the list","lastModifiedDate":"2021-03-07"},{"lineNumber":388,"author":{"gitId":"linqing42"},"content":"4.  Police Address Book will show a response message","lastModifiedDate":"2021-03-07"},{"lineNumber":389,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":390,"author":{"gitId":"linqing42"},"content":"    Use case ends.","lastModifiedDate":"2021-03-07"},{"lineNumber":391,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":392,"author":{"gitId":"linqing42"},"content":"**Extensions**","lastModifiedDate":"2021-03-07"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":394,"author":{"gitId":"linqing42"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-03-07"},{"lineNumber":395,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":396,"author":{"gitId":"linqing42"},"content":"  Use case ends.","lastModifiedDate":"2021-03-07"},{"lineNumber":397,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":398,"author":{"gitId":"linqing42"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-03-07"},{"lineNumber":399,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":400,"author":{"gitId":"linqing42"},"content":"    * 3a1. Police Address Book shows an error message.","lastModifiedDate":"2021-03-07"},{"lineNumber":401,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":402,"author":{"gitId":"linqing42"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-03-07"},{"lineNumber":403,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"Impala36"},"content":"* Operation Environment: Should work on any _Mainstream OS_ as long as it has Java **11** or above installed.","lastModifiedDate":"2021-02-20"},{"lineNumber":411,"author":{"gitId":"Impala36"},"content":"* Usability: A command line interface application, user will use specified command to interact with the system.","lastModifiedDate":"2021-02-20"},{"lineNumber":412,"author":{"gitId":"Impala36"},"content":"* Capacity: Should be able to record at least 1,000 person records.","lastModifiedDate":"2021-02-20"},{"lineNumber":413,"author":{"gitId":"Impala36"},"content":"* Reliability / Availability: Once the Police Address Book has been successfully deployed on user\u0027s computer, availability is 24/7.","lastModifiedDate":"2021-02-20"},{"lineNumber":414,"author":{"gitId":"Impala36"},"content":"* Scalability: The current version only supports local data file storage, users are unable to share a centralised project data.","lastModifiedDate":"2021-02-20"},{"lineNumber":415,"author":{"gitId":"Impala36"},"content":"  If the need of having a centralised data storage raised in the future, it can be added as system enhancement.","lastModifiedDate":"2021-02-20"},{"lineNumber":416,"author":{"gitId":"Impala36"},"content":"* Security: User login is not required. Police Address Book uses user\u0027s computer login as authentication.","lastModifiedDate":"2021-02-20"},{"lineNumber":417,"author":{"gitId":"Impala36"},"content":"* Maintainability: A updated JAR file will be released to user if there is any update to the current version of the Police Address Book.","lastModifiedDate":"2021-02-20"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"linqing42":94,"Impala36":81,"Yiheng0410":11,"-":288}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"**Police Address Book (PAB)** is a desktop app meant for Police Investigation Officers, optimized for use via a Command Line Interface (CLI) with a Graphical User Interface (GUI).","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"It is designed to help them manage their investigation cases better by reminding them on which people to call, automatically rescheduling follow up calls and assisting in sending case detail emails to colleagues or call notification emails to people in the contact list.","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"1. Download the latest `PoliceAddressBook.jar`.","lastModifiedDate":"2021-02-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your Police Address Book.","lastModifiedDate":"2021-02-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    * **`list`** : Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":"    * **`find`** `John`:Find the person with the specific name in the current list.","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    * **`delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2021-02-03"},{"lineNumber":65,"author":{"gitId":"Yiheng0410"},"content":"* Date format should be `dd-mm-yyyy`, other date format will not be accepted.","lastModifiedDate":"2021-03-05"},{"lineNumber":66,"author":{"gitId":"Yiheng0410"},"content":"  e.g. `23-02-2021` is a valid date format, `Feb-23-2021` or `02-23-2021` is an invalid date format. ","lastModifiedDate":"2021-03-05"},{"lineNumber":67,"author":{"gitId":"Yiheng0410"},"content":"  ","lastModifiedDate":"2021-03-05"},{"lineNumber":68,"author":{"gitId":"Yiheng0410"},"content":"* Date should be a valid calendar date, date out of range will not be accepted.","lastModifiedDate":"2021-03-05"},{"lineNumber":69,"author":{"gitId":"Yiheng0410"},"content":"  e.g. `23-02-2021` is a valid calendar date, `33-02-2021` is an invalid date format. ","lastModifiedDate":"2021-03-05"},{"lineNumber":70,"author":{"gitId":"Yiheng0410"},"content":"  ","lastModifiedDate":"2021-03-05"},{"lineNumber":71,"author":{"gitId":"linqing42"},"content":"* NRIC format should be `1 capital letter that start with S, T, F or G,followed by 7 numerical numbers and a capital letter with alphanumeric characters . It should not be blank.`, other NRIC format will not be accepted.","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"linqing42"},"content":"    e.g. `S1234567B` is a valid NRIC format, `s2222b` or `s11111111` is an invalid NRIC format. ","lastModifiedDate":"2021-02-21"},{"lineNumber":73,"author":{"gitId":"Yiheng0410"},"content":"    ","lastModifiedDate":"2021-02-21"},{"lineNumber":74,"author":{"gitId":"Impala36"},"content":"* Every person must contain a unique NRIC, phone number or email.","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"linqing42"},"content":" ","lastModifiedDate":"2021-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"Impala36"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Adds a person to the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"Impala36"},"content":"Format: `add n/NAME d/DATE f/FOLLOWUP i/NRIC p/PHONE_NUMBER e/EMAIL a/ADDRESS de/DESCRIPTION [r/REMARK] [t/TAG]…​`","lastModifiedDate":"2021-03-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":99,"author":{"gitId":"Impala36"},"content":"* `add n/John Doe d/22-02-2021 f/7 i/S2731125H p/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25 de/This man is a construction site manager who flew a drone over the Istana, beyond the boundary of his nearby work site, at 8.35am. r/He could be just curious to see what the Istana looks like. t/NeverCalled t/HighPriority`","lastModifiedDate":"2021-03-25"},{"lineNumber":100,"author":{"gitId":"Impala36"},"content":"* `add n/Betsy Crowe d/12-03-2021 f/14 i/S1234567A p/91234567 e/betsycrowe@example.com a/Blk 415 Woodlands Street 41, #17-35 de/She was molested by a Senior Investigations Officer at the Jurong Police Division Headquarters in the interview room around 9.00pm. r/She informed a policeman at the Police Cantonment Complex 5 days later. t/NeverCalled t/MediumPriority`","lastModifiedDate":"2021-03-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"linqing42"},"content":"### Adding a remark: `remark`","lastModifiedDate":"2021-03-20"},{"lineNumber":103,"author":{"gitId":"linqing42"},"content":"Add remark to a person in the address book.","lastModifiedDate":"2021-03-20"},{"lineNumber":104,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":105,"author":{"gitId":"linqing42"},"content":"Format `remark INDEX r/REMARK`","lastModifiedDate":"2021-03-20"},{"lineNumber":106,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":107,"author":{"gitId":"linqing42"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2021-03-20"},{"lineNumber":108,"author":{"gitId":"linqing42"},"content":"* Add remark at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-20"},{"lineNumber":109,"author":{"gitId":"linqing42"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":110,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":111,"author":{"gitId":"Impala36"},"content":"* You can clear the remark by not typing the prefix `r/` or leaving the remark in `r/` blank.","lastModifiedDate":"2021-03-25"},{"lineNumber":112,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":113,"author":{"gitId":"linqing42"},"content":"Examples:","lastModifiedDate":"2021-03-20"},{"lineNumber":114,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":115,"author":{"gitId":"Impala36"},"content":"* `remark 1 r/He works from 8.30am to 5.30pm. I have to call after working hours.`","lastModifiedDate":"2021-03-25"},{"lineNumber":116,"author":{"gitId":"Impala36"},"content":"* `remark 1` clears the existing remark from the person at index 1.","lastModifiedDate":"2021-03-25"},{"lineNumber":117,"author":{"gitId":"Impala36"},"content":"* `remark 1 r/` also clears the existing remark from the person at index 1.","lastModifiedDate":"2021-03-25"},{"lineNumber":118,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":119,"author":{"gitId":"Impala36"},"content":"### Editing a followUp: `followUp`","lastModifiedDate":"2021-03-25"},{"lineNumber":120,"author":{"gitId":"Impala36"},"content":"Edits number of days for recursive follow-up calls with the person.","lastModifiedDate":"2021-03-25"},{"lineNumber":121,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":122,"author":{"gitId":"binbinhui"},"content":"Format `followUp INDEX f/FOLLOWUP`","lastModifiedDate":"2021-03-24"},{"lineNumber":123,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":124,"author":{"gitId":"Impala36"},"content":"* A red exclamation icon will appear with a \"Call Today!\" message when the last day of the follow-up date is the same as today.","lastModifiedDate":"2021-03-25"},{"lineNumber":125,"author":{"gitId":"Impala36"},"content":"* You can stop the follow-up by setting it to 0.","lastModifiedDate":"2021-03-25"},{"lineNumber":126,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":127,"author":{"gitId":"binbinhui"},"content":"Examples:","lastModifiedDate":"2021-03-24"},{"lineNumber":128,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":129,"author":{"gitId":"binbinhui"},"content":"* `followUp 2 f/3`","lastModifiedDate":"2021-03-24"},{"lineNumber":130,"author":{"gitId":"Impala36"},"content":"* `followUp 1 f/0`","lastModifiedDate":"2021-03-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"binbinhui"},"content":"Format: `edit INDEX [n/NAME] [d/DATE] [i/NRIC] [p/PHONE] [e/EMAIL] [a/ADDRESS] [de/DESCRIPTION] [r/REMARK] [f/FOLLOWUP] [t/TAG]…​`","lastModifiedDate":"2021-03-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"Impala36"},"content":"* You can remove all the person’s tags by typing `t/` without specifying any tags after it.","lastModifiedDate":"2021-03-25"},{"lineNumber":149,"author":{"gitId":"Impala36"},"content":"* You can remove the remark by typing `r/` without specifying any remark after it.","lastModifiedDate":"2021-03-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"linqing42"},"content":"*  `edit 1 p/91234567 i/S1111112B e/johndoe@example.com` Edits the phone number,NRIC, email address of the 1st person to be `91234567`, ` i/S1111112B` and johndoe@example.com` respectively.","lastModifiedDate":"2021-02-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"linqing42"},"content":"*  `edit 2 n/Betsy Lim d/10-10-2021` Edits the name of the 2nd person to be `Betsy Lim` and edit the date as well.","lastModifiedDate":"2021-03-20"},{"lineNumber":155,"author":{"gitId":"Impala36"},"content":"*  `edit 1 r/` clears the existing remark from the person at index 1.","lastModifiedDate":"2021-03-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":157,"author":{"gitId":"Yiheng0410"},"content":"### Add a new tag : `addTag`","lastModifiedDate":"2021-03-25"},{"lineNumber":158,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":159,"author":{"gitId":"Yiheng0410"},"content":"To add a new tag to the existing tags  ","lastModifiedDate":"2021-03-25"},{"lineNumber":160,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":161,"author":{"gitId":"Yiheng0410"},"content":"Format: `addTag INDEX at/TAG`","lastModifiedDate":"2021-03-25"},{"lineNumber":162,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":163,"author":{"gitId":"Yiheng0410"},"content":"* Add new tag at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-25"},{"lineNumber":164,"author":{"gitId":"Impala36"},"content":"* New tag name should be entered after \u0027at/\u0027 only.","lastModifiedDate":"2021-03-25"},{"lineNumber":165,"author":{"gitId":"Impala36"},"content":"* Only one tag is allowed to be added each time.","lastModifiedDate":"2021-03-25"},{"lineNumber":166,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":167,"author":{"gitId":"Impala36"},"content":"Examples:","lastModifiedDate":"2021-03-25"},{"lineNumber":168,"author":{"gitId":"Impala36"},"content":"*  `addTag 1 at/CalledTwice` Adds the tag CalledTwice to the person at index 1.","lastModifiedDate":"2021-03-25"},{"lineNumber":169,"author":{"gitId":"Impala36"},"content":"*  `addTag 2 at/Closed` Adds the tag Closed to the person at index 2.","lastModifiedDate":"2021-03-25"},{"lineNumber":170,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":171,"author":{"gitId":"Yiheng0410"},"content":"### Remove an existing tag : `removeTag`","lastModifiedDate":"2021-03-25"},{"lineNumber":172,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":173,"author":{"gitId":"Yiheng0410"},"content":"To remove a tag from the existing tags without overwritten all the tags ","lastModifiedDate":"2021-03-25"},{"lineNumber":174,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":175,"author":{"gitId":"Yiheng0410"},"content":"Format: `removeTag INDEX rt/TAG`","lastModifiedDate":"2021-03-25"},{"lineNumber":176,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":177,"author":{"gitId":"Yiheng0410"},"content":"* Add new tag at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-25"},{"lineNumber":178,"author":{"gitId":"Impala36"},"content":"* Tag to be removed should be entered after \u0027rt/\u0027 only.","lastModifiedDate":"2021-03-25"},{"lineNumber":179,"author":{"gitId":"Impala36"},"content":"* Only one tag is allowed to be removed each time.","lastModifiedDate":"2021-03-25"},{"lineNumber":180,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":181,"author":{"gitId":"Impala36"},"content":"Examples:","lastModifiedDate":"2021-03-25"},{"lineNumber":182,"author":{"gitId":"Impala36"},"content":"*  `removeTag 1 rt/CalledTwice` Removes the tag CalledTwice from the person at index 1.","lastModifiedDate":"2021-03-25"},{"lineNumber":183,"author":{"gitId":"Impala36"},"content":"*  `removeTag 2 rt/Closed` Removes the tag Closed from the person at index 2.","lastModifiedDate":"2021-03-25"},{"lineNumber":184,"author":{"gitId":"Impala36"},"content":"*  ","lastModifiedDate":"2021-03-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Finds all fields contain any of the given keywords.","lastModifiedDate":"2021-02-20"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-21"},{"lineNumber":190,"author":{"gitId":"Impala36"},"content":"Format: `find KEYWORD [n/MORE_KEYWORDS] [d/DATE] [i/NRIC] [p/PHONE] [e/EMAIL] [a/ADDRESS] [de/DESCRIPTION] [r/REMARK] [t/TAG]…`","lastModifiedDate":"2021-03-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"Impala36"},"content":"* The search is case-insensitive. e.g `n/hans` will match `Hans`","lastModifiedDate":"2021-02-20"},{"lineNumber":194,"author":{"gitId":"Impala36"},"content":"* The order of the keywords does not matter. e.g. `n\\Hans` will match `Bo Hans`","lastModifiedDate":"2021-02-20"},{"lineNumber":195,"author":{"gitId":"Impala36"},"content":"* The search applies on all the fields.","lastModifiedDate":"2021-03-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"Impala36"},"content":"* `find n/alex bernice` returns `Alex Yeoh`, `Bernice Yu`\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":199,"author":{"gitId":"Impala36"},"content":"* `find d/-02-` returns `Bernice Yu`, `Charlotte Oliveiro`","lastModifiedDate":"2021-03-25"},{"lineNumber":200,"author":{"gitId":"Impala36"},"content":"* `find f/7` returns `Alex Yeoh`, `Irfan Ibrahim`, `Roy Balakrishnan`","lastModifiedDate":"2021-03-25"},{"lineNumber":201,"author":{"gitId":"Impala36"},"content":"* `find i/567` returns `Alex Yeoh`, `Charlotte Oliveiro`, `Irfan Ibrahim`","lastModifiedDate":"2021-03-25"},{"lineNumber":202,"author":{"gitId":"Impala36"},"content":"* `find p/321` returns `Charlotte Oliveiro`","lastModifiedDate":"2021-03-25"},{"lineNumber":203,"author":{"gitId":"Impala36"},"content":"* `find a/tampines serangoon` returns `Bernice Yu`, `Irfan Ibrahim`, `Roy Balakrishnan`","lastModifiedDate":"2021-03-25"},{"lineNumber":204,"author":{"gitId":"Impala36"},"content":"* `find r/police` returns `Bernice Yu`","lastModifiedDate":"2021-03-25"},{"lineNumber":205,"author":{"gitId":"Impala36"},"content":"* `find t/lowPriority` returns `Charlotte Oliveiro`, `Irfan Ibrahim`, `Roy Balakrishnan`","lastModifiedDate":"2021-03-25"},{"lineNumber":206,"author":{"gitId":"Impala36"},"content":"* `find t/never` returns `Bernice Yu`, `Charlotte Oliveiro`","lastModifiedDate":"2021-03-25"},{"lineNumber":207,"author":{"gitId":"Impala36"},"content":"* `find de/plant` returns `Irfan Ibrahim`, `Roy Balakrishnan`","lastModifiedDate":"2021-03-25"},{"lineNumber":208,"author":{"gitId":"Impala36"},"content":"  ![result for \u0027find plant\u0027](images/findPlantResult.png)","lastModifiedDate":"2021-03-25"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"Deletes the specified person from the Police Address Book.","lastModifiedDate":"2021-02-20"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the Police Address Book.","lastModifiedDate":"2021-02-20"},{"lineNumber":222,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"Clears all entries from the Police Address Book.","lastModifiedDate":"2021-02-20"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"binbinhui"},"content":"### Sending email : `send`","lastModifiedDate":"2021-02-28"},{"lineNumber":231,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":232,"author":{"gitId":"binbinhui"},"content":"sending email to user.","lastModifiedDate":"2021-02-28"},{"lineNumber":233,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":234,"author":{"gitId":"binbinhui"},"content":"Format: ","lastModifiedDate":"2021-03-07"},{"lineNumber":235,"author":{"gitId":"Impala36"},"content":"`send INDEX e/EMAIL`\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":236,"author":{"gitId":"Impala36"},"content":"`send INDEX MESSAGE`","lastModifiedDate":"2021-03-25"},{"lineNumber":237,"author":{"gitId":"binbinhui"},"content":"        ","lastModifiedDate":"2021-02-28"},{"lineNumber":238,"author":{"gitId":"binbinhui"},"content":"* The email format will be validated.","lastModifiedDate":"2021-03-07"},{"lineNumber":239,"author":{"gitId":"binbinhui"},"content":"* The index must be numeric and within the list size.","lastModifiedDate":"2021-03-07"},{"lineNumber":240,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":241,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":242,"author":{"gitId":"binbinhui"},"content":"Examples:","lastModifiedDate":"2021-02-28"},{"lineNumber":243,"author":{"gitId":"binbinhui"},"content":"* `send 1 e/hellokitty@hotmail.com` sending the first data in the printed list to the user.","lastModifiedDate":"2021-02-28"},{"lineNumber":244,"author":{"gitId":"binbinhui"},"content":"* `send 1 I am not able to contact you, please call me` the message will send to the reporter\u0027s email address in the list number 1.","lastModifiedDate":"2021-03-07"},{"lineNumber":245,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":246,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"Police Address Book data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-02-20"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":258,"author":{"gitId":"-"},"content":"Police Address Book data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-02-20"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":260,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":261,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, Police Address Book will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-02-20"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":264,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous Police Address Book home folder.","lastModifiedDate":"2021-02-20"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"Impala36"},"content":"**Add** | `add n/NAME d/DATE i/NRIC p/PHONE_NUMBER e/EMAIL a/ADDRESS r/REMARK [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho d/20-12-2012 f/3 i/S1234567Z p/82224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 de/This man is a construction site manager who flew a drone over the Istana, beyond the boundary of his nearby work site, at 8.35am. r/He could be just curious to see what the Istana looks like. t/NeverCalled t/HighPriority`","lastModifiedDate":"2021-03-25"},{"lineNumber":278,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"Impala36"},"content":"**Edit** | `edit INDEX [n/NAME] [d/DATE] [i/NRIC] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [de/DESCRIPTION] [r/REMARK] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2021-03-08"},{"lineNumber":281,"author":{"gitId":"Impala36"},"content":"**Find** | `find KEYWORD [n/MORE_KEYWORDS][d/DATE] [i/NRIC] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [de/DESCRIPTION] [r/REMARK]  [t/TAG]…`\u003cbr\u003e e.g., `find n/James`","lastModifiedDate":"2021-03-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"Impala36"},"content":"**Remark** | `remark INDEX r/REMARK`\u003cbr\u003e e.g., `remark 1 r/He works from 8.30am to 5.30pm. I have to call after working hours.`","lastModifiedDate":"2021-03-25"},{"lineNumber":285,"author":{"gitId":"binbinhui"},"content":"**FollowUp** | `followUp INDEX f/FOLLOWUP`\u003cbr\u003e e.g., `followUp 2 f/3`","lastModifiedDate":"2021-03-24"},{"lineNumber":286,"author":{"gitId":"Impala36"},"content":"**send** | `send INDEX e/EMAIL OR send INDEX MESSAGE`\u003cbr\u003e e.g., `send 1 e/hellokitty@hotmail.com OR send 1 I am not able to contact you, please call me`","lastModifiedDate":"2021-03-25"},{"lineNumber":287,"author":{"gitId":"Yiheng0410"},"content":"**Add Tag** | `addTag INDEX at/TAG`\u003cbr\u003e e.g., `addTag 1 at/CalledOnce`","lastModifiedDate":"2021-03-25"},{"lineNumber":288,"author":{"gitId":"Yiheng0410"},"content":"**Remove Tag** | `removeTag INDEX rt/TAG`\u003cbr\u003e e.g., `removeTag 1 rt/CalledOnce`","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"linqing42":17,"Impala36":57,"Yiheng0410":25,"-":166,"binbinhui":23}},{"path":"docs/diagrams/AddCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"linqing42"},"content":"@startuml","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"linqing42"},"content":"start","lastModifiedDate":"2021-03-20"},{"lineNumber":3,"author":{"gitId":"linqing42"},"content":":User executes AddCommand;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"linqing42"},"content":"if () then ([input has invalid format])","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"linqing42"},"content":"    :Display \"Invalid command format\" error message;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"linqing42"},"content":"else ([else])","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"linqing42"},"content":"    :Parses input;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"linqing42"},"content":"    if () then ([input has invalid format in a field ])","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":"        :Display error message for the specific field;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":"    else ([else])","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"linqing42"},"content":"        :Attempts to add it;","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"linqing42"},"content":"        if () then ([person\u0027s NRIC, email or phone \\nnumber has exist in model])","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"linqing42"},"content":"            :Display duplicate error message;","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"linqing42"},"content":"        else ([else])","lastModifiedDate":"2021-03-20"},{"lineNumber":16,"author":{"gitId":"linqing42"},"content":"        :Adds person\u0027s information to model;","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"linqing42"},"content":"        :Display information of newly-added person;","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"linqing42"},"content":"        endif","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"linqing42"},"content":"    endif","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"linqing42"},"content":"endif","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"linqing42"},"content":"stop","lastModifiedDate":"2021-03-20"},{"lineNumber":22,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":23,"author":{"gitId":"linqing42"},"content":"@enduml","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-03-20"}],"authorContributionMap":{"linqing42":24}},{"path":"docs/diagrams/AddCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"linqing42"},"content":"@startuml","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"linqing42"},"content":"!include style.puml","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"linqing42"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"linqing42"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"linqing42"},"content":"participant \":AddCommandParser\" as AddCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"linqing42"},"content":"participant \"a:AddCommand\" as AddCommand LOGIC_COLOR","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"linqing42"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":"end box","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"linqing42"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"linqing42"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"linqing42"},"content":"end box","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"linqing42"},"content":"[-\u003e LogicManager : execute(\"add n/John Doe d/22-02-2021 i/S2731125H p/98765432 \\ne/johnd@example.com a/311, Clementi Ave 2, #02-25 \\nde/This man stole 3 times r/shop theft t/NeverCalled \")","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"linqing42"},"content":"activate LogicManager","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"linqing42"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"add n/John Doe d/22-02-2021 i/S2731125H p/98765432 \\ne/johnd@example.com a/311, Clementi Ave 2, #02-25 \\nde/This man stole 3 times r/shop theft t/NeverCalled \")","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"linqing42"},"content":"activate AddressBookParser","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"linqing42"},"content":"create AddCommandParser","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"linqing42"},"content":"AddressBookParser -\u003e AddCommandParser","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"linqing42"},"content":"activate AddCommandParser","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"linqing42"},"content":"AddCommandParser --\u003e AddressBookParser","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"linqing42"},"content":"deactivate AddCommandParser","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"linqing42"},"content":"AddressBookParser -\u003e AddCommandParser : parse(\"n/John Doe d/22-02-2021 i/S2731125H p/98765432 \\ne/johnd@example.com a/311, Clementi Ave 2, #02-25 \\nde/This man stole 3 times r/shop theft t/NeverCalled\")","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"linqing42"},"content":"activate AddCommandParser","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"linqing42"},"content":"create AddCommand","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"linqing42"},"content":"AddCommandParser -\u003e AddCommand","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"linqing42"},"content":"activate AddCommand","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"linqing42"},"content":"AddCommand --\u003e AddCommandParser : a","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"linqing42"},"content":"deactivate AddCommand","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"linqing42"},"content":"AddCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"linqing42"},"content":"deactivate AddCommandParser","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"linqing42"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"linqing42"},"content":"AddCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"linqing42"},"content":"destroy AddCommandParser","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"linqing42"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"linqing42"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"linqing42"},"content":"LogicManager -\u003e AddCommand : execute()","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"linqing42"},"content":"activate AddCommand","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"linqing42"},"content":"AddCommand -\u003e Model : hasPerson(toAdd)","lastModifiedDate":"2021-03-20"},{"lineNumber":52,"author":{"gitId":"linqing42"},"content":"activate Model","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"linqing42"},"content":"Model --\u003e AddCommand","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"linqing42"},"content":"deactivate Model","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"linqing42"},"content":"AddCommand -\u003e Model : addPerson(toAdd)","lastModifiedDate":"2021-03-20"},{"lineNumber":58,"author":{"gitId":"linqing42"},"content":"activate Model","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"linqing42"},"content":"Model --\u003e AddCommand","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"linqing42"},"content":"deactivate Model","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"linqing42"},"content":"create CommandResult","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"linqing42"},"content":"AddCommand -\u003e CommandResult","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"linqing42"},"content":"activate CommandResult","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"linqing42"},"content":"CommandResult --\u003e AddCommand","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"linqing42"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"linqing42"},"content":"AddCommand --\u003e LogicManager : result","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"linqing42"},"content":"deactivate AddCommand","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"linqing42"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"linqing42"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"linqing42"},"content":"@enduml","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"linqing42":75}},{"path":"docs/diagrams/AddTagCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Yiheng0410"},"content":"@startuml","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"Yiheng0410"},"content":"!include style.puml","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"Yiheng0410"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"Yiheng0410"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"Yiheng0410"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"Yiheng0410"},"content":"participant \":AddTagCommandParser\" as AddTagCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"Yiheng0410"},"content":"participant \"a:AddTagCommand\" as AddTagCommand LOGIC_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"Yiheng0410"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"Yiheng0410"},"content":"end box","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"Yiheng0410"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"Yiheng0410"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"Yiheng0410"},"content":"end box","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"Yiheng0410"},"content":"[-\u003e LogicManager : execute(\"addTag 1 at/CalledOnce\")","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"Yiheng0410"},"content":"activate LogicManager","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"Yiheng0410"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"addTag 1 at/CalledOnc\")","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"Yiheng0410"},"content":"activate AddressBookParser","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"Yiheng0410"},"content":"create AddTagCommandParser","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"Yiheng0410"},"content":"AddressBookParser -\u003e AddTagCommandParser","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"Yiheng0410"},"content":"activate AddTagCommandParser","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"Yiheng0410"},"content":"AddTagCommandParser --\u003e AddressBookParser","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"Yiheng0410"},"content":"deactivate AddTagCommandParser","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"Yiheng0410"},"content":"AddressBookParser -\u003e AddTagCommandParser : parse(\"addTag 1 at/CalledOnce\")","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"Yiheng0410"},"content":"activate AddTagCommandParser","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"Yiheng0410"},"content":"create AddTagCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"Yiheng0410"},"content":"AddTagCommandParser -\u003e AddTagCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"Yiheng0410"},"content":"activate AddTagCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"Yiheng0410"},"content":"AddTagCommand --\u003e AddTagCommandParser : a","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"Yiheng0410"},"content":"deactivate AddTagCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"Yiheng0410"},"content":"AddTagCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"Yiheng0410"},"content":"deactivate AddTagCommandParser","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"Yiheng0410"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"Yiheng0410"},"content":"AddTagCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"Yiheng0410"},"content":"destroy AddTagCommandParser","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"Yiheng0410"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"Yiheng0410"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"Yiheng0410"},"content":"LogicManager -\u003e AddTagCommand : execute()","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"Yiheng0410"},"content":"activate AddTagCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"Yiheng0410"},"content":"AddTagCommand -\u003e Model : New personToEdit","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"Yiheng0410"},"content":"activate Model","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"Yiheng0410"},"content":"AddTagCommand -\u003e Model : New editedPerson","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"Yiheng0410"},"content":"activate Model","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"Yiheng0410"},"content":"Model --\u003e AddTagCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"Yiheng0410"},"content":"deactivate Model","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"Yiheng0410"},"content":"AddTagCommand -\u003e Model : setPerson(personToEdit, editedPerson)","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"Yiheng0410"},"content":"activate Model","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"Yiheng0410"},"content":"Model --\u003e AddTagCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"Yiheng0410"},"content":"deactivate Model","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"Yiheng0410"},"content":"create CommandResult","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"Yiheng0410"},"content":"AddTagCommand -\u003e CommandResult","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"Yiheng0410"},"content":"activate CommandResult","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"Yiheng0410"},"content":"CommandResult --\u003e AddTagCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"Yiheng0410"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"Yiheng0410"},"content":"AddTagCommand --\u003e LogicManager : result","lastModifiedDate":"2021-03-25"},{"lineNumber":74,"author":{"gitId":"Yiheng0410"},"content":"deactivate AddTagCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"Yiheng0410"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-03-25"},{"lineNumber":77,"author":{"gitId":"Yiheng0410"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-25"},{"lineNumber":78,"author":{"gitId":"Yiheng0410"},"content":"@enduml","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"Yiheng0410":78}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList *-right-\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"linqing42"},"content":"UniquePersonList o-right-\u003e \"*\" Person","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"linqing42"},"content":"Person *--\u003e \"1\" Name","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"linqing42"},"content":"Person *--\u003e \"1\" Nric","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"linqing42"},"content":"Person *--\u003e \"1\" Date","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"linqing42"},"content":"Person *--\u003e \"1\" Description","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"linqing42"},"content":"Person *--\u003e \"1\" Phone","lastModifiedDate":"2021-03-20"},{"lineNumber":22,"author":{"gitId":"linqing42"},"content":"Person *--\u003e \"1\" Email","lastModifiedDate":"2021-03-20"},{"lineNumber":23,"author":{"gitId":"linqing42"},"content":"Person *--\u003e \"1\" Address","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"linqing42"},"content":"Person *--\u003e \"1\" Remark","lastModifiedDate":"2021-03-20"},{"lineNumber":25,"author":{"gitId":"linqing42"},"content":"Person *--\u003e \"1\" FollowUp","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"linqing42":10,"-":16}},{"path":"docs/diagrams/CallTodayActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"@startuml","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":"start","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":":User opens application;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":":AddressBook checks","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"through Persons in the list;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":":DateUtil adds FollowUp days to ReportDate;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"if () then ([Last day of FollowUp date","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"is same as today\u0027s date])","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":":Show Call Notification Icon;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":":Display Message","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"\"Call Today!\";","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"else ([else])","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"endif","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"stop","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"@enduml","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"Impala36":18}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface ReadOnlyAddressBook \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface ObservableList \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Package Person {","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"linqing42"},"content":"Class Date","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"linqing42"},"content":"Class Description","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"linqing42"},"content":"Class Nric","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"linqing42"},"content":"Class Remark","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"linqing42"},"content":"Class FollowUp","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Package Tag {","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Model .right.\u003e ObservableList","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ModelManager o--\u003e \"1\" AddressBook","lastModifiedDate":"2019-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"ModelManager o-left-\u003e \"1\" UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"UniquePersonList o--\u003e \"*\" Person","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"linqing42"},"content":"Person *--\u003e Nric","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"linqing42"},"content":"Person *--\u003e Date","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"linqing42"},"content":"Person *--\u003e Description","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"linqing42"},"content":"Person *--\u003e Remark","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"linqing42"},"content":"Person *--\u003e FollowUp","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"linqing42"},"content":"Nric -[hidden]right-\u003e Nric","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"linqing42"},"content":"Date -[hidden]right-\u003e Date","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"linqing42"},"content":"Description-[hidden]right-\u003e Description","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"linqing42"},"content":"FollowUp -[hidden]right-\u003e FollowUp","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"linqing42"},"content":"Remark -[hidden]right-\u003e Remark","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"linqing42"},"content":"ModelManager --\u003e\"1\" Person : filtered list","lastModifiedDate":"2021-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"linqing42":16,"-":55}},{"path":"docs/diagrams/RemoveTagCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Yiheng0410"},"content":"@startuml","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"Yiheng0410"},"content":"!include style.puml","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"Yiheng0410"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"Yiheng0410"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"Yiheng0410"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"Yiheng0410"},"content":"participant \":RemoveTagCommandParser\" as RemoveTagCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"Yiheng0410"},"content":"participant \"a:RemoveTagCommand\" as RemoveTagCommand LOGIC_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"Yiheng0410"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"Yiheng0410"},"content":"end box","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"Yiheng0410"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"Yiheng0410"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"Yiheng0410"},"content":"end box","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"Yiheng0410"},"content":"[-\u003e LogicManager : execute(\"removeTag 1 at/CalledOnce\")","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"Yiheng0410"},"content":"activate LogicManager","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"Yiheng0410"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"removeTag 1 at/CalledOnc\")","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"Yiheng0410"},"content":"activate AddressBookParser","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"Yiheng0410"},"content":"create RemoveTagCommandParser","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"Yiheng0410"},"content":"AddressBookParser -\u003e RemoveTagCommandParser","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"Yiheng0410"},"content":"activate RemoveTagCommandParser","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"Yiheng0410"},"content":"RemoveTagCommandParser --\u003e AddressBookParser","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"Yiheng0410"},"content":"deactivate RemoveTagCommandParser","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"Yiheng0410"},"content":"AddressBookParser -\u003e RemoveTagCommandParser : parse(\"removeTag 1 at/CalledOnce\")","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"Yiheng0410"},"content":"activate RemoveTagCommandParser","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"Yiheng0410"},"content":"create RemoveTagCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"Yiheng0410"},"content":"RemoveTagCommandParser -\u003e RemoveTagCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"Yiheng0410"},"content":"activate RemoveTagCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"Yiheng0410"},"content":"RemoveTagCommand --\u003e RemoveTagCommandParser : a","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"Yiheng0410"},"content":"deactivate RemoveTagCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"Yiheng0410"},"content":"RemoveTagCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"Yiheng0410"},"content":"deactivate RemoveTagCommandParser","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"Yiheng0410"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"Yiheng0410"},"content":"RemoveTagCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"Yiheng0410"},"content":"destroy RemoveTagCommandParser","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"Yiheng0410"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"Yiheng0410"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"Yiheng0410"},"content":"LogicManager -\u003e RemoveTagCommand : execute()","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"Yiheng0410"},"content":"activate RemoveTagCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"Yiheng0410"},"content":"RemoveTagCommand -\u003e Model : New personToEdit","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"Yiheng0410"},"content":"activate Model","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"Yiheng0410"},"content":"RemoveTagCommand -\u003e Model : New editedPerson","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"Yiheng0410"},"content":"activate Model","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"Yiheng0410"},"content":"Model --\u003e RemoveTagCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"Yiheng0410"},"content":"deactivate Model","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"Yiheng0410"},"content":"RemoveTagCommand -\u003e Model : setPerson(personToEdit, editedPerson)","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"Yiheng0410"},"content":"activate Model","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"Yiheng0410"},"content":"Model --\u003e RemoveTagCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"Yiheng0410"},"content":"deactivate Model","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"Yiheng0410"},"content":"create CommandResult","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"Yiheng0410"},"content":"RemoveTagCommand -\u003e CommandResult","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"Yiheng0410"},"content":"activate CommandResult","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"Yiheng0410"},"content":"CommandResult --\u003e RemoveTagCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"Yiheng0410"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"Yiheng0410"},"content":"RemoveTagCommand --\u003e LogicManager : result","lastModifiedDate":"2021-03-25"},{"lineNumber":74,"author":{"gitId":"Yiheng0410"},"content":"deactivate RemoveTagCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"Yiheng0410"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-03-25"},{"lineNumber":77,"author":{"gitId":"Yiheng0410"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-25"},{"lineNumber":78,"author":{"gitId":"Yiheng0410"},"content":"@enduml","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"Yiheng0410":78}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"title: Police Address Book","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"[![CI Status](https://github.com/AY2021S2-TIC4002-F18-1/tp2/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-TIC4002-F18-1/tp2/actions)","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"[![codecov](https://codecov.io/gh/AY2021S2-TIC4002-F18-1/tp2/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2021S2-TIC4002-F18-1/tp2)","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"**Police Address Book (PAB)** is a desktop app meant for Police Investigation Officers, optimized for use via a Command Line Interface (CLI) with a Graphical User Interface (GUI).","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"It is designed to help them manage their investigation cases better by reminding them on which people to call, automatically rescheduling follow up calls and assisting in sending case detail emails to colleagues or call notification emails to people in the contact list.","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"**Useful links**","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"* [**About Us**](AboutUs.html)","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"* [**User Guide**](UserGuide.html)","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"* [**Developer Guide**](DeveloperGuide.html)","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Impala36":10,"-":13}},{"path":"docs/team/binhui.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"linqing42"},"content":"title: Binhui\u0027s Project Portfolio Page","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Project: AddressBook Level 3","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"linqing42":1,"-":45}},{"path":"docs/team/linqing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"linqing42"},"content":"---","lastModifiedDate":"2021-02-20"},{"lineNumber":3,"author":{"gitId":"linqing42"},"content":"layout: page","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":"title: Lin Qing\u0027s Project Portfolio Page","lastModifiedDate":"2021-02-20"},{"lineNumber":5,"author":{"gitId":"linqing42"},"content":"---","lastModifiedDate":"2021-02-20"},{"lineNumber":6,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":7,"author":{"gitId":"linqing42"},"content":"## Project: AddressBook Level 3","lastModifiedDate":"2021-02-20"},{"lineNumber":8,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":9,"author":{"gitId":"linqing42"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-02-20"},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-02-20"},{"lineNumber":12,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":13,"author":{"gitId":"linqing42"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-02-20"},{"lineNumber":14,"author":{"gitId":"linqing42"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-02-20"},{"lineNumber":15,"author":{"gitId":"linqing42"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-02-20"},{"lineNumber":16,"author":{"gitId":"linqing42"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-02-20"},{"lineNumber":17,"author":{"gitId":"linqing42"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-02-20"},{"lineNumber":18,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":19,"author":{"gitId":"linqing42"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-02-20"},{"lineNumber":20,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":21,"author":{"gitId":"linqing42"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-02-20"},{"lineNumber":22,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":23,"author":{"gitId":"linqing42"},"content":"* **Project management**:","lastModifiedDate":"2021-02-20"},{"lineNumber":24,"author":{"gitId":"linqing42"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-02-20"},{"lineNumber":25,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":26,"author":{"gitId":"linqing42"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-02-20"},{"lineNumber":27,"author":{"gitId":"linqing42"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-02-20"},{"lineNumber":28,"author":{"gitId":"linqing42"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-02-20"},{"lineNumber":29,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":30,"author":{"gitId":"linqing42"},"content":"* **Documentation**:","lastModifiedDate":"2021-02-20"},{"lineNumber":31,"author":{"gitId":"linqing42"},"content":"  * User Guide:","lastModifiedDate":"2021-02-20"},{"lineNumber":32,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":33,"author":{"gitId":"linqing42"},"content":"  * Developer Guide:","lastModifiedDate":"2021-02-20"},{"lineNumber":34,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":35,"author":{"gitId":"linqing42"},"content":"* **Community**:","lastModifiedDate":"2021-02-20"},{"lineNumber":36,"author":{"gitId":"linqing42"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-02-20"},{"lineNumber":37,"author":{"gitId":"linqing42"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-02-20"},{"lineNumber":38,"author":{"gitId":"linqing42"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-02-20"},{"lineNumber":39,"author":{"gitId":"linqing42"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-02-20"},{"lineNumber":40,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":41,"author":{"gitId":"linqing42"},"content":"* **Tools**:","lastModifiedDate":"2021-02-20"},{"lineNumber":42,"author":{"gitId":"linqing42"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-02-20"},{"lineNumber":43,"author":{"gitId":"linqing42"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-02-20"},{"lineNumber":44,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":45,"author":{"gitId":"linqing42"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-02-20"},{"lineNumber":46,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-20"}],"authorContributionMap":{"linqing42":46}},{"path":"docs/team/yiheng.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-02-21"},{"lineNumber":2,"author":{"gitId":"Yiheng0410"},"content":"---","lastModifiedDate":"2021-02-21"},{"lineNumber":3,"author":{"gitId":"Yiheng0410"},"content":"layout: page","lastModifiedDate":"2021-02-21"},{"lineNumber":4,"author":{"gitId":"Yiheng0410"},"content":"title: Yiheng\u0027s Project Portfolio Page","lastModifiedDate":"2021-02-21"},{"lineNumber":5,"author":{"gitId":"Yiheng0410"},"content":"---","lastModifiedDate":"2021-02-21"},{"lineNumber":6,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-02-21"},{"lineNumber":7,"author":{"gitId":"Yiheng0410"},"content":"## Project: AddressBook Level 3","lastModifiedDate":"2021-02-21"},{"lineNumber":8,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-02-21"},{"lineNumber":9,"author":{"gitId":"Yiheng0410"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-02-21"},{"lineNumber":10,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-02-21"},{"lineNumber":11,"author":{"gitId":"Yiheng0410"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-02-21"},{"lineNumber":12,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-02-21"},{"lineNumber":13,"author":{"gitId":"Yiheng0410"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-02-21"},{"lineNumber":14,"author":{"gitId":"Yiheng0410"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-02-21"},{"lineNumber":15,"author":{"gitId":"Yiheng0410"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-02-21"},{"lineNumber":16,"author":{"gitId":"Yiheng0410"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-02-21"},{"lineNumber":17,"author":{"gitId":"Yiheng0410"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-02-21"},{"lineNumber":18,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-02-21"},{"lineNumber":19,"author":{"gitId":"Yiheng0410"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-02-21"},{"lineNumber":20,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-02-21"},{"lineNumber":21,"author":{"gitId":"Yiheng0410"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-02-21"},{"lineNumber":22,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-02-21"},{"lineNumber":23,"author":{"gitId":"Yiheng0410"},"content":"* **Project management**:","lastModifiedDate":"2021-02-21"},{"lineNumber":24,"author":{"gitId":"Yiheng0410"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-02-21"},{"lineNumber":25,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-02-21"},{"lineNumber":26,"author":{"gitId":"Yiheng0410"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-02-21"},{"lineNumber":27,"author":{"gitId":"Yiheng0410"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-02-21"},{"lineNumber":28,"author":{"gitId":"Yiheng0410"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-02-21"},{"lineNumber":29,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-02-21"},{"lineNumber":30,"author":{"gitId":"Yiheng0410"},"content":"* **Documentation**:","lastModifiedDate":"2021-02-21"},{"lineNumber":31,"author":{"gitId":"Yiheng0410"},"content":"  * User Guide:","lastModifiedDate":"2021-02-21"},{"lineNumber":32,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-02-21"},{"lineNumber":33,"author":{"gitId":"Yiheng0410"},"content":"  * Developer Guide:","lastModifiedDate":"2021-02-21"},{"lineNumber":34,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-02-21"},{"lineNumber":35,"author":{"gitId":"Yiheng0410"},"content":"* **Community**:","lastModifiedDate":"2021-02-21"},{"lineNumber":36,"author":{"gitId":"Yiheng0410"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-02-21"},{"lineNumber":37,"author":{"gitId":"Yiheng0410"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-02-21"},{"lineNumber":38,"author":{"gitId":"Yiheng0410"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-02-21"},{"lineNumber":39,"author":{"gitId":"Yiheng0410"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-02-21"},{"lineNumber":40,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-02-21"},{"lineNumber":41,"author":{"gitId":"Yiheng0410"},"content":"* **Tools**:","lastModifiedDate":"2021-02-21"},{"lineNumber":42,"author":{"gitId":"Yiheng0410"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-02-21"},{"lineNumber":43,"author":{"gitId":"Yiheng0410"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-02-21"},{"lineNumber":44,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-02-21"},{"lineNumber":45,"author":{"gitId":"Yiheng0410"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-02-21"},{"lineNumber":46,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-02-21"}],"authorContributionMap":{"Yiheng0410":46}},{"path":"docs/team/zhenquan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"---","lastModifiedDate":"2021-02-20"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":"layout: page","lastModifiedDate":"2021-02-20"},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"title: Zhenquan\u0027s Project Portfolio Page","lastModifiedDate":"2021-02-20"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"---","lastModifiedDate":"2021-02-20"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"## Project: AddressBook Level 3","lastModifiedDate":"2021-02-20"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-02-20"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-02-20"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-02-20"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-02-20"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-02-20"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-02-20"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-02-20"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-02-20"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-02-20"},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"* **Project management**:","lastModifiedDate":"2021-02-20"},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-02-20"},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-02-20"},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-02-20"},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-02-20"},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"* **Documentation**:","lastModifiedDate":"2021-02-20"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":"  * User Guide:","lastModifiedDate":"2021-02-20"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-02-20"},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-02-20"},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":"  * Developer Guide:","lastModifiedDate":"2021-02-20"},{"lineNumber":34,"author":{"gitId":"Impala36"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-02-20"},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":"* **Community**:","lastModifiedDate":"2021-02-20"},{"lineNumber":37,"author":{"gitId":"Impala36"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-02-20"},{"lineNumber":38,"author":{"gitId":"Impala36"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-02-20"},{"lineNumber":39,"author":{"gitId":"Impala36"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-02-20"},{"lineNumber":40,"author":{"gitId":"Impala36"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-02-20"},{"lineNumber":41,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":42,"author":{"gitId":"Impala36"},"content":"* **Tools**:","lastModifiedDate":"2021-02-20"},{"lineNumber":43,"author":{"gitId":"Impala36"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-02-20"},{"lineNumber":44,"author":{"gitId":"Impala36"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-02-20"},{"lineNumber":45,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":46,"author":{"gitId":"Impala36"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-02-20"}],"authorContributionMap":{"Impala36":46}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d keyword found in the list!\";","lastModifiedDate":"2021-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":12,"binbinhui":1}},{"path":"src/main/java/seedu/address/commons/util/DateUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"public class DateUtil {","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"    private final String followUp;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"    private final String date;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"     * This is a date test.","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"    public DateUtil(String followUp, String date) {","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"        this.followUp \u003d followUp;","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"     * return true if need to call today.","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":"    public boolean isLastDay() {","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"        String date2 \u003d date.trim();","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"        int day \u003d Integer.parseInt(followUp.trim());","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d-MM-yyyy\");","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"        LocalDate reportDate \u003d LocalDate.parse(date2, formatter);","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"        LocalDate temp \u003d reportDate;","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":"        if (day \u003d\u003d 0) {","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"Impala36"},"content":"            return false;","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"        if (reportDate.isEqual(today)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":"            return true;","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":"        } else {","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"Impala36"},"content":"            while (temp.isBefore(today)) {","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"                temp \u003d temp.plusDays(day);","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"            }","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":"            if (temp.isEqual(today)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"Impala36"},"content":"                final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"Impala36"},"content":"                logger.info(\"Call today: \" + date2 + \" + \" + day + \" \u003d \" + today.format(formatter));","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":"                return true;","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"binbinhui"},"content":"            } else {","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"binbinhui"},"content":"                return false;","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"binbinhui"},"content":"            }","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"binbinhui"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"binbinhui"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"binbinhui"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"Impala36":11,"binbinhui":40}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"        String[] obj;","lastModifiedDate":"2021-02-23"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"        //System.out.println(word);","lastModifiedDate":"2021-02-28"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"        String preppedWord \u003d word.trim().toLowerCase();","lastModifiedDate":"2021-02-23"},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"        if (preppedWord.contains(\"/\")) {","lastModifiedDate":"2021-02-23"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"            obj \u003d preppedWord.split(\"/\", 2);","lastModifiedDate":"2021-02-23"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"            preppedWord \u003d obj[1];","lastModifiedDate":"2021-02-23"},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":"        }","lastModifiedDate":"2021-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"        String preppedSentence \u003d sentence.toLowerCase();","lastModifiedDate":"2021-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":"        //return Arrays.asList(wordsInPreppedSentence).contains(preppedWord);","lastModifiedDate":"2021-02-28"},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":"        return preppedSentence.contains(preppedWord);","lastModifiedDate":"2021-02-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":62,"binbinhui":13}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"Yiheng0410"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FOLLOWUP;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2021-02-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"Yiheng0410"},"content":"            + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":"            + PREFIX_FOLLOWUP + \"FOLLOWUP \"","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"linqing42"},"content":"            + PREFIX_NRIC + \"NRIC \"","lastModifiedDate":"2021-02-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":"            + PREFIX_DESCRIPTION + \"DESCRIPTION \"","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":"            + \"[\" + PREFIX_REMARK + \"REMARK] \"","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"Impala36"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]\\n\"","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"Yiheng0410"},"content":"            + PREFIX_DATE + \"22-02-2021 \"","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"Impala36"},"content":"            + PREFIX_FOLLOWUP + \"7 \"","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"linqing42"},"content":"            + PREFIX_NRIC + \"S2731125H \"","lastModifiedDate":"2021-02-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"Impala36"},"content":"            + PREFIX_DESCRIPTION + \"This man is a construction site manager who flew a drone over the Istana, \"","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"Impala36"},"content":"                + \"beyond the boundary of his nearby work site, at 8.35am. \"","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"Impala36"},"content":"            + PREFIX_REMARK + \"He could be just curious to see what the Istana looks like. \"","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"Impala36"},"content":"            + PREFIX_TAG + \"NeverCalled \"","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"Impala36"},"content":"            + PREFIX_TAG + \"HighPriority \";","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"Impala36"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d","lastModifiedDate":"2021-03-19"},{"lineNumber":54,"author":{"gitId":"Impala36"},"content":"        \"This person has a duplicate NRIC, phone number or email as another person.\";","lastModifiedDate":"2021-03-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"linqing42":3,"Yiheng0410":3,"Impala36":15,"-":63}},{"path":"src/main/java/seedu/address/logic/commands/AddTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yiheng0410"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"Yiheng0410"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"Yiheng0410"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDTAG;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"Yiheng0410"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"Yiheng0410"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"Yiheng0410"},"content":"import java.util.List;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"Yiheng0410"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"Yiheng0410"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"Yiheng0410"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"Yiheng0410"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"Yiheng0410"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"Yiheng0410"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"Yiheng0410"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"/**","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":" * Adds a tag to an existing person in the address book.","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":" */","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"Yiheng0410"},"content":"public class AddTagCommand extends Command {","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"Yiheng0410"},"content":"    public static final String COMMAND_WORD \u003d \"addTag\";","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"Yiheng0410"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Add the tag of the person identified \"","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"Yiheng0410"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"Yiheng0410"},"content":"            + \"New tag will be added by the input.\\n\"","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"Yiheng0410"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":"            + PREFIX_ADDTAG + \"[TAG]\\n\"","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"Yiheng0410"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"Yiheng0410"},"content":"            + PREFIX_ADDTAG + \"CalledTwice\";","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"Yiheng0410"},"content":"    public static final String MESSAGE_ADD_TAG_SUCCESS \u003d \"Added tag to Person: %1$s\";","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"Yiheng0410"},"content":"    private final Index index;","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"Yiheng0410"},"content":"    private final Tag tag;","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"Yiheng0410"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"Yiheng0410"},"content":"     * @param index of the person in the filtered person list to edit the tag","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"Impala36"},"content":"     * @param tag of the person to be added","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"Yiheng0410"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"Yiheng0410"},"content":"    public AddTagCommand(Index index, Tag tag) {","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"Yiheng0410"},"content":"        requireAllNonNull(index, tag);","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"Yiheng0410"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"Yiheng0410"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"Yiheng0410"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"Yiheng0410"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"Yiheng0410"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"Yiheng0410"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"Yiheng0410"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"Yiheng0410"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"Yiheng0410"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"Yiheng0410"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"Yiheng0410"},"content":"        Set\u003cTag\u003e oldTags \u003d personToEdit.getTags();","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"Yiheng0410"},"content":"        List\u003cTag\u003e newTags \u003d new ArrayList\u003c\u003e(oldTags);","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"Yiheng0410"},"content":"        newTags.add(tag);","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"Yiheng0410"},"content":"        Set\u003cTag\u003e updatedTags \u003d Set.copyOf(newTags);","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"Yiheng0410"},"content":"        Person editedPerson \u003d new Person(personToEdit.getName(), personToEdit.getDate(),","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"Yiheng0410"},"content":"                personToEdit.getFollowUp(), personToEdit.getNric(), personToEdit.getPhone(),","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"Yiheng0410"},"content":"                personToEdit.getEmail(), personToEdit.getAddress(), personToEdit.getDescription(),","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"Yiheng0410"},"content":"                personToEdit.getRemark(), updatedTags);","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"Yiheng0410"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"Yiheng0410"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"Yiheng0410"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"Yiheng0410"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"Yiheng0410"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":74,"author":{"gitId":"Yiheng0410"},"content":"     * Generates a command execution success message based on whether the remark is added to or removed from","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"Yiheng0410"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"Yiheng0410"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":77,"author":{"gitId":"Yiheng0410"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2021-03-25"},{"lineNumber":78,"author":{"gitId":"Yiheng0410"},"content":"        return String.format(MESSAGE_ADD_TAG_SUCCESS, personToEdit);","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"Yiheng0410"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":80,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"Yiheng0410"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":82,"author":{"gitId":"Yiheng0410"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-25"},{"lineNumber":83,"author":{"gitId":"Yiheng0410"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-25"},{"lineNumber":84,"author":{"gitId":"Yiheng0410"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-25"},{"lineNumber":85,"author":{"gitId":"Yiheng0410"},"content":"            return true;","lastModifiedDate":"2021-03-25"},{"lineNumber":86,"author":{"gitId":"Yiheng0410"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":88,"author":{"gitId":"Yiheng0410"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-25"},{"lineNumber":89,"author":{"gitId":"Yiheng0410"},"content":"        if (!(other instanceof AddTagCommand)) {","lastModifiedDate":"2021-03-25"},{"lineNumber":90,"author":{"gitId":"Yiheng0410"},"content":"            return false;","lastModifiedDate":"2021-03-25"},{"lineNumber":91,"author":{"gitId":"Yiheng0410"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":92,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":93,"author":{"gitId":"Yiheng0410"},"content":"        // state check","lastModifiedDate":"2021-03-25"},{"lineNumber":94,"author":{"gitId":"Yiheng0410"},"content":"        AddTagCommand e \u003d (AddTagCommand) other;","lastModifiedDate":"2021-03-25"},{"lineNumber":95,"author":{"gitId":"Yiheng0410"},"content":"        return index.equals(e.index)","lastModifiedDate":"2021-03-25"},{"lineNumber":96,"author":{"gitId":"Yiheng0410"},"content":"                \u0026\u0026 tag.equals(e.tag);","lastModifiedDate":"2021-03-25"},{"lineNumber":97,"author":{"gitId":"Yiheng0410"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":98,"author":{"gitId":"Yiheng0410"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"Yiheng0410":93,"Impala36":5}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"Yiheng0410"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FOLLOWUP;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-02-16"},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2021-02-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-02-16"},{"lineNumber":28,"author":{"gitId":"Yiheng0410"},"content":"import seedu.address.model.person.Date;","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"import seedu.address.model.person.Description;","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-02-16"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"import seedu.address.model.person.FollowUp;","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-02-16"},{"lineNumber":33,"author":{"gitId":"linqing42"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2021-02-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-02-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-02-16"},{"lineNumber":36,"author":{"gitId":"linqing42"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-02-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":52,"author":{"gitId":"Yiheng0410"},"content":"        + \"[\" + PREFIX_DATE + \"DATE] \"","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"Impala36"},"content":"        + \"[\" + PREFIX_FOLLOWUP + \"FOLLOWUP] \"","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"linqing42"},"content":"        + \"[\" + PREFIX_NRIC + \"NRIC] \"","lastModifiedDate":"2021-02-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"Impala36"},"content":"        + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION] \"","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"Impala36"},"content":"        + \"[\" + PREFIX_REMARK + \"REMARK] \"","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"Impala36"},"content":"        + \"[\" + PREFIX_TAG + \"TAG]\\n\"","lastModifiedDate":"2021-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":63,"author":{"gitId":"Impala36"},"content":"        + PREFIX_EMAIL + \"johndoe@example.com \"","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"Impala36"},"content":"        + PREFIX_REMARK + \"He works from 8.30am to 5.30pm. I have to call after working hours.\";","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"Impala36"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d","lastModifiedDate":"2021-03-19"},{"lineNumber":69,"author":{"gitId":"Impala36"},"content":"        \"This person has a duplicate NRIC, phone number or email as another person.\";","lastModifiedDate":"2021-03-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @param index                of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"Impala36"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":87,"author":{"gitId":"Impala36"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit} edited with {@code","lastModifiedDate":"2021-03-08"},{"lineNumber":88,"author":{"gitId":"Impala36"},"content":"     * editPersonDescriptor}.","lastModifiedDate":"2021-03-08"},{"lineNumber":89,"author":{"gitId":"Impala36"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":90,"author":{"gitId":"Impala36"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2021-03-08"},{"lineNumber":91,"author":{"gitId":"Impala36"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2021-03-08"},{"lineNumber":92,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":93,"author":{"gitId":"Impala36"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2021-03-08"},{"lineNumber":94,"author":{"gitId":"Impala36"},"content":"        Date updateDate \u003d editPersonDescriptor.getDate().orElse(personToEdit.getDate());","lastModifiedDate":"2021-03-08"},{"lineNumber":95,"author":{"gitId":"Impala36"},"content":"        Nric updatedNric \u003d editPersonDescriptor.getNric().orElse(personToEdit.getNric());","lastModifiedDate":"2021-03-08"},{"lineNumber":96,"author":{"gitId":"Impala36"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2021-03-08"},{"lineNumber":97,"author":{"gitId":"Impala36"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2021-03-08"},{"lineNumber":98,"author":{"gitId":"Impala36"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2021-03-08"},{"lineNumber":99,"author":{"gitId":"Impala36"},"content":"        Description updatedDescription \u003d editPersonDescriptor.getDescription().orElse(personToEdit.getDescription());","lastModifiedDate":"2021-03-08"},{"lineNumber":100,"author":{"gitId":"Impala36"},"content":"        Remark updatedRemark \u003d editPersonDescriptor.getRemark().orElse(personToEdit.getRemark());","lastModifiedDate":"2021-03-08"},{"lineNumber":101,"author":{"gitId":"binbinhui"},"content":"        FollowUp updateFollowUp \u003d editPersonDescriptor.getFollowUp().orElse(personToEdit.getFollowUp());","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"Impala36"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2021-03-08"},{"lineNumber":103,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":104,"author":{"gitId":"Impala36"},"content":"        return new Person(updatedName, updateDate, updateFollowUp, updatedNric, updatedPhone,","lastModifiedDate":"2021-03-25"},{"lineNumber":105,"author":{"gitId":"Impala36"},"content":"            updatedEmail, updatedAddress, updatedDescription, updatedRemark, updatedTags);","lastModifiedDate":"2021-03-25"},{"lineNumber":106,"author":{"gitId":"Impala36"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":107,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"Impala36"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the corresponding field value","lastModifiedDate":"2021-03-08"},{"lineNumber":149,"author":{"gitId":"Impala36"},"content":"     * of the person.","lastModifiedDate":"2021-03-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":153,"author":{"gitId":"Yiheng0410"},"content":"        private Date date;","lastModifiedDate":"2021-03-03"},{"lineNumber":154,"author":{"gitId":"linqing42"},"content":"        private Nric nric;","lastModifiedDate":"2021-02-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":158,"author":{"gitId":"Impala36"},"content":"        private Description description;","lastModifiedDate":"2021-03-08"},{"lineNumber":159,"author":{"gitId":"Impala36"},"content":"        private Remark remark;","lastModifiedDate":"2021-03-08"},{"lineNumber":160,"author":{"gitId":"binbinhui"},"content":"        private FollowUp followUp;","lastModifiedDate":"2021-03-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"Impala36"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2021-03-08"},{"lineNumber":164,"author":{"gitId":"Impala36"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":167,"author":{"gitId":"Impala36"},"content":"         * Copy constructor. A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-03-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":171,"author":{"gitId":"Yiheng0410"},"content":"            setDate(toCopy.date);","lastModifiedDate":"2021-03-03"},{"lineNumber":172,"author":{"gitId":"linqing42"},"content":"            setNric(toCopy.nric);","lastModifiedDate":"2021-02-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":176,"author":{"gitId":"Impala36"},"content":"            setDescription(toCopy.description);","lastModifiedDate":"2021-03-08"},{"lineNumber":177,"author":{"gitId":"Impala36"},"content":"            setRemark(toCopy.remark);","lastModifiedDate":"2021-03-08"},{"lineNumber":178,"author":{"gitId":"binbinhui"},"content":"            setFollowUp(toCopy.followUp);","lastModifiedDate":"2021-03-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"binbinhui"},"content":"            return CollectionUtil.isAnyNonNull(name, nric, phone, date,","lastModifiedDate":"2021-03-24"},{"lineNumber":187,"author":{"gitId":"binbinhui"},"content":"                email, address, tags, description, remark, followUp);","lastModifiedDate":"2021-03-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"Impala36"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2021-03-08"},{"lineNumber":191,"author":{"gitId":"Impala36"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2021-03-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"Yiheng0410"},"content":"        public Optional\u003cDate\u003e getDate() {","lastModifiedDate":"2021-03-03"},{"lineNumber":199,"author":{"gitId":"Yiheng0410"},"content":"            return Optional.ofNullable(date);","lastModifiedDate":"2021-03-03"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"Impala36"},"content":"        public void setDate(Date date) {","lastModifiedDate":"2021-03-08"},{"lineNumber":203,"author":{"gitId":"Impala36"},"content":"            this.date \u003d date;","lastModifiedDate":"2021-03-08"},{"lineNumber":204,"author":{"gitId":"linqing42"},"content":"        }","lastModifiedDate":"2021-02-16"},{"lineNumber":205,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-16"},{"lineNumber":206,"author":{"gitId":"linqing42"},"content":"        public Optional\u003cNric\u003e getNric() {","lastModifiedDate":"2021-02-22"},{"lineNumber":207,"author":{"gitId":"linqing42"},"content":"            return Optional.ofNullable(nric);","lastModifiedDate":"2021-02-22"},{"lineNumber":208,"author":{"gitId":"linqing42"},"content":"        }","lastModifiedDate":"2021-02-16"},{"lineNumber":209,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-16"},{"lineNumber":210,"author":{"gitId":"Impala36"},"content":"        public void setNric(Nric nric) {","lastModifiedDate":"2021-03-08"},{"lineNumber":211,"author":{"gitId":"Impala36"},"content":"            this.nric \u003d nric;","lastModifiedDate":"2021-03-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"Impala36"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2021-03-08"},{"lineNumber":219,"author":{"gitId":"Impala36"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2021-03-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"Impala36"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2021-03-08"},{"lineNumber":227,"author":{"gitId":"Impala36"},"content":"            this.email \u003d email;","lastModifiedDate":"2021-03-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":234,"author":{"gitId":"Impala36"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2021-03-08"},{"lineNumber":235,"author":{"gitId":"Impala36"},"content":"            this.address \u003d address;","lastModifiedDate":"2021-03-08"},{"lineNumber":236,"author":{"gitId":"Impala36"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":237,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":238,"author":{"gitId":"Impala36"},"content":"        public Optional\u003cDescription\u003e getDescription() {","lastModifiedDate":"2021-03-08"},{"lineNumber":239,"author":{"gitId":"Impala36"},"content":"            return Optional.ofNullable(description);","lastModifiedDate":"2021-03-08"},{"lineNumber":240,"author":{"gitId":"Impala36"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":241,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":242,"author":{"gitId":"Impala36"},"content":"        public void setDescription(Description description) {","lastModifiedDate":"2021-03-08"},{"lineNumber":243,"author":{"gitId":"Impala36"},"content":"            this.description \u003d description;","lastModifiedDate":"2021-03-08"},{"lineNumber":244,"author":{"gitId":"Impala36"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":245,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":246,"author":{"gitId":"Impala36"},"content":"        public Optional\u003cRemark\u003e getRemark() {","lastModifiedDate":"2021-03-08"},{"lineNumber":247,"author":{"gitId":"Impala36"},"content":"            return Optional.ofNullable(remark);","lastModifiedDate":"2021-03-08"},{"lineNumber":248,"author":{"gitId":"Impala36"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":249,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":250,"author":{"gitId":"Impala36"},"content":"        public void setRemark(Remark remark) {","lastModifiedDate":"2021-03-08"},{"lineNumber":251,"author":{"gitId":"Impala36"},"content":"            this.remark \u003d remark;","lastModifiedDate":"2021-03-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":254,"author":{"gitId":"binbinhui"},"content":"        public Optional\u003cFollowUp\u003e getFollowUp() {","lastModifiedDate":"2021-03-24"},{"lineNumber":255,"author":{"gitId":"binbinhui"},"content":"            return Optional.ofNullable(followUp);","lastModifiedDate":"2021-03-24"},{"lineNumber":256,"author":{"gitId":"binbinhui"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":257,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":258,"author":{"gitId":"binbinhui"},"content":"        public void setFollowUp(FollowUp followUp) {","lastModifiedDate":"2021-03-24"},{"lineNumber":259,"author":{"gitId":"binbinhui"},"content":"            this.followUp \u003d followUp;","lastModifiedDate":"2021-03-24"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":263,"author":{"gitId":"Impala36"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException} if modification is","lastModifiedDate":"2021-03-08"},{"lineNumber":264,"author":{"gitId":"Impala36"},"content":"         * attempted. Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2021-03-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":270,"author":{"gitId":"Impala36"},"content":"        /**","lastModifiedDate":"2021-03-08"},{"lineNumber":271,"author":{"gitId":"Impala36"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}. A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-03-08"},{"lineNumber":272,"author":{"gitId":"Impala36"},"content":"         */","lastModifiedDate":"2021-03-08"},{"lineNumber":273,"author":{"gitId":"Impala36"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-08"},{"lineNumber":274,"author":{"gitId":"Impala36"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2021-03-08"},{"lineNumber":275,"author":{"gitId":"Impala36"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":276,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":281,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":282,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":284,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":285,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":286,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":287,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":289,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":290,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":292,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":293,"author":{"gitId":"linqing42"},"content":"                \u0026\u0026 getNric().equals(e.getNric())","lastModifiedDate":"2021-02-22"},{"lineNumber":294,"author":{"gitId":"-"},"content":"                \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":295,"author":{"gitId":"-"},"content":"                \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":296,"author":{"gitId":"-"},"content":"                \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":297,"author":{"gitId":"Impala36"},"content":"                \u0026\u0026 getDescription().equals(e.getDescription())","lastModifiedDate":"2021-03-08"},{"lineNumber":298,"author":{"gitId":"Impala36"},"content":"                \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2021-03-25"},{"lineNumber":299,"author":{"gitId":"Impala36"},"content":"                \u0026\u0026 getFollowUp().equals(e.getFollowUp());","lastModifiedDate":"2021-03-25"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":301,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-16"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"linqing42":14,"Yiheng0410":8,"Impala36":81,"-":187,"binbinhui":13}},{"path":"src/main/java/seedu/address/logic/commands/FollowUpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FOLLOWUP;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"import java.util.List;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"import seedu.address.model.person.FollowUp;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"public class FollowUpCommand extends Command {","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"    public static final String COMMAND_WORD \u003d \"followUp\";","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"    public static final String MESSAGE_INVALID \u003d \"The person index provided is invalid, must be numeric\";","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the follow up of the person identified \"","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"            + \"Existing follow up will be overwritten by the input.\\n\"","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"            + PREFIX_FOLLOWUP + \"[FOLLOW]\\n\"","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"            + PREFIX_FOLLOWUP + \"7\";","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"    public static final String MESSAGE_ADD_FOLLOWUP_SUCCESS \u003d \"Added follow up to Person: %1$s\";","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"    public static final String MESSAGE_DELETE_FOLLOWUP_SUCCESS \u003d \"Removed follow up from Person: %1$s\";","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"    private final Index index;","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"    private final FollowUp followUp;","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":"     * @param index of the person in the filtered person list to edit the followUp","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":"     * @param followUp of the person to be updated to","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":"    public FollowUpCommand(Index index, FollowUp followUp) {","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"        requireAllNonNull(index, followUp);","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":"        this.followUp \u003d followUp;","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"binbinhui"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"binbinhui"},"content":"        if (!followUp.value.matches(\"[0-9]+\")) {","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"Impala36"},"content":"            return new CommandResult(MESSAGE_INVALID);","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"binbinhui"},"content":"        } else {","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"binbinhui"},"content":"            List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"binbinhui"},"content":"            if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"binbinhui"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"binbinhui"},"content":"            }","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"binbinhui"},"content":"            Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"Impala36"},"content":"            Person editedPerson \u003d new Person(personToEdit.getName(), personToEdit.getDate(), followUp,","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"binbinhui"},"content":"                personToEdit.getNric(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"Impala36"},"content":"                personToEdit.getAddress(), personToEdit.getDescription(), personToEdit.getRemark(),","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"binbinhui"},"content":"                personToEdit.getTags());","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"binbinhui"},"content":"            model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"binbinhui"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"binbinhui"},"content":"            return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"binbinhui"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"binbinhui"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"binbinhui"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"binbinhui"},"content":"     * Generates a command execution success message based on whether the remark is added to or removed from","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"binbinhui"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"binbinhui"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"binbinhui"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"binbinhui"},"content":"        String message \u003d !followUp.value.isEmpty() ? MESSAGE_ADD_FOLLOWUP_SUCCESS : MESSAGE_DELETE_FOLLOWUP_SUCCESS;","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"binbinhui"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"binbinhui"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"binbinhui"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"binbinhui"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"binbinhui"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"binbinhui"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"binbinhui"},"content":"            return true;","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"binbinhui"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"binbinhui"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"binbinhui"},"content":"        if (!(other instanceof FollowUpCommand)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"binbinhui"},"content":"            return false;","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"binbinhui"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"binbinhui"},"content":"        // state check","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"binbinhui"},"content":"        FollowUpCommand e \u003d (FollowUpCommand) other;","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"binbinhui"},"content":"        return index.equals(e.index)","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"binbinhui"},"content":"                \u0026\u0026 followUp.equals(e.followUp);","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"binbinhui"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"binbinhui"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"Impala36":4,"binbinhui":93}},{"path":"src/main/java/seedu/address/logic/commands/RemarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-02-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2021-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2021-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2021-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        + \"by the index number used in the last person listing. \"","lastModifiedDate":"2021-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2021-02-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-02-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        + PREFIX_REMARK + \"[REMARK]\\n\"","lastModifiedDate":"2021-02-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-02-08"},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"        + PREFIX_REMARK + \"He could be just curious to see what the Istana looks like.\";","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2021-02-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2021-02-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2021-02-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Remark remark;","lastModifiedDate":"2021-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2021-02-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2021-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, Remark remark) {","lastModifiedDate":"2021-02-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2021-02-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-02-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2021-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-02-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-02-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-02-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-02-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-02-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-02-08"},{"lineNumber":56,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":57,"author":{"gitId":"Impala36"},"content":"        Person editedPerson \u003d new Person(personToEdit.getName(), personToEdit.getDate(), personToEdit.getFollowUp(),","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"Yiheng0410"},"content":"                personToEdit.getNric(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-03-03"},{"lineNumber":59,"author":{"gitId":"Impala36"},"content":"                personToEdit.getAddress(), personToEdit.getDescription(), remark, personToEdit.getTags());","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2021-02-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-02-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2021-02-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-02-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-02-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether the remark is added to or removed from","lastModifiedDate":"2021-02-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2021-02-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-02-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2021-02-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2021-02-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2021-02-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-02-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-02-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-02-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2021-02-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-02-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2021-02-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-02-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-02-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2021-02-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2021-02-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-02-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2021-02-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2021-02-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2021-02-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2021-02-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-02-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-08"}],"authorContributionMap":{"Impala36":4,"Yiheng0410":1,"-":88}},{"path":"src/main/java/seedu/address/logic/commands/RemoveTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yiheng0410"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"Yiheng0410"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"Yiheng0410"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMOVETAG;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"Yiheng0410"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"Yiheng0410"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"Yiheng0410"},"content":"import java.util.List;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"Yiheng0410"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"Yiheng0410"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"Yiheng0410"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"Yiheng0410"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"Yiheng0410"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"Yiheng0410"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"Yiheng0410"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"Yiheng0410"},"content":"/**","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":" * Removes a tag of an existing person in the address book.","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"Yiheng0410"},"content":" */","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"Yiheng0410"},"content":"public class RemoveTagCommand extends Command {","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"Yiheng0410"},"content":"    public static final String COMMAND_WORD \u003d \"removeTag\";","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"Yiheng0410"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Remove the tag of the person identified \"","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"Yiheng0410"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"Yiheng0410"},"content":"            + \"Existing tags will be overwritten by the input.\\n\"","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"Yiheng0410"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":"            + PREFIX_REMOVETAG + \"[TAG]\\n\"","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"Yiheng0410"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"Yiheng0410"},"content":"            + PREFIX_REMOVETAG + \"CalledTwice\";","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"Yiheng0410"},"content":"    public static final String MESSAGE_REMOVE_TAG_SUCCESS \u003d \"Removed tag from Person: %1$s\";","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"Yiheng0410"},"content":"    private final Index index;","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"Yiheng0410"},"content":"    private final Tag tag;","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"Yiheng0410"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"Yiheng0410"},"content":"     * @param index of the person in the filtered person list to edit the tag","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"Impala36"},"content":"     * @param tag of the person to be removed","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"Yiheng0410"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"Yiheng0410"},"content":"    public RemoveTagCommand(Index index, Tag tag) {","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"Yiheng0410"},"content":"        requireAllNonNull(index, tag);","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"Yiheng0410"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"Yiheng0410"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"Yiheng0410"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"Yiheng0410"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"Yiheng0410"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"Yiheng0410"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"Yiheng0410"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"Yiheng0410"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"Yiheng0410"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"Yiheng0410"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"Yiheng0410"},"content":"        if (personToEdit.getTags().contains(tag) \u0026\u0026 !personToEdit.getTags().isEmpty()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"Yiheng0410"},"content":"            Set\u003cTag\u003e oldTags \u003d personToEdit.getTags();","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"Yiheng0410"},"content":"            List\u003cTag\u003e newTags \u003d new ArrayList\u003c\u003e(oldTags);","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"Yiheng0410"},"content":"            newTags.remove(tag);","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"Yiheng0410"},"content":"            Set\u003cTag\u003e updatedTags \u003d Set.copyOf(newTags);","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"Yiheng0410"},"content":"            Person editedPerson \u003d new Person(personToEdit.getName(), personToEdit.getDate(),","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"Yiheng0410"},"content":"                    personToEdit.getFollowUp(), personToEdit.getNric(), personToEdit.getPhone(),","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"Yiheng0410"},"content":"                    personToEdit.getEmail(), personToEdit.getAddress(), personToEdit.getDescription(),","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"Yiheng0410"},"content":"                    personToEdit.getRemark(), updatedTags);","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"Yiheng0410"},"content":"            model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"Yiheng0410"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"Yiheng0410"},"content":"            return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"Yiheng0410"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"Yiheng0410"},"content":"        throw new CommandException(\"Incorrect tag name, please make sure the tag name is correct \"","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"Yiheng0410"},"content":"                + \"or the tag is empty, please add a new tag instead\");","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"Yiheng0410"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":74,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"Yiheng0410"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"Impala36"},"content":"     * Generates a command execution success message based on whether the tag is added to or removed from","lastModifiedDate":"2021-03-25"},{"lineNumber":77,"author":{"gitId":"Yiheng0410"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2021-03-25"},{"lineNumber":78,"author":{"gitId":"Yiheng0410"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"Yiheng0410"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2021-03-25"},{"lineNumber":80,"author":{"gitId":"Yiheng0410"},"content":"        return String.format(MESSAGE_REMOVE_TAG_SUCCESS, personToEdit);","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"Yiheng0410"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":82,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":83,"author":{"gitId":"Yiheng0410"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":84,"author":{"gitId":"Yiheng0410"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-25"},{"lineNumber":85,"author":{"gitId":"Yiheng0410"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-25"},{"lineNumber":86,"author":{"gitId":"Yiheng0410"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"Yiheng0410"},"content":"            return true;","lastModifiedDate":"2021-03-25"},{"lineNumber":88,"author":{"gitId":"Yiheng0410"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":89,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":90,"author":{"gitId":"Yiheng0410"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-25"},{"lineNumber":91,"author":{"gitId":"Yiheng0410"},"content":"        if (!(other instanceof RemoveTagCommand)) {","lastModifiedDate":"2021-03-25"},{"lineNumber":92,"author":{"gitId":"Yiheng0410"},"content":"            return false;","lastModifiedDate":"2021-03-25"},{"lineNumber":93,"author":{"gitId":"Yiheng0410"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":94,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":95,"author":{"gitId":"Yiheng0410"},"content":"        // state check","lastModifiedDate":"2021-03-25"},{"lineNumber":96,"author":{"gitId":"Yiheng0410"},"content":"        RemoveTagCommand e \u003d (RemoveTagCommand) other;","lastModifiedDate":"2021-03-25"},{"lineNumber":97,"author":{"gitId":"Yiheng0410"},"content":"        return index.equals(e.index)","lastModifiedDate":"2021-03-25"},{"lineNumber":98,"author":{"gitId":"Yiheng0410"},"content":"                \u0026\u0026 tag.equals(e.tag);","lastModifiedDate":"2021-03-25"},{"lineNumber":99,"author":{"gitId":"Yiheng0410"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":100,"author":{"gitId":"Yiheng0410"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"Yiheng0410":96,"Impala36":4}},{"path":"src/main/java/seedu/address/logic/commands/SendCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-02-28"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-02-28"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-03-07"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-02-28"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-02-28"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"import seedu.address.notification.SendEmail;","lastModifiedDate":"2021-02-28"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"public class SendCommand extends Command {","lastModifiedDate":"2021-02-28"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"    public static final String COMMAND_WORD \u003d \"send\";","lastModifiedDate":"2021-02-28"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": send person data to a colleague \"","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"            + \"or an email to the person in the list\\n\"","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"            + \"Parameters: Send INDEX e/EMAIL or send INDEX MESSAGE\\n\"","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"            + \"Example: send 1 e/hellokitty@hotmail.com OR send 1 I am not able to contact you, please call me\";","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":21,"author":{"gitId":"linqing42"},"content":"    public static final String MESSAGE_INVALID \u003d \"The person index provided is invalid\";","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Email has been sent!\";","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"    private String[] keywords;","lastModifiedDate":"2021-02-28"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"    public SendCommand(String[] keywords) {","lastModifiedDate":"2021-02-28"},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-02-28"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"    @Override","lastModifiedDate":"2021-02-28"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-02-28"},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-02-28"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"        String email \u003d \"\";","lastModifiedDate":"2021-02-28"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"        String message \u003d \"\";","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":"        Boolean numberExsit \u003d false;","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":"        int number \u003d 0;","lastModifiedDate":"2021-02-28"},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"        for (Object obj : keywords) {","lastModifiedDate":"2021-02-28"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"            System.out.println(obj);","lastModifiedDate":"2021-03-07"},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":"            if (obj.toString().contains(\"e/\")) {","lastModifiedDate":"2021-02-28"},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":"                String[] data \u003d obj.toString().split(\"e/\", 2);","lastModifiedDate":"2021-02-28"},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":"                email \u003d getEmail(data[1].trim());","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":"                message \u003d \"\";","lastModifiedDate":"2021-03-07"},{"lineNumber":46,"author":{"gitId":"binbinhui"},"content":"                if (number !\u003d 0) {","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"binbinhui"},"content":"                    break;","lastModifiedDate":"2021-03-07"},{"lineNumber":48,"author":{"gitId":"binbinhui"},"content":"                }","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"binbinhui"},"content":"            } else {","lastModifiedDate":"2021-03-07"},{"lineNumber":50,"author":{"gitId":"binbinhui"},"content":"                if (numberExsit \u003d\u003d false \u0026\u0026 isNumeric(obj.toString().trim())) {","lastModifiedDate":"2021-03-07"},{"lineNumber":51,"author":{"gitId":"binbinhui"},"content":"                    number \u003d Integer.parseInt(obj.toString().trim());","lastModifiedDate":"2021-02-28"},{"lineNumber":52,"author":{"gitId":"binbinhui"},"content":"                    numberExsit \u003d true;","lastModifiedDate":"2021-03-07"},{"lineNumber":53,"author":{"gitId":"binbinhui"},"content":"                } else {","lastModifiedDate":"2021-03-07"},{"lineNumber":54,"author":{"gitId":"binbinhui"},"content":"                    if (email \u003d\u003d \"\") {","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"binbinhui"},"content":"                        message \u003d message.concat(obj.toString() + \" \");","lastModifiedDate":"2021-03-07"},{"lineNumber":56,"author":{"gitId":"binbinhui"},"content":"                    }","lastModifiedDate":"2021-03-07"},{"lineNumber":57,"author":{"gitId":"binbinhui"},"content":"                }","lastModifiedDate":"2021-03-07"},{"lineNumber":58,"author":{"gitId":"binbinhui"},"content":"            }","lastModifiedDate":"2021-02-28"},{"lineNumber":59,"author":{"gitId":"binbinhui"},"content":"        }","lastModifiedDate":"2021-02-28"},{"lineNumber":60,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":61,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":62,"author":{"gitId":"binbinhui"},"content":"        if (number \u003e model.getFilteredPersonList().size() || number \u003c\u003d 0) {","lastModifiedDate":"2021-03-04"},{"lineNumber":63,"author":{"gitId":"binbinhui"},"content":"            return new CommandResult(String.format(MESSAGE_INVALID));","lastModifiedDate":"2021-03-04"},{"lineNumber":64,"author":{"gitId":"binbinhui"},"content":"        } else {","lastModifiedDate":"2021-03-04"},{"lineNumber":65,"author":{"gitId":"binbinhui"},"content":"            if (email \u003d\u003d \"\") {","lastModifiedDate":"2021-03-07"},{"lineNumber":66,"author":{"gitId":"binbinhui"},"content":"                email \u003d getEmail(model.getFilteredPersonList().get(number - 1).toString());","lastModifiedDate":"2021-03-07"},{"lineNumber":67,"author":{"gitId":"binbinhui"},"content":"            }","lastModifiedDate":"2021-03-07"},{"lineNumber":68,"author":{"gitId":"binbinhui"},"content":"            if (message \u003d\u003d \"\") {","lastModifiedDate":"2021-03-07"},{"lineNumber":69,"author":{"gitId":"binbinhui"},"content":"                message \u003d model.getFilteredPersonList().get(number - 1).toString();","lastModifiedDate":"2021-03-07"},{"lineNumber":70,"author":{"gitId":"binbinhui"},"content":"            }","lastModifiedDate":"2021-03-07"},{"lineNumber":71,"author":{"gitId":"binbinhui"},"content":"            System.out.println(\" email is \" + email);","lastModifiedDate":"2021-03-07"},{"lineNumber":72,"author":{"gitId":"binbinhui"},"content":"            System.out.println(\" Message is \" + message);","lastModifiedDate":"2021-03-07"},{"lineNumber":73,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":74,"author":{"gitId":"binbinhui"},"content":"            new SendEmail(email, message);","lastModifiedDate":"2021-03-07"},{"lineNumber":75,"author":{"gitId":"binbinhui"},"content":"            return new CommandResult(","lastModifiedDate":"2021-02-28"},{"lineNumber":76,"author":{"gitId":"binbinhui"},"content":"                    String.format(MESSAGE_SUCCESS));","lastModifiedDate":"2021-02-28"},{"lineNumber":77,"author":{"gitId":"binbinhui"},"content":"        }","lastModifiedDate":"2021-02-28"},{"lineNumber":78,"author":{"gitId":"binbinhui"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":79,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":80,"author":{"gitId":"binbinhui"},"content":"    public String getEmail(String email) throws CommandException {","lastModifiedDate":"2021-03-07"},{"lineNumber":81,"author":{"gitId":"binbinhui"},"content":"        String regex \u003d \".*(\\\\b[A-Z0-9._%+-]+@[A-Z0-9.-]+\\\\.[A-Z]{2,4}\\\\b).*\";","lastModifiedDate":"2021-03-07"},{"lineNumber":82,"author":{"gitId":"binbinhui"},"content":"        Pattern p \u003d Pattern.compile(regex, Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2021-03-07"},{"lineNumber":83,"author":{"gitId":"binbinhui"},"content":"        Matcher m \u003d p.matcher(email);","lastModifiedDate":"2021-03-07"},{"lineNumber":84,"author":{"gitId":"binbinhui"},"content":"        if (m.matches()) {","lastModifiedDate":"2021-03-07"},{"lineNumber":85,"author":{"gitId":"binbinhui"},"content":"            return m.group(1);","lastModifiedDate":"2021-03-07"},{"lineNumber":86,"author":{"gitId":"binbinhui"},"content":"        } else {","lastModifiedDate":"2021-03-07"},{"lineNumber":87,"author":{"gitId":"binbinhui"},"content":"            throw new CommandException(\"No valid email address found\");","lastModifiedDate":"2021-03-07"},{"lineNumber":88,"author":{"gitId":"binbinhui"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":89,"author":{"gitId":"binbinhui"},"content":"    }","lastModifiedDate":"2021-03-04"},{"lineNumber":90,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":91,"author":{"gitId":"binbinhui"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":92,"author":{"gitId":"binbinhui"},"content":"     * checking the number","lastModifiedDate":"2021-03-07"},{"lineNumber":93,"author":{"gitId":"binbinhui"},"content":"     * @param string","lastModifiedDate":"2021-03-07"},{"lineNumber":94,"author":{"gitId":"binbinhui"},"content":"     * @return","lastModifiedDate":"2021-03-07"},{"lineNumber":95,"author":{"gitId":"binbinhui"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":96,"author":{"gitId":"binbinhui"},"content":"    public boolean isNumeric(String string) {","lastModifiedDate":"2021-03-07"},{"lineNumber":97,"author":{"gitId":"binbinhui"},"content":"        int intValue;","lastModifiedDate":"2021-03-07"},{"lineNumber":98,"author":{"gitId":"binbinhui"},"content":"        if (string \u003d\u003d null || string.equals(\"\")) {","lastModifiedDate":"2021-03-07"},{"lineNumber":99,"author":{"gitId":"binbinhui"},"content":"            return false;","lastModifiedDate":"2021-03-07"},{"lineNumber":100,"author":{"gitId":"binbinhui"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":101,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":102,"author":{"gitId":"binbinhui"},"content":"        try {","lastModifiedDate":"2021-03-07"},{"lineNumber":103,"author":{"gitId":"binbinhui"},"content":"            intValue \u003d Integer.parseInt(string);","lastModifiedDate":"2021-03-07"},{"lineNumber":104,"author":{"gitId":"binbinhui"},"content":"            System.out.println(intValue);","lastModifiedDate":"2021-03-07"},{"lineNumber":105,"author":{"gitId":"binbinhui"},"content":"            return true;","lastModifiedDate":"2021-03-07"},{"lineNumber":106,"author":{"gitId":"binbinhui"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-03-07"},{"lineNumber":107,"author":{"gitId":"binbinhui"},"content":"            System.out.println(\"Input String cannot be parsed to Integer.\");","lastModifiedDate":"2021-03-07"},{"lineNumber":108,"author":{"gitId":"binbinhui"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":109,"author":{"gitId":"binbinhui"},"content":"        return false;","lastModifiedDate":"2021-03-07"},{"lineNumber":110,"author":{"gitId":"binbinhui"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":111,"author":{"gitId":"binbinhui"},"content":"}","lastModifiedDate":"2021-03-07"},{"lineNumber":112,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"linqing42":1,"Impala36":5,"binbinhui":106}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"Yiheng0410"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FOLLOWUP;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2021-02-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"linqing42"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-02-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"Yiheng0410"},"content":"import seedu.address.model.person.Date;","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"import seedu.address.model.person.Description;","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"import seedu.address.model.person.FollowUp;","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-02-16"},{"lineNumber":28,"author":{"gitId":"linqing42"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2021-02-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-02-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given {@code","lastModifiedDate":"2021-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * ArgumentMultimap}.","lastModifiedDate":"2021-02-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-02-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-02-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-02-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-02-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand and returns an AddCommand object","lastModifiedDate":"2021-02-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * for execution.","lastModifiedDate":"2021-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":54,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":56,"author":{"gitId":"Impala36"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_DATE, PREFIX_FOLLOWUP, PREFIX_NRIC, PREFIX_PHONE,","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"Impala36"},"content":"                PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_DESCRIPTION, PREFIX_REMARK, PREFIX_TAG);","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"Impala36"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_DATE, PREFIX_FOLLOWUP,","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"Impala36"},"content":"            PREFIX_NRIC, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_DESCRIPTION)","lastModifiedDate":"2021-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"linqing42"},"content":"        try {","lastModifiedDate":"2021-02-16"},{"lineNumber":65,"author":{"gitId":"Impala36"},"content":"            Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).orElseThrow());","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"Impala36"},"content":"            Date date \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).orElseThrow());","lastModifiedDate":"2021-03-08"},{"lineNumber":67,"author":{"gitId":"Impala36"},"content":"            FollowUp followUp \u003d ParserUtil.parseFollowUp(argMultimap.getValue(PREFIX_FOLLOWUP).orElseThrow());","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"Impala36"},"content":"            Nric nric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC)).orElseThrow();","lastModifiedDate":"2021-03-08"},{"lineNumber":69,"author":{"gitId":"Impala36"},"content":"            Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).orElseThrow());","lastModifiedDate":"2021-03-08"},{"lineNumber":70,"author":{"gitId":"Impala36"},"content":"            Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).orElseThrow());","lastModifiedDate":"2021-03-08"},{"lineNumber":71,"author":{"gitId":"Impala36"},"content":"            Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).orElseThrow());","lastModifiedDate":"2021-03-08"},{"lineNumber":72,"author":{"gitId":"Impala36"},"content":"            Description description \u003d ParserUtil.parseDescription(","lastModifiedDate":"2021-03-08"},{"lineNumber":73,"author":{"gitId":"Impala36"},"content":"                argMultimap.getValue(PREFIX_DESCRIPTION).orElseThrow());","lastModifiedDate":"2021-03-08"},{"lineNumber":74,"author":{"gitId":"Impala36"},"content":"            Remark remark \u003d new Remark(\"\");","lastModifiedDate":"2021-03-08"},{"lineNumber":75,"author":{"gitId":"Impala36"},"content":"            if (argMultimap.getValue(PREFIX_REMARK).isPresent()) {","lastModifiedDate":"2021-03-08"},{"lineNumber":76,"author":{"gitId":"Impala36"},"content":"                remark \u003d ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).get());","lastModifiedDate":"2021-03-08"},{"lineNumber":77,"author":{"gitId":"Impala36"},"content":"            }","lastModifiedDate":"2021-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":80,"author":{"gitId":"Impala36"},"content":"            Person person \u003d new Person(name, date, followUp, nric, phone, email, address, description, remark, tagList);","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":83,"author":{"gitId":"Impala36"},"content":"        } catch (IllegalValueException | NoSuchElementException e) {","lastModifiedDate":"2021-03-08"},{"lineNumber":84,"author":{"gitId":"linqing42"},"content":"            throw new ParseException(e.getMessage(), e);","lastModifiedDate":"2021-02-16"},{"lineNumber":85,"author":{"gitId":"linqing42"},"content":"        }","lastModifiedDate":"2021-02-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"linqing42":6,"Yiheng0410":2,"Impala36":23,"-":53,"binbinhui":3}},{"path":"src/main/java/seedu/address/logic/parser/AddTagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yiheng0410"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"Yiheng0410"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"Yiheng0410"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"Yiheng0410"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDTAG;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"Yiheng0410"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"Yiheng0410"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"Yiheng0410"},"content":"import seedu.address.logic.commands.AddTagCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"Yiheng0410"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"/**","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":" * Parses input arguments and creates a new {@code RemoveTagCommand} object","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":" */","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"Yiheng0410"},"content":"public class AddTagCommandParser implements Parser\u003cAddTagCommand\u003e {","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"Yiheng0410"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"Yiheng0410"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code RemoveTagCommand}","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"Yiheng0410"},"content":"     * and returns a {@code RemoveTagCommand} object for execution.","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"Yiheng0410"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"Yiheng0410"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"Yiheng0410"},"content":"    public AddTagCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"Yiheng0410"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"Yiheng0410"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_ADDTAG);","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"Yiheng0410"},"content":"        Index index;","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"Yiheng0410"},"content":"        try {","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"Yiheng0410"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":"            ParserUtil.parseTag(argMultimap.getValue(PREFIX_ADDTAG).orElseThrow());","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":"        } catch (IllegalValueException | NoSuchElementException e) {","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"Yiheng0410"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":"                    AddTagCommand.MESSAGE_USAGE), e);","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"Yiheng0410"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"Yiheng0410"},"content":"        return new AddTagCommand(index, ParserUtil.parseTag(argMultimap.getValue(PREFIX_ADDTAG).get()));","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"Yiheng0410"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"Yiheng0410"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"Yiheng0410":29,"Impala36":8}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"Yiheng0410"},"content":"import seedu.address.logic.commands.AddTagCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"import seedu.address.logic.commands.FollowUpCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2021-02-08"},{"lineNumber":21,"author":{"gitId":"Yiheng0410"},"content":"import seedu.address.logic.commands.RemoveTagCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"import seedu.address.logic.commands.SendCommand;","lastModifiedDate":"2021-02-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case RemarkCommand.COMMAND_WORD:","lastModifiedDate":"2021-02-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new RemarkCommandParser().parse(arguments);","lastModifiedDate":"2021-02-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-08"},{"lineNumber":70,"author":{"gitId":"binbinhui"},"content":"        case FollowUpCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"binbinhui"},"content":"            return new FollowUpCommandParser().parse(arguments);","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"Yiheng0410"},"content":"        case RemoveTagCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-25"},{"lineNumber":74,"author":{"gitId":"Yiheng0410"},"content":"            return new RemoveTagCommandParser().parse(arguments);","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"Yiheng0410"},"content":"        case AddTagCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-25"},{"lineNumber":77,"author":{"gitId":"Yiheng0410"},"content":"            return new AddTagCommandParser().parse(arguments);","lastModifiedDate":"2021-03-25"},{"lineNumber":78,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":88,"author":{"gitId":"binbinhui"},"content":"        case SendCommand.COMMAND_WORD:","lastModifiedDate":"2021-02-28"},{"lineNumber":89,"author":{"gitId":"binbinhui"},"content":"            return new SendCommandParser().parse(arguments);","lastModifiedDate":"2021-02-28"},{"lineNumber":90,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Yiheng0410":8,"-":80,"binbinhui":8}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"Yiheng0410"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":"    public static final Prefix PREFIX_NRIC \u003d new Prefix(\"i/\");","lastModifiedDate":"2021-02-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"de/\");","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\");","lastModifiedDate":"2021-02-08"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"    public static final Prefix PREFIX_FOLLOWUP \u003d new Prefix(\"f/\");","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"Yiheng0410"},"content":"    public static final Prefix PREFIX_ADDTAG \u003d new Prefix(\"at/\");","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"Yiheng0410"},"content":"    public static final Prefix PREFIX_REMOVETAG \u003d new Prefix(\"rt/\");","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"linqing42":1,"Yiheng0410":3,"Impala36":1,"-":16,"binbinhui":1}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-02-16"},{"lineNumber":6,"author":{"gitId":"Yiheng0410"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-02-16"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FOLLOWUP;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-02-16"},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2021-02-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-02-16"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-02-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"linqing42"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-02-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":41,"author":{"gitId":"Yiheng0410"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_DATE, PREFIX_NRIC, PREFIX_PHONE,","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"Impala36"},"content":"                        PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_DESCRIPTION, PREFIX_REMARK, PREFIX_TAG, PREFIX_FOLLOWUP);","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":48,"author":{"gitId":"linqing42"},"content":"        } catch (ParseException ive) {","lastModifiedDate":"2021-02-16"},{"lineNumber":49,"author":{"gitId":"linqing42"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2021-02-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"linqing42"},"content":"        try {","lastModifiedDate":"2021-02-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"Yiheng0410"},"content":"            if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2021-03-03"},{"lineNumber":58,"author":{"gitId":"Yiheng0410"},"content":"                editPersonDescriptor.setDate(ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get()));","lastModifiedDate":"2021-03-03"},{"lineNumber":59,"author":{"gitId":"Yiheng0410"},"content":"            }","lastModifiedDate":"2021-03-03"},{"lineNumber":60,"author":{"gitId":"Impala36"},"content":"            if (argMultimap.getValue(PREFIX_FOLLOWUP).isPresent()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"Impala36"},"content":"                editPersonDescriptor.setFollowUp(ParserUtil.parseFollowUp(argMultimap.getValue(PREFIX_FOLLOWUP).get()));","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"Impala36"},"content":"            }","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"linqing42"},"content":"            if (argMultimap.getValue(PREFIX_NRIC).isPresent()) {","lastModifiedDate":"2021-02-22"},{"lineNumber":64,"author":{"gitId":"linqing42"},"content":"                editPersonDescriptor.setNric(ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get()));","lastModifiedDate":"2021-02-22"},{"lineNumber":65,"author":{"gitId":"linqing42"},"content":"            }","lastModifiedDate":"2021-02-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"Impala36"},"content":"            if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2021-03-08"},{"lineNumber":76,"author":{"gitId":"Impala36"},"content":"                editPersonDescriptor.setDescription(","lastModifiedDate":"2021-03-08"},{"lineNumber":77,"author":{"gitId":"Impala36"},"content":"                    ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get()));","lastModifiedDate":"2021-03-08"},{"lineNumber":78,"author":{"gitId":"Impala36"},"content":"            }","lastModifiedDate":"2021-03-08"},{"lineNumber":79,"author":{"gitId":"Impala36"},"content":"            if (argMultimap.getValue(PREFIX_REMARK).isPresent()) {","lastModifiedDate":"2021-03-08"},{"lineNumber":80,"author":{"gitId":"Impala36"},"content":"                editPersonDescriptor.setRemark(ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).get()));","lastModifiedDate":"2021-03-08"},{"lineNumber":81,"author":{"gitId":"Impala36"},"content":"            }","lastModifiedDate":"2021-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"linqing42"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-02-16"},{"lineNumber":84,"author":{"gitId":"linqing42"},"content":"            throw new ParseException(ive.getMessage(), ive);","lastModifiedDate":"2021-02-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-02-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"linqing42":10,"Yiheng0410":5,"Impala36":14,"-":79}},{"path":"src/main/java/seedu/address/logic/parser/FollowUpCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FOLLOWUP;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"import seedu.address.logic.commands.FollowUpCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"import seedu.address.model.person.FollowUp;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"public class FollowUpCommandParser implements Parser\u003cFollowUpCommand\u003e {","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code RemarkCommand}","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"     * and returns a {@code RemarkCommand} object for execution.","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"    public FollowUpCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_FOLLOWUP);","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"        Index index;","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"        try {","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":"            ParserUtil.parseFollowUp(argMultimap.getValue(PREFIX_FOLLOWUP).orElseThrow());","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"        } catch (IllegalValueException | NoSuchElementException e) {","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":"            throw new ParseException(FollowUpCommand.MESSAGE_INVALID, e);","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"        String followUp \u003d argMultimap.getValue(PREFIX_FOLLOWUP).orElse(\"\");","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"        return new FollowUpCommand(index, new FollowUp(followUp));","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"Impala36":5,"binbinhui":32}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2021-02-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-02-16"},{"lineNumber":7,"author":{"gitId":"linqing42"},"content":"import java.util.Optional;","lastModifiedDate":"2021-02-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2021-02-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-02-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"Yiheng0410"},"content":"import seedu.address.model.person.Date;","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"import seedu.address.model.person.Description;","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"import seedu.address.model.person.FollowUp;","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-02-16"},{"lineNumber":20,"author":{"gitId":"linqing42"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2021-02-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"Yiheng0410"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":62,"author":{"gitId":"Yiheng0410"},"content":"     * Parses a {@code String date} into a {@code date}.","lastModifiedDate":"2021-03-03"},{"lineNumber":63,"author":{"gitId":"Yiheng0410"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-03"},{"lineNumber":64,"author":{"gitId":"Yiheng0410"},"content":"     *","lastModifiedDate":"2021-03-03"},{"lineNumber":65,"author":{"gitId":"Yiheng0410"},"content":"     * @throws IllegalValueException if the given {@code date} is invalid.","lastModifiedDate":"2021-03-03"},{"lineNumber":66,"author":{"gitId":"Yiheng0410"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":67,"author":{"gitId":"Yiheng0410"},"content":"    public static Date parseDate(String date) throws IllegalValueException {","lastModifiedDate":"2021-03-03"},{"lineNumber":68,"author":{"gitId":"Yiheng0410"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-03-03"},{"lineNumber":69,"author":{"gitId":"Yiheng0410"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2021-03-03"},{"lineNumber":70,"author":{"gitId":"Yiheng0410"},"content":"        if (!Date.isValidDate(trimmedDate)) {","lastModifiedDate":"2021-03-03"},{"lineNumber":71,"author":{"gitId":"Yiheng0410"},"content":"            throw new IllegalValueException(Date.MESSAGE_DATE_CONSTRAINTS);","lastModifiedDate":"2021-03-03"},{"lineNumber":72,"author":{"gitId":"Yiheng0410"},"content":"        } else if (!Date.isValidCalendarDate(trimmedDate)) {","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"Yiheng0410"},"content":"            throw new IllegalValueException(Date.MESSAGE_DATE_CONSTRAINTS);","lastModifiedDate":"2021-03-12"},{"lineNumber":74,"author":{"gitId":"Yiheng0410"},"content":"        } else {","lastModifiedDate":"2021-03-12"},{"lineNumber":75,"author":{"gitId":"Yiheng0410"},"content":"            return new Date(trimmedDate);","lastModifiedDate":"2021-03-03"},{"lineNumber":76,"author":{"gitId":"Yiheng0410"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":77,"author":{"gitId":"Yiheng0410"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":78,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-16"},{"lineNumber":79,"author":{"gitId":"linqing42"},"content":"    /**","lastModifiedDate":"2021-02-16"},{"lineNumber":80,"author":{"gitId":"linqing42"},"content":"     * Parses a {@code String nric} into a {@code Nric}.","lastModifiedDate":"2021-02-16"},{"lineNumber":81,"author":{"gitId":"linqing42"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-02-16"},{"lineNumber":82,"author":{"gitId":"linqing42"},"content":"     *","lastModifiedDate":"2021-02-16"},{"lineNumber":83,"author":{"gitId":"linqing42"},"content":"     * @throws IllegalValueException if the given {@code nric} is invalid.","lastModifiedDate":"2021-02-16"},{"lineNumber":84,"author":{"gitId":"linqing42"},"content":"     */","lastModifiedDate":"2021-02-16"},{"lineNumber":85,"author":{"gitId":"linqing42"},"content":"    public static Nric parseNric(String nric) throws IllegalValueException {","lastModifiedDate":"2021-02-22"},{"lineNumber":86,"author":{"gitId":"linqing42"},"content":"        requireNonNull(nric);","lastModifiedDate":"2021-02-22"},{"lineNumber":87,"author":{"gitId":"linqing42"},"content":"        String trimmedNric \u003d nric.trim();","lastModifiedDate":"2021-02-22"},{"lineNumber":88,"author":{"gitId":"linqing42"},"content":"        if (!Nric.isValidNric(trimmedNric)) {","lastModifiedDate":"2021-02-22"},{"lineNumber":89,"author":{"gitId":"linqing42"},"content":"            throw new IllegalValueException(Nric.MESSAGE_NRIC_CONSTRAINTS);","lastModifiedDate":"2021-02-22"},{"lineNumber":90,"author":{"gitId":"linqing42"},"content":"        }","lastModifiedDate":"2021-02-16"},{"lineNumber":91,"author":{"gitId":"linqing42"},"content":"        return new Nric(trimmedNric);","lastModifiedDate":"2021-02-22"},{"lineNumber":92,"author":{"gitId":"linqing42"},"content":"    }","lastModifiedDate":"2021-02-16"},{"lineNumber":93,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-16"},{"lineNumber":94,"author":{"gitId":"linqing42"},"content":"    /**","lastModifiedDate":"2021-02-16"},{"lineNumber":95,"author":{"gitId":"linqing42"},"content":"     * Parses a {@code Optional\u003cString\u003e nric} into an {@code Optional\u003cNric\u003e} if {@code nric} is present.","lastModifiedDate":"2021-02-16"},{"lineNumber":96,"author":{"gitId":"linqing42"},"content":"     * See header comment of this class regarding the use of {@code Optional} parameters.","lastModifiedDate":"2021-02-16"},{"lineNumber":97,"author":{"gitId":"linqing42"},"content":"     */","lastModifiedDate":"2021-02-16"},{"lineNumber":98,"author":{"gitId":"linqing42"},"content":"    public static Optional\u003cNric\u003e parseNric(Optional\u003cString\u003e nric) throws IllegalValueException {","lastModifiedDate":"2021-02-22"},{"lineNumber":99,"author":{"gitId":"linqing42"},"content":"        requireNonNull(nric);","lastModifiedDate":"2021-02-22"},{"lineNumber":100,"author":{"gitId":"linqing42"},"content":"        return nric.isPresent() ? Optional.of(parseNric(nric.get())) : Optional.empty();","lastModifiedDate":"2021-02-22"},{"lineNumber":101,"author":{"gitId":"linqing42"},"content":"    }","lastModifiedDate":"2021-02-16"},{"lineNumber":102,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"Impala36"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":149,"author":{"gitId":"Impala36"},"content":"     * Parses a {@code String description} into an {@code Description}.","lastModifiedDate":"2021-03-08"},{"lineNumber":150,"author":{"gitId":"Impala36"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-08"},{"lineNumber":151,"author":{"gitId":"Impala36"},"content":"     *","lastModifiedDate":"2021-03-08"},{"lineNumber":152,"author":{"gitId":"Impala36"},"content":"     * @throws ParseException if the given {@code description} is invalid.","lastModifiedDate":"2021-03-08"},{"lineNumber":153,"author":{"gitId":"Impala36"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":154,"author":{"gitId":"Impala36"},"content":"    public static Description parseDescription(String description) throws ParseException {","lastModifiedDate":"2021-03-08"},{"lineNumber":155,"author":{"gitId":"Impala36"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-03-08"},{"lineNumber":156,"author":{"gitId":"Impala36"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2021-03-08"},{"lineNumber":157,"author":{"gitId":"Impala36"},"content":"        if (!Description.isValidDescription(trimmedDescription)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":158,"author":{"gitId":"Impala36"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-08"},{"lineNumber":159,"author":{"gitId":"Impala36"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":160,"author":{"gitId":"Impala36"},"content":"        return new Description(trimmedDescription);","lastModifiedDate":"2021-03-08"},{"lineNumber":161,"author":{"gitId":"Impala36"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":162,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":163,"author":{"gitId":"Impala36"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":164,"author":{"gitId":"Impala36"},"content":"     * Parses a {@code String remark} into an {@code Remark}.","lastModifiedDate":"2021-03-08"},{"lineNumber":165,"author":{"gitId":"Impala36"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-08"},{"lineNumber":166,"author":{"gitId":"Impala36"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":167,"author":{"gitId":"Impala36"},"content":"    public static Remark parseRemark(String remark) {","lastModifiedDate":"2021-03-08"},{"lineNumber":168,"author":{"gitId":"Impala36"},"content":"        requireNonNull(remark);","lastModifiedDate":"2021-03-08"},{"lineNumber":169,"author":{"gitId":"Impala36"},"content":"        String trimmedRemark \u003d remark.trim();","lastModifiedDate":"2021-03-08"},{"lineNumber":170,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":171,"author":{"gitId":"Impala36"},"content":"        return new Remark(trimmedRemark);","lastModifiedDate":"2021-03-08"},{"lineNumber":172,"author":{"gitId":"Impala36"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":173,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":174,"author":{"gitId":"binbinhui"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":175,"author":{"gitId":"Impala36"},"content":"     * Parses a {@code String followUp} into an {@code FollowUp}.","lastModifiedDate":"2021-03-25"},{"lineNumber":176,"author":{"gitId":"binbinhui"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-24"},{"lineNumber":177,"author":{"gitId":"binbinhui"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":178,"author":{"gitId":"Impala36"},"content":"    public static FollowUp parseFollowUp(String followUp) throws ParseException {","lastModifiedDate":"2021-03-25"},{"lineNumber":179,"author":{"gitId":"binbinhui"},"content":"        requireNonNull(followUp);","lastModifiedDate":"2021-03-24"},{"lineNumber":180,"author":{"gitId":"binbinhui"},"content":"        String trimmedFollowUp \u003d followUp.trim();","lastModifiedDate":"2021-03-24"},{"lineNumber":181,"author":{"gitId":"Impala36"},"content":"        if (!FollowUp.isValidFollowUp(trimmedFollowUp)) {","lastModifiedDate":"2021-03-25"},{"lineNumber":182,"author":{"gitId":"Impala36"},"content":"            throw new ParseException(FollowUp.MESSAGE_FOLLOWUP_CONSTRAINTS);","lastModifiedDate":"2021-03-25"},{"lineNumber":183,"author":{"gitId":"Impala36"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":184,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":185,"author":{"gitId":"binbinhui"},"content":"        return new FollowUp(trimmedFollowUp);","lastModifiedDate":"2021-03-24"},{"lineNumber":186,"author":{"gitId":"binbinhui"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"linqing42":29,"Yiheng0410":18,"Impala36":33,"-":124,"binbinhui":9}},{"path":"src/main/java/seedu/address/logic/parser/RemoveTagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yiheng0410"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"Yiheng0410"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"Yiheng0410"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"Yiheng0410"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMOVETAG;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"Yiheng0410"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"Yiheng0410"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"Yiheng0410"},"content":"import seedu.address.logic.commands.RemoveTagCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"Yiheng0410"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"Yiheng0410"},"content":"/**","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"Yiheng0410"},"content":" * Parses input arguments and creates a new {@code RemoveTagCommand} object","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"Yiheng0410"},"content":" */","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"Yiheng0410"},"content":"public class RemoveTagCommandParser implements Parser\u003cRemoveTagCommand\u003e {","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"Yiheng0410"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code RemoveTagCommand} and returns a {@code","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"     * RemoveTagCommand} object for execution.","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"     *","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"Yiheng0410"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"Yiheng0410"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"Yiheng0410"},"content":"    public RemoveTagCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"Yiheng0410"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"Yiheng0410"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_REMOVETAG);","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"Yiheng0410"},"content":"        Index index;","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"Yiheng0410"},"content":"        try {","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"Yiheng0410"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":"            ParserUtil.parseTag(argMultimap.getValue(PREFIX_REMOVETAG).orElseThrow());","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":"        } catch (IllegalValueException | NoSuchElementException e) {","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"Yiheng0410"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":"                RemoveTagCommand.MESSAGE_USAGE), e);","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"Yiheng0410"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"Yiheng0410"},"content":"        return new RemoveTagCommand(index, ParserUtil.parseTag(argMultimap.getValue(PREFIX_REMOVETAG).get()));","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"Yiheng0410"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"Yiheng0410"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"Yiheng0410":31,"Impala36":8}},{"path":"src/main/java/seedu/address/logic/parser/SendCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-02-28"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-02-28"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"import seedu.address.logic.commands.SendCommand;","lastModifiedDate":"2021-02-28"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-28"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"public class SendCommandParser implements Parser\u003cSendCommand\u003e {","lastModifiedDate":"2021-02-28"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"    /**","lastModifiedDate":"2021-02-28"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"     * validate send command.","lastModifiedDate":"2021-02-28"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"    public SendCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-02-28"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-02-28"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-02-28"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"            throw new ParseException(","lastModifiedDate":"2021-02-28"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SendCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-02-28"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"        }","lastModifiedDate":"2021-02-28"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-02-28"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"        return new SendCommand(nameKeywords);","lastModifiedDate":"2021-02-28"},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"}","lastModifiedDate":"2021-02-28"}],"authorContributionMap":{"binbinhui":25}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"Impala36"},"content":"     * Returns true if a given string is a valid address.","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Impala36":1,"-":56}},{"path":"src/main/java/seedu/address/model/person/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yiheng0410"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"Yiheng0410"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"Yiheng0410"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"Yiheng0410"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"Yiheng0410"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"Yiheng0410"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":" * Represents the date of when the case was reported.","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDate(String)}","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"Yiheng0410"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"Yiheng0410"},"content":"public class Date {","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"Yiheng0410"},"content":"    public static final String MESSAGE_DATE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"Yiheng0410"},"content":"            \"Date should follow date format \u0027dd-mm-yyyy\u0027 and it should be a valid calendar date\";","lastModifiedDate":"2021-03-05"},{"lineNumber":17,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"Yiheng0410"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"Yiheng0410"},"content":"     * The date format is \u0027dd-mm-yyyy\u0027, with leading zero is required","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"Yiheng0410"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"Yiheng0410"},"content":"    public static final String DATE_VALIDATION_REGEX \u003d \"^(3[01]|[12][0-9]|0[1-9])-(1[0-2]|0[1-9])-[0-9]{4}$\";","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"Yiheng0410"},"content":"    public final String value;","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"Yiheng0410"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"Yiheng0410"},"content":"     * Constructs a {@code Date}.","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"Yiheng0410"},"content":"     *","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"Yiheng0410"},"content":"     * @param date A valid date.","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"Yiheng0410"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"Yiheng0410"},"content":"    public Date(String date) {","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"Yiheng0410"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"Yiheng0410"},"content":"        checkArgument(isValidDate(date), MESSAGE_DATE_CONSTRAINTS);","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"Yiheng0410"},"content":"        checkArgument(isValidCalendarDate(date), MESSAGE_DATE_CONSTRAINTS);","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"Yiheng0410"},"content":"        this.value \u003d date;","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"Yiheng0410"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"Yiheng0410"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"Yiheng0410"},"content":"    public String toString() {","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"Yiheng0410"},"content":"        return value;","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"Yiheng0410"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"Yiheng0410"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"Yiheng0410"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"Yiheng0410"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"Yiheng0410"},"content":"                || (other instanceof Date // instanceof handles nulls","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"Yiheng0410"},"content":"                \u0026\u0026 this.value.equals(((Date) other).value)); // state check","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"Yiheng0410"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"Yiheng0410"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"Yiheng0410"},"content":"     * Returns true if a given string is a valid date.","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"Yiheng0410"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"Yiheng0410"},"content":"    public static boolean isValidDate(String date) {","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"Yiheng0410"},"content":"        return date.matches(DATE_VALIDATION_REGEX);","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"Yiheng0410"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":55,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"Yiheng0410"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"Yiheng0410"},"content":"     * Returns true if a given string is a valid calendar date.","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"Yiheng0410"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"Yiheng0410"},"content":"    public static boolean isValidCalendarDate(String date) {","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"Yiheng0410"},"content":"        int days \u003d Integer.parseInt(date.substring(0, 2));","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"Yiheng0410"},"content":"        int month \u003d Integer.parseInt(date.substring(3, 5));","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"Yiheng0410"},"content":"        int year \u003d Integer.parseInt(date.substring(6, 10));","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"Impala36"},"content":"        return (!isLeapYear(year) || days \u003c\u003d 29 || month !\u003d 2)","lastModifiedDate":"2021-03-20"},{"lineNumber":64,"author":{"gitId":"Impala36"},"content":"            \u0026\u0026 (isLeapYear(year) || days \u003c\u003d 28 || month !\u003d 2);","lastModifiedDate":"2021-03-20"},{"lineNumber":65,"author":{"gitId":"Yiheng0410"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"Yiheng0410"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"Yiheng0410"},"content":"     * @param startDate start date","lastModifiedDate":"2021-03-12"},{"lineNumber":69,"author":{"gitId":"Yiheng0410"},"content":"     * @param endDate end date","lastModifiedDate":"2021-03-12"},{"lineNumber":70,"author":{"gitId":"Yiheng0410"},"content":"     * @return the number of days between start date and end date","lastModifiedDate":"2021-03-12"},{"lineNumber":71,"author":{"gitId":"Yiheng0410"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":72,"author":{"gitId":"Yiheng0410"},"content":"    public static float calculateDateDiff(String startDate, String endDate) {","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"Impala36"},"content":"        SimpleDateFormat formatter \u003d new SimpleDateFormat (\"dd-MM-yyyy\");","lastModifiedDate":"2021-03-20"},{"lineNumber":74,"author":{"gitId":"Yiheng0410"},"content":"        float daysBetween \u003d 0;","lastModifiedDate":"2021-03-12"},{"lineNumber":75,"author":{"gitId":"Yiheng0410"},"content":"        try {","lastModifiedDate":"2021-03-12"},{"lineNumber":76,"author":{"gitId":"Yiheng0410"},"content":"            java.util.Date dateBefore \u003d formatter.parse(startDate);","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"Yiheng0410"},"content":"            java.util.Date dateAfter \u003d formatter.parse(endDate);","lastModifiedDate":"2021-03-12"},{"lineNumber":78,"author":{"gitId":"Yiheng0410"},"content":"            long difference \u003d dateAfter.getTime() - dateBefore.getTime();","lastModifiedDate":"2021-03-12"},{"lineNumber":79,"author":{"gitId":"Yiheng0410"},"content":"            daysBetween \u003d (float) (difference / (1000 * 60 * 60 * 24));","lastModifiedDate":"2021-03-12"},{"lineNumber":80,"author":{"gitId":"Yiheng0410"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-03-12"},{"lineNumber":81,"author":{"gitId":"Yiheng0410"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-03-12"},{"lineNumber":82,"author":{"gitId":"Yiheng0410"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":83,"author":{"gitId":"Yiheng0410"},"content":"        //int result \u003d Integer.parseInt(String.valueOf(daysBetween));","lastModifiedDate":"2021-03-12"},{"lineNumber":84,"author":{"gitId":"Yiheng0410"},"content":"        return daysBetween;","lastModifiedDate":"2021-03-12"},{"lineNumber":85,"author":{"gitId":"Yiheng0410"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":86,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":87,"author":{"gitId":"Yiheng0410"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":88,"author":{"gitId":"Yiheng0410"},"content":"     * @param year year in integer","lastModifiedDate":"2021-03-12"},{"lineNumber":89,"author":{"gitId":"Yiheng0410"},"content":"     * @return true or false if the given year is a leap year","lastModifiedDate":"2021-03-12"},{"lineNumber":90,"author":{"gitId":"Yiheng0410"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":91,"author":{"gitId":"Yiheng0410"},"content":"    public static boolean isLeapYear(int year) {","lastModifiedDate":"2021-03-12"},{"lineNumber":92,"author":{"gitId":"Yiheng0410"},"content":"        if (year % 4 \u003d\u003d 0) {","lastModifiedDate":"2021-03-12"},{"lineNumber":93,"author":{"gitId":"Impala36"},"content":"            return true;","lastModifiedDate":"2021-03-20"},{"lineNumber":94,"author":{"gitId":"Yiheng0410"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":95,"author":{"gitId":"Impala36"},"content":"        if (year % 100 \u003d\u003d 0) {","lastModifiedDate":"2021-03-20"},{"lineNumber":96,"author":{"gitId":"Impala36"},"content":"            return year % 400 \u003d\u003d 0;","lastModifiedDate":"2021-03-20"},{"lineNumber":97,"author":{"gitId":"Yiheng0410"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":98,"author":{"gitId":"Impala36"},"content":"        return false;","lastModifiedDate":"2021-03-20"},{"lineNumber":99,"author":{"gitId":"Yiheng0410"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":100,"author":{"gitId":"Yiheng0410"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"Yiheng0410":91,"Impala36":9}},{"path":"src/main/java/seedu/address/model/person/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Impala36"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":" * Represents the case description of who were involved, what actually happened and where it took place.","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDescription(String)}","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"public class Description {","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Description can take any values, and it should not be blank\";","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"    /*","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"     * The first character of the description must not be a whitespace,","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"    public final String value;","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"     * Constructs an {@code Description}.","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"     *","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"Impala36"},"content":"     * @param description A valid description.","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":"    public Description(String description) {","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":"        value \u003d description;","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"Impala36"},"content":"     * Returns true if a given string is a valid description.","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"Impala36"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"Impala36"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"Impala36"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"Impala36"},"content":"    public String toString() {","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"Impala36"},"content":"        return value;","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"Impala36"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"Impala36"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"Impala36"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"Impala36"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"Impala36"},"content":"                || (other instanceof Description // instanceof handles nulls","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"Impala36"},"content":"                \u0026\u0026 value.equals(((Description) other).value)); // state check","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"Impala36"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":52,"author":{"gitId":"Impala36"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"Impala36"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"Impala36"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"Impala36"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"Impala36"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"Impala36":57}},{"path":"src/main/java/seedu/address/model/person/FollowUp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"/**","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":" * Represents the recursive follow up calls for a person.","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidFollowUp(String)}","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":" */","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"public class FollowUp {","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"    public static final String MESSAGE_FOLLOWUP_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"        \"FollowUp should only contain positive integers, and it should not be blank\";","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":"    public static final String VALIDATION_REGEX \u003d \"[0-9]+\";","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"    public final String value;","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"     * Constructs a {@code FollowUp}.","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"     * @param followUp A valid number of days for FollowUp.","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"    public FollowUp(String followUp) {","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"        requireNonNull(followUp);","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"        checkArgument(isValidFollowUp(followUp), MESSAGE_FOLLOWUP_CONSTRAINTS);","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"        value \u003d followUp;","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"    public String toString() {","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"        return value;","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"Impala36"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":"    public static boolean isValidFollowUp(String test) {","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"Impala36"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":"                || (other instanceof FollowUp // instanceof handles nulls","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":"                \u0026\u0026 value.equals(((FollowUp) other).value)); // state check","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"binbinhui"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"binbinhui"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"binbinhui"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"binbinhui"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"binbinhui"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"Impala36":18,"binbinhui":32}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"linqing42"},"content":"        assert(fullName !\u003d null);","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"linqing42"},"content":"        assert(fullName !\u003d null);","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"linqing42":2,"-":59}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"        if (keywords.isEmpty()) {","lastModifiedDate":"2021-02-23"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"            keywords.stream().anyMatch(","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"                keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"            return false;","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"        } else {","lastModifiedDate":"2021-02-23"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"            String obj \u003d keywords.get(0).toLowerCase();","lastModifiedDate":"2021-02-23"},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":"            if (obj.substring(obj.indexOf(\"/\") + 1).trim().isEmpty()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"Impala36"},"content":"                return true;","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"            }","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"            if (obj.contains(\"n/\")) {","lastModifiedDate":"2021-02-23"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"                return keywords.stream()","lastModifiedDate":"2021-02-23"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"                    .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2021-02-23"},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":"            } else if (obj.contains(\"de/\")) {","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"Impala36"},"content":"                return keywords.stream()","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":"                    .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getDescription().value, keyword));","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":"            } else if (obj.contains(\"d/\")) {","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"Impala36"},"content":"                return keywords.stream()","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"Impala36"},"content":"                    .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getDate().value, keyword));","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":"            } else if (obj.contains(\"i/\")) {","lastModifiedDate":"2021-02-23"},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"                return keywords.stream()","lastModifiedDate":"2021-02-23"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"                    .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getNric().value, keyword));","lastModifiedDate":"2021-02-28"},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":"            } else if (obj.contains(\"p/\")) {","lastModifiedDate":"2021-02-23"},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":"                return keywords.stream()","lastModifiedDate":"2021-02-23"},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":"                    .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getPhone().value, keyword));","lastModifiedDate":"2021-02-23"},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":"            } else if (obj.contains(\"e/\")) {","lastModifiedDate":"2021-02-23"},{"lineNumber":46,"author":{"gitId":"binbinhui"},"content":"                return keywords.stream()","lastModifiedDate":"2021-02-23"},{"lineNumber":47,"author":{"gitId":"binbinhui"},"content":"                    .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getEmail().value, keyword));","lastModifiedDate":"2021-02-23"},{"lineNumber":48,"author":{"gitId":"binbinhui"},"content":"            } else if (obj.contains(\"a/\")) {","lastModifiedDate":"2021-02-23"},{"lineNumber":49,"author":{"gitId":"binbinhui"},"content":"                return keywords.stream()","lastModifiedDate":"2021-02-23"},{"lineNumber":50,"author":{"gitId":"binbinhui"},"content":"                    .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getAddress().value, keyword));","lastModifiedDate":"2021-02-23"},{"lineNumber":51,"author":{"gitId":"Impala36"},"content":"            } else if (obj.contains(\"r/\")) {","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"Impala36"},"content":"                return keywords.stream()","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"Impala36"},"content":"                    .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getRemark().value, keyword));","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"Impala36"},"content":"            } else if (obj.contains(\"f/\")) {","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"Impala36"},"content":"                return keywords.stream()","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"Impala36"},"content":"                    .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getFollowUp().value, keyword));","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"Impala36"},"content":"            } else if (obj.contains(\"t/\")) {","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"Impala36"},"content":"                return keywords.stream()","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"Impala36"},"content":"                    .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getTags().toString(), keyword));","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"binbinhui"},"content":"            } else {","lastModifiedDate":"2021-02-23"},{"lineNumber":61,"author":{"gitId":"binbinhui"},"content":"                return keywords.stream()","lastModifiedDate":"2021-02-23"},{"lineNumber":62,"author":{"gitId":"binbinhui"},"content":"                    .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2021-02-23"},{"lineNumber":63,"author":{"gitId":"binbinhui"},"content":"            }","lastModifiedDate":"2021-02-23"},{"lineNumber":64,"author":{"gitId":"binbinhui"},"content":"        }","lastModifiedDate":"2021-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                    \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Impala36":21,"-":29,"binbinhui":24}},{"path":"src/main/java/seedu/address/model/person/Nric.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"linqing42"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-02-16"},{"lineNumber":2,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-16"},{"lineNumber":3,"author":{"gitId":"linqing42"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-02-16"},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-02-16"},{"lineNumber":5,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-16"},{"lineNumber":6,"author":{"gitId":"linqing42"},"content":"/**","lastModifiedDate":"2021-02-17"},{"lineNumber":7,"author":{"gitId":"linqing42"},"content":" * Represents a person\u0027s NRIC in the address book.","lastModifiedDate":"2021-02-17"},{"lineNumber":8,"author":{"gitId":"linqing42"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidNric(String)}","lastModifiedDate":"2021-02-22"},{"lineNumber":9,"author":{"gitId":"linqing42"},"content":" */","lastModifiedDate":"2021-02-17"},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":"public class Nric {","lastModifiedDate":"2021-02-22"},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":"    public static final String MESSAGE_NRIC_CONSTRAINTS \u003d","lastModifiedDate":"2021-02-16"},{"lineNumber":12,"author":{"gitId":"linqing42"},"content":"            \"NRIC should follow the following format:\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"linqing42"},"content":"                    + \"A capital letter,it should start with S, T, F or G,\"","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"linqing42"},"content":"                    + \"followed by 7 numerical numbers,\"","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"linqing42"},"content":"                    + \"and a capital letter with alphabetical character. It should not be blank.\\n\";","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-16"},{"lineNumber":18,"author":{"gitId":"linqing42"},"content":"    /**","lastModifiedDate":"2021-02-17"},{"lineNumber":19,"author":{"gitId":"linqing42"},"content":"     * The first character of the NRIC must not be a whitespace,","lastModifiedDate":"2021-02-16"},{"lineNumber":20,"author":{"gitId":"linqing42"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-02-16"},{"lineNumber":21,"author":{"gitId":"linqing42"},"content":"     */","lastModifiedDate":"2021-02-16"},{"lineNumber":22,"author":{"gitId":"linqing42"},"content":"    public static final String NRIC_VALIDATION_REGEX \u003d \"^[STFG]\\\\d{7}[A-Z]$\";","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-16"},{"lineNumber":24,"author":{"gitId":"linqing42"},"content":"    public final String value;","lastModifiedDate":"2021-02-16"},{"lineNumber":25,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-16"},{"lineNumber":26,"author":{"gitId":"linqing42"},"content":"    /**","lastModifiedDate":"2021-02-16"},{"lineNumber":27,"author":{"gitId":"linqing42"},"content":"     * Constructs a {@code Nric}.","lastModifiedDate":"2021-02-16"},{"lineNumber":28,"author":{"gitId":"linqing42"},"content":"     *","lastModifiedDate":"2021-02-16"},{"lineNumber":29,"author":{"gitId":"linqing42"},"content":"     * @param nric A valid NRIC.","lastModifiedDate":"2021-02-22"},{"lineNumber":30,"author":{"gitId":"linqing42"},"content":"     */","lastModifiedDate":"2021-02-16"},{"lineNumber":31,"author":{"gitId":"linqing42"},"content":"    public Nric(String nric) {","lastModifiedDate":"2021-02-22"},{"lineNumber":32,"author":{"gitId":"linqing42"},"content":"        requireNonNull(nric);","lastModifiedDate":"2021-02-22"},{"lineNumber":33,"author":{"gitId":"linqing42"},"content":"        checkArgument(isValidNric(nric), MESSAGE_NRIC_CONSTRAINTS);","lastModifiedDate":"2021-02-22"},{"lineNumber":34,"author":{"gitId":"linqing42"},"content":"        this.value \u003d nric;","lastModifiedDate":"2021-02-22"},{"lineNumber":35,"author":{"gitId":"linqing42"},"content":"    }","lastModifiedDate":"2021-02-16"},{"lineNumber":36,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-16"},{"lineNumber":37,"author":{"gitId":"linqing42"},"content":"    /**","lastModifiedDate":"2021-02-16"},{"lineNumber":38,"author":{"gitId":"linqing42"},"content":"     * Returns true if a given string is a valid patient NRIC.","lastModifiedDate":"2021-02-16"},{"lineNumber":39,"author":{"gitId":"linqing42"},"content":"     */","lastModifiedDate":"2021-02-16"},{"lineNumber":40,"author":{"gitId":"linqing42"},"content":"    public static boolean isValidNric(String test) {","lastModifiedDate":"2021-02-22"},{"lineNumber":41,"author":{"gitId":"linqing42"},"content":"        return test.matches(NRIC_VALIDATION_REGEX);","lastModifiedDate":"2021-02-16"},{"lineNumber":42,"author":{"gitId":"linqing42"},"content":"    }","lastModifiedDate":"2021-02-16"},{"lineNumber":43,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-16"},{"lineNumber":44,"author":{"gitId":"linqing42"},"content":"    @Override","lastModifiedDate":"2021-02-16"},{"lineNumber":45,"author":{"gitId":"linqing42"},"content":"    public String toString() {","lastModifiedDate":"2021-02-16"},{"lineNumber":46,"author":{"gitId":"linqing42"},"content":"        assert(value !\u003d null);","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"linqing42"},"content":"        return value;","lastModifiedDate":"2021-02-16"},{"lineNumber":48,"author":{"gitId":"linqing42"},"content":"    }","lastModifiedDate":"2021-02-16"},{"lineNumber":49,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-16"},{"lineNumber":50,"author":{"gitId":"linqing42"},"content":"    @Override","lastModifiedDate":"2021-02-16"},{"lineNumber":51,"author":{"gitId":"linqing42"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-02-16"},{"lineNumber":52,"author":{"gitId":"linqing42"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-02-16"},{"lineNumber":53,"author":{"gitId":"linqing42"},"content":"                || (other instanceof Nric // instanceof handles nulls","lastModifiedDate":"2021-02-22"},{"lineNumber":54,"author":{"gitId":"linqing42"},"content":"                \u0026\u0026 this.value.equals(((Nric) other).value)); // state check","lastModifiedDate":"2021-02-22"},{"lineNumber":55,"author":{"gitId":"linqing42"},"content":"    }","lastModifiedDate":"2021-02-16"},{"lineNumber":56,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-16"},{"lineNumber":57,"author":{"gitId":"linqing42"},"content":"    @Override","lastModifiedDate":"2021-02-16"},{"lineNumber":58,"author":{"gitId":"linqing42"},"content":"    public int hashCode() {","lastModifiedDate":"2021-02-16"},{"lineNumber":59,"author":{"gitId":"linqing42"},"content":"        assert(value !\u003d null);","lastModifiedDate":"2021-03-22"},{"lineNumber":60,"author":{"gitId":"linqing42"},"content":"        return value.hashCode();","lastModifiedDate":"2021-02-16"},{"lineNumber":61,"author":{"gitId":"linqing42"},"content":"    }","lastModifiedDate":"2021-02-16"},{"lineNumber":62,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-16"},{"lineNumber":63,"author":{"gitId":"linqing42"},"content":"}","lastModifiedDate":"2021-02-16"}],"authorContributionMap":{"linqing42":63}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":" * Represents a Person in the address book. Guarantees: details are present and not null, field values are validated,","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"Impala36"},"content":" * immutable.","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"linqing42"},"content":"    private final Nric nric;","lastModifiedDate":"2021-02-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"Yiheng0410"},"content":"    private final Date date;","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":"    private final Description description;","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Remark remark;","lastModifiedDate":"2021-02-08"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"    private final FollowUp followUp;","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":"    public Person(Name name, Date date, FollowUp followUp, Nric nric, Phone phone, Email email,","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"Impala36"},"content":"                  Address address, Description description, Remark remark, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":"        requireAllNonNull(name, date, nric, phone, email, address, description, followUp, tags);","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"Yiheng0410"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"Impala36"},"content":"        this.followUp \u003d followUp;","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"linqing42"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2021-02-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"Impala36"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2021-02-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2021-03-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2021-03-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"linqing42"},"content":"    public Date getDate() {","lastModifiedDate":"2021-03-07"},{"lineNumber":57,"author":{"gitId":"linqing42"},"content":"        return date;","lastModifiedDate":"2021-03-07"},{"lineNumber":58,"author":{"gitId":"linqing42"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":59,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":60,"author":{"gitId":"linqing42"},"content":"    public Nric getNric() {","lastModifiedDate":"2021-03-07"},{"lineNumber":61,"author":{"gitId":"linqing42"},"content":"        return nric;","lastModifiedDate":"2021-03-07"},{"lineNumber":62,"author":{"gitId":"linqing42"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":63,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":76,"author":{"gitId":"Impala36"},"content":"    public Description getDescription() {","lastModifiedDate":"2021-03-08"},{"lineNumber":77,"author":{"gitId":"Impala36"},"content":"        return description;","lastModifiedDate":"2021-03-08"},{"lineNumber":78,"author":{"gitId":"Impala36"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":79,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Remark getRemark() {","lastModifiedDate":"2021-02-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return remark;","lastModifiedDate":"2021-02-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-02-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-08"},{"lineNumber":84,"author":{"gitId":"binbinhui"},"content":"    public FollowUp getFollowUp() {","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"Impala36"},"content":"        return followUp;","lastModifiedDate":"2021-03-25"},{"lineNumber":86,"author":{"gitId":"Impala36"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":89,"author":{"gitId":"Impala36"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException} if modification is attempted.","lastModifiedDate":"2021-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"Impala36"},"content":"     * Returns true if both persons of the same name have at least one other identity field that is the same. This","lastModifiedDate":"2021-03-08"},{"lineNumber":97,"author":{"gitId":"Impala36"},"content":"     * defines a weaker notion of equality between two persons.","lastModifiedDate":"2021-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"Impala36"},"content":"        //Persons must have unique Nric, phone number and email.","lastModifiedDate":"2021-03-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"Impala36"},"content":"            \u0026\u0026 (otherPerson.getNric().equals(getNric())","lastModifiedDate":"2021-03-09"},{"lineNumber":106,"author":{"gitId":"Impala36"},"content":"                    || otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2021-03-09"},{"lineNumber":107,"author":{"gitId":"Impala36"},"content":"                    || otherPerson.getEmail().equals(getEmail()));","lastModifiedDate":"2021-03-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"Impala36"},"content":"     * Returns true if both persons have the same identity and data fields. This defines a stronger notion of equality","lastModifiedDate":"2021-03-08"},{"lineNumber":112,"author":{"gitId":"Impala36"},"content":"     * between two persons.","lastModifiedDate":"2021-03-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":126,"author":{"gitId":"linqing42"},"content":"            \u0026\u0026 otherPerson.getNric().equals(getNric())","lastModifiedDate":"2021-02-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":130,"author":{"gitId":"Impala36"},"content":"            \u0026\u0026 otherPerson.getDescription().equals(getDescription())","lastModifiedDate":"2021-03-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"Impala36"},"content":"        return Objects.hash(name, date, followUp, nric, phone, email, address, description, remark, tags);","lastModifiedDate":"2021-03-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":144,"author":{"gitId":"Impala36"},"content":"            .append(\" Date: \")","lastModifiedDate":"2021-03-25"},{"lineNumber":145,"author":{"gitId":"Yiheng0410"},"content":"            .append(getDate())","lastModifiedDate":"2021-03-03"},{"lineNumber":146,"author":{"gitId":"Impala36"},"content":"            .append(\" FollowUp: \")","lastModifiedDate":"2021-03-25"},{"lineNumber":147,"author":{"gitId":"Impala36"},"content":"            .append(getFollowUp())","lastModifiedDate":"2021-03-25"},{"lineNumber":148,"author":{"gitId":"linqing42"},"content":"            .append(\" Nric: \")","lastModifiedDate":"2021-02-22"},{"lineNumber":149,"author":{"gitId":"linqing42"},"content":"            .append(getNric())","lastModifiedDate":"2021-02-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            .append(\" Phone: \")","lastModifiedDate":"2021-02-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            .append(\" Email: \")","lastModifiedDate":"2021-02-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            .append(\" Address: \")","lastModifiedDate":"2021-02-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            .append(getAddress())","lastModifiedDate":"2021-02-08"},{"lineNumber":156,"author":{"gitId":"Impala36"},"content":"            .append(\" Description: \")","lastModifiedDate":"2021-03-08"},{"lineNumber":157,"author":{"gitId":"Impala36"},"content":"            .append(getDescription())","lastModifiedDate":"2021-03-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            .append(\" Remark: \")","lastModifiedDate":"2021-02-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            .append(getRemark())","lastModifiedDate":"2021-02-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            .append(\" Tags: \");","lastModifiedDate":"2021-02-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        getTags().forEach(builder::append);","lastModifiedDate":"2021-02-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"linqing42":13,"Impala36":30,"Yiheng0410":4,"-":114,"binbinhui":4}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"linqing42"},"content":"        assert(value !\u003d null);","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"linqing42"},"content":"        assert(value !\u003d null);","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"linqing42":2,"-":53}},{"path":"src/main/java/seedu/address/model/person/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-02-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-02-08"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":" * Represents a Person\u0027s remark in the remark book.","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2021-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Remark {","lastModifiedDate":"2021-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2021-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Constructs a {@code Remark}.","lastModifiedDate":"2021-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param remark A valid remark.","lastModifiedDate":"2021-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public Remark(String remark) {","lastModifiedDate":"2021-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        requireNonNull(remark);","lastModifiedDate":"2021-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        value \u003d remark;","lastModifiedDate":"2021-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2021-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2021-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-02-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-02-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-02-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            || (other instanceof Remark // instanceof handles nulls","lastModifiedDate":"2021-02-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                    \u0026\u0026 value.equals(((Remark) other).value)); // state check","lastModifiedDate":"2021-02-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-02-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-02-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2021-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2021-02-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-08"}],"authorContributionMap":{"Impala36":1,"-":37}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"binbinhui"},"content":"        //System.out.println(\"I am here\" + toAdd);","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                    \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":137,"binbinhui":1}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"Yiheng0410"},"content":"import seedu.address.model.person.Date;","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"import seedu.address.model.person.Description;","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"import seedu.address.model.person.FollowUp;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-02-16"},{"lineNumber":15,"author":{"gitId":"linqing42"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2021-02-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final Remark EMPTY_REMARK \u003d new Remark(\"\");","lastModifiedDate":"2021-02-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"linqing42"},"content":"            new Person(new Name(\"Alex Yeoh\"),","lastModifiedDate":"2021-02-16"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":"                new Date(\"17-03-2021\"),","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":"                new FollowUp(\"7\"),","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"linqing42"},"content":"                new Nric(\"S1234567A\"),","lastModifiedDate":"2021-02-22"},{"lineNumber":34,"author":{"gitId":"linqing42"},"content":"                new Phone(\"87438807\"),","lastModifiedDate":"2021-02-16"},{"lineNumber":35,"author":{"gitId":"linqing42"},"content":"                new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2021-02-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"Impala36"},"content":"                new Description(\"This man is a construction site manager who flew a drone over the Istana, \"","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"Impala36"},"content":"                    + \"beyond the boundary of his nearby work site, at 8.35am.\"),","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"Impala36"},"content":"                new Remark(\"He could be just curious to see what the Istana looks like.\"),","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"Impala36"},"content":"                getTagSet(\"HighPriority\", \"CalledOnce\")),","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"linqing42"},"content":"            new Person(new Name(\"Bernice Yu\"),","lastModifiedDate":"2021-02-16"},{"lineNumber":42,"author":{"gitId":"Impala36"},"content":"                new Date(\"22-02-2021\"),","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"Impala36"},"content":"                new FollowUp(\"30\"),","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"linqing42"},"content":"                new Nric(\"S7654321B\"),","lastModifiedDate":"2021-02-22"},{"lineNumber":45,"author":{"gitId":"linqing42"},"content":"                new Phone(\"99272758\"),","lastModifiedDate":"2021-02-16"},{"lineNumber":46,"author":{"gitId":"linqing42"},"content":"                new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2021-02-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"Impala36"},"content":"                new Description(\"She was molested by a Senior Investigations Officer \"","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"Impala36"},"content":"                    + \"at the Jurong Police Division Headquarters in the interview room around 9.00pm.\"),","lastModifiedDate":"2021-03-11"},{"lineNumber":50,"author":{"gitId":"Impala36"},"content":"                new Remark(\"She informed a policeman at the Police Cantonment Complex 5 days later.\"),","lastModifiedDate":"2021-03-11"},{"lineNumber":51,"author":{"gitId":"Impala36"},"content":"                getTagSet(\"MediumPriority\", \"NeverCalled\")),","lastModifiedDate":"2021-03-08"},{"lineNumber":52,"author":{"gitId":"linqing42"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"),","lastModifiedDate":"2021-02-16"},{"lineNumber":53,"author":{"gitId":"Yiheng0410"},"content":"                new Date(\"21-02-2021\"),","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"Impala36"},"content":"                new FollowUp(\"14\"),","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"linqing42"},"content":"                new Nric(\"S5671234C\"),","lastModifiedDate":"2021-02-22"},{"lineNumber":56,"author":{"gitId":"linqing42"},"content":"                new Phone(\"93210283\"),","lastModifiedDate":"2021-02-16"},{"lineNumber":57,"author":{"gitId":"linqing42"},"content":"                new Email(\"charlotte@example.com\"),","lastModifiedDate":"2021-02-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"Impala36"},"content":"                new Description(\"This woman was caught drink-driving at Clarke Quay along the River Valley Road, \"","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"Impala36"},"content":"                    + \"at 3.03am.\"),","lastModifiedDate":"2021-03-08"},{"lineNumber":61,"author":{"gitId":"Impala36"},"content":"                EMPTY_REMARK,","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"Impala36"},"content":"                getTagSet(\"LowPriority\", \"NeverCalled\")),","lastModifiedDate":"2021-03-08"},{"lineNumber":63,"author":{"gitId":"linqing42"},"content":"            new Person(new Name(\"Irfan Ibrahim\"),","lastModifiedDate":"2021-02-16"},{"lineNumber":64,"author":{"gitId":"Impala36"},"content":"                new Date(\"20-03-2021\"),","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"Impala36"},"content":"                new FollowUp(\"7\"),","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"linqing42"},"content":"                new Nric(\"S2456752E\"),","lastModifiedDate":"2021-02-22"},{"lineNumber":67,"author":{"gitId":"linqing42"},"content":"                new Phone(\"92492021\"),","lastModifiedDate":"2021-02-16"},{"lineNumber":68,"author":{"gitId":"linqing42"},"content":"                new Email(\"irfan@example.com\"),","lastModifiedDate":"2021-02-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2021-03-08"},{"lineNumber":70,"author":{"gitId":"Impala36"},"content":"                new Description(\"He is involved in a neighbour dispute with Roy Balakrishnan, about a huge \"","lastModifiedDate":"2021-03-08"},{"lineNumber":71,"author":{"gitId":"Impala36"},"content":"                    + \"potted plant that fell and broke into pieces at 6.45pm and requests for compensation.\"),","lastModifiedDate":"2021-03-08"},{"lineNumber":72,"author":{"gitId":"Impala36"},"content":"                new Remark(\"He claims that Roy bumped into the plant while walking past.\"),","lastModifiedDate":"2021-03-08"},{"lineNumber":73,"author":{"gitId":"Impala36"},"content":"                getTagSet(\"LowPriority\", \"CalledOnce\")),","lastModifiedDate":"2021-03-08"},{"lineNumber":74,"author":{"gitId":"linqing42"},"content":"            new Person(new Name(\"Roy Balakrishnan\"),","lastModifiedDate":"2021-02-16"},{"lineNumber":75,"author":{"gitId":"Impala36"},"content":"                new Date(\"20-03-2021\"),","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"Impala36"},"content":"                new FollowUp(\"7\"),","lastModifiedDate":"2021-03-25"},{"lineNumber":77,"author":{"gitId":"linqing42"},"content":"                new Nric(\"S2486752F\"),","lastModifiedDate":"2021-02-22"},{"lineNumber":78,"author":{"gitId":"linqing42"},"content":"                new Phone(\"92624417\"),","lastModifiedDate":"2021-02-16"},{"lineNumber":79,"author":{"gitId":"linqing42"},"content":"                new Email(\"royb@example.com\"),","lastModifiedDate":"2021-02-16"},{"lineNumber":80,"author":{"gitId":"Impala36"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-32\"),","lastModifiedDate":"2021-03-08"},{"lineNumber":81,"author":{"gitId":"Impala36"},"content":"                new Description(\"He is involved in a neighbour dispute with Irfan Ibrahim, about a huge \"","lastModifiedDate":"2021-03-08"},{"lineNumber":82,"author":{"gitId":"Impala36"},"content":"                    + \"potted plant that fell and broke into pieces at 6.45pm and requests for compensation.\"),","lastModifiedDate":"2021-03-08"},{"lineNumber":83,"author":{"gitId":"Impala36"},"content":"                new Remark(\"He claims that there was a strong wind which toppled the plant.\"),","lastModifiedDate":"2021-03-08"},{"lineNumber":84,"author":{"gitId":"Impala36"},"content":"                getTagSet(\"LowPriority\", \"CalledOnce\"))","lastModifiedDate":"2021-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"linqing42":21,"Yiheng0410":2,"Impala36":31,"-":50,"binbinhui":1}},{"path":"src/main/java/seedu/address/notification/SendEmail.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package seedu.address.notification;","lastModifiedDate":"2021-02-28"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import java.util.Properties;","lastModifiedDate":"2021-02-28"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import javax.mail.Message;","lastModifiedDate":"2021-02-28"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"import javax.mail.MessagingException;","lastModifiedDate":"2021-02-28"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"import javax.mail.PasswordAuthentication;","lastModifiedDate":"2021-02-28"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"import javax.mail.Session;","lastModifiedDate":"2021-02-28"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"import javax.mail.Transport;","lastModifiedDate":"2021-02-28"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"import javax.mail.internet.InternetAddress;","lastModifiedDate":"2021-02-28"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"import javax.mail.internet.MimeMessage;","lastModifiedDate":"2021-02-28"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"/**","lastModifiedDate":"2021-02-28"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":" * This is a email class where sending out the mail to user.","lastModifiedDate":"2021-02-28"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":" * Credit goes to https://pepipost.com/tutorials/send-email-in-java-using-gmail-smtp/","lastModifiedDate":"2021-02-28"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":" */","lastModifiedDate":"2021-02-28"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"public class SendEmail {","lastModifiedDate":"2021-02-28"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"    private String receiver;","lastModifiedDate":"2021-02-28"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"    private String messages;","lastModifiedDate":"2021-02-28"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"    /**","lastModifiedDate":"2021-02-28"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"     * SendEmail a msg by using the function.","lastModifiedDate":"2021-02-28"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"    public SendEmail(String receiver, String message) {","lastModifiedDate":"2021-02-28"},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"        this.receiver \u003d receiver;","lastModifiedDate":"2021-02-28"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"        this.messages \u003d message;","lastModifiedDate":"2021-02-28"},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"        sendEmail();","lastModifiedDate":"2021-02-28"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"    /**","lastModifiedDate":"2021-02-28"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"     * Send a msg by using the function.","lastModifiedDate":"2021-02-28"},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"    public void sendEmail() {","lastModifiedDate":"2021-02-28"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"        // Recipient\u0027s email ID needs to be mentioned.","lastModifiedDate":"2021-02-28"},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":"        String to \u003d receiver;","lastModifiedDate":"2021-02-28"},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":"        // Sender\u0027s email ID needs to be mentioned","lastModifiedDate":"2021-02-28"},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"        String from \u003d \"PoliceAddressBook@project.com\";","lastModifiedDate":"2021-02-28"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":"        // Assuming you are sending email from through gmail smtp","lastModifiedDate":"2021-02-28"},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":"        String host \u003d \"smtp.gmail.com\";","lastModifiedDate":"2021-02-28"},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":"        // Get system properties","lastModifiedDate":"2021-02-28"},{"lineNumber":46,"author":{"gitId":"binbinhui"},"content":"        Properties properties \u003d System.getProperties();","lastModifiedDate":"2021-02-28"},{"lineNumber":47,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":48,"author":{"gitId":"binbinhui"},"content":"        // Setup mail server","lastModifiedDate":"2021-02-28"},{"lineNumber":49,"author":{"gitId":"binbinhui"},"content":"        properties.put(\"mail.smtp.host\", host);","lastModifiedDate":"2021-02-28"},{"lineNumber":50,"author":{"gitId":"binbinhui"},"content":"        properties.put(\"mail.smtp.port\", \"465\");","lastModifiedDate":"2021-02-28"},{"lineNumber":51,"author":{"gitId":"binbinhui"},"content":"        properties.put(\"mail.smtp.ssl.enable\", \"true\");","lastModifiedDate":"2021-02-28"},{"lineNumber":52,"author":{"gitId":"binbinhui"},"content":"        properties.put(\"mail.smtp.auth\", \"true\");","lastModifiedDate":"2021-02-28"},{"lineNumber":53,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":54,"author":{"gitId":"binbinhui"},"content":"        // Get the Session object.// and pass username and password","lastModifiedDate":"2021-02-28"},{"lineNumber":55,"author":{"gitId":"binbinhui"},"content":"        Session session \u003d Session.getInstance(properties, new javax.mail.Authenticator() {","lastModifiedDate":"2021-02-28"},{"lineNumber":56,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":57,"author":{"gitId":"binbinhui"},"content":"            protected PasswordAuthentication getPasswordAuthentication() {","lastModifiedDate":"2021-02-28"},{"lineNumber":58,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":59,"author":{"gitId":"binbinhui"},"content":"                return new PasswordAuthentication(\"takeaways2017@gmail.com\", \"1QazxsW23Edc\");","lastModifiedDate":"2021-02-28"},{"lineNumber":60,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":61,"author":{"gitId":"binbinhui"},"content":"            }","lastModifiedDate":"2021-02-28"},{"lineNumber":62,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":63,"author":{"gitId":"binbinhui"},"content":"        });","lastModifiedDate":"2021-02-28"},{"lineNumber":64,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":65,"author":{"gitId":"binbinhui"},"content":"        // Used to debug SMTP issues","lastModifiedDate":"2021-02-28"},{"lineNumber":66,"author":{"gitId":"binbinhui"},"content":"        session.setDebug(true);","lastModifiedDate":"2021-02-28"},{"lineNumber":67,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":68,"author":{"gitId":"binbinhui"},"content":"        try {","lastModifiedDate":"2021-02-28"},{"lineNumber":69,"author":{"gitId":"binbinhui"},"content":"            // Create a default MimeMessage object.","lastModifiedDate":"2021-02-28"},{"lineNumber":70,"author":{"gitId":"binbinhui"},"content":"            MimeMessage message \u003d new MimeMessage(session);","lastModifiedDate":"2021-02-28"},{"lineNumber":71,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":72,"author":{"gitId":"binbinhui"},"content":"            // Set From: header field of the header.","lastModifiedDate":"2021-02-28"},{"lineNumber":73,"author":{"gitId":"binbinhui"},"content":"            message.setFrom(new InternetAddress(from));","lastModifiedDate":"2021-02-28"},{"lineNumber":74,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":75,"author":{"gitId":"binbinhui"},"content":"            // Set To: header field of the header.","lastModifiedDate":"2021-02-28"},{"lineNumber":76,"author":{"gitId":"binbinhui"},"content":"            message.addRecipient(Message.RecipientType.TO, new InternetAddress(to));","lastModifiedDate":"2021-02-28"},{"lineNumber":77,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":78,"author":{"gitId":"binbinhui"},"content":"            // Set Subject: header field","lastModifiedDate":"2021-02-28"},{"lineNumber":79,"author":{"gitId":"binbinhui"},"content":"            message.setSubject(\"The data\");","lastModifiedDate":"2021-02-28"},{"lineNumber":80,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":81,"author":{"gitId":"binbinhui"},"content":"            // Now set the actual message","lastModifiedDate":"2021-02-28"},{"lineNumber":82,"author":{"gitId":"binbinhui"},"content":"            message.setText(\"Hi \\n\" + \"This email has send to you as a notification.\\n\\n\" + messages","lastModifiedDate":"2021-03-07"},{"lineNumber":83,"author":{"gitId":"binbinhui"},"content":"                    + \"\\n\\n Best regards \\n The Police Address Book\");","lastModifiedDate":"2021-02-28"},{"lineNumber":84,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":85,"author":{"gitId":"binbinhui"},"content":"            System.out.println(\"sending...\");","lastModifiedDate":"2021-02-28"},{"lineNumber":86,"author":{"gitId":"binbinhui"},"content":"            // Send message","lastModifiedDate":"2021-02-28"},{"lineNumber":87,"author":{"gitId":"binbinhui"},"content":"            Transport.send(message);","lastModifiedDate":"2021-02-28"},{"lineNumber":88,"author":{"gitId":"binbinhui"},"content":"            System.out.println(\"Sent message successfully....\");","lastModifiedDate":"2021-02-28"},{"lineNumber":89,"author":{"gitId":"binbinhui"},"content":"        } catch (MessagingException mex) {","lastModifiedDate":"2021-02-28"},{"lineNumber":90,"author":{"gitId":"binbinhui"},"content":"            mex.printStackTrace();","lastModifiedDate":"2021-02-28"},{"lineNumber":91,"author":{"gitId":"binbinhui"},"content":"        }","lastModifiedDate":"2021-02-28"},{"lineNumber":92,"author":{"gitId":"binbinhui"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":93,"author":{"gitId":"binbinhui"},"content":"}","lastModifiedDate":"2021-02-28"}],"authorContributionMap":{"binbinhui":93}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"Yiheng0410"},"content":"import seedu.address.model.person.Date;","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"import seedu.address.model.person.Description;","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"import seedu.address.model.person.FollowUp;","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-02-16"},{"lineNumber":19,"author":{"gitId":"linqing42"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2021-02-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"Yiheng0410"},"content":"    private final String date;","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"linqing42"},"content":"    private final String nric;","lastModifiedDate":"2021-02-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"Impala36"},"content":"    private final String description;","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2021-02-08"},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"    private final String followUp;","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"Yiheng0410"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"date\") String date,","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"Yiheng0410"},"content":"                             @JsonProperty(\"nric\") String nric, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"Yiheng0410"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"Impala36"},"content":"                             @JsonProperty(\"description\") String description, @JsonProperty(\"remark\") String remark,","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"binbinhui"},"content":"                             @JsonProperty(\"followUp\") String followUp,","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"Yiheng0410"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-03"},{"lineNumber":55,"author":{"gitId":"linqing42"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2021-02-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"Impala36"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2021-02-08"},{"lineNumber":61,"author":{"gitId":"binbinhui"},"content":"        this.followUp \u003d followUp;","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"Yiheng0410"},"content":"        date \u003d source.getDate().value;","lastModifiedDate":"2021-03-03"},{"lineNumber":73,"author":{"gitId":"linqing42"},"content":"        nric \u003d source.getNric().value;","lastModifiedDate":"2021-02-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"Impala36"},"content":"        description \u003d source.getDescription().value;","lastModifiedDate":"2021-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        remark \u003d source.getRemark().value;","lastModifiedDate":"2021-02-08"},{"lineNumber":79,"author":{"gitId":"binbinhui"},"content":"        followUp \u003d source.getFollowUp().value;","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"Yiheng0410"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2021-03-03"},{"lineNumber":105,"author":{"gitId":"Yiheng0410"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-03"},{"lineNumber":106,"author":{"gitId":"Yiheng0410"},"content":"                    Date.class.getSimpleName()));","lastModifiedDate":"2021-03-03"},{"lineNumber":107,"author":{"gitId":"Yiheng0410"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":108,"author":{"gitId":"Yiheng0410"},"content":"        if (!Date.isValidDate(date)) {","lastModifiedDate":"2021-03-03"},{"lineNumber":109,"author":{"gitId":"Yiheng0410"},"content":"            throw new IllegalValueException(Date.MESSAGE_DATE_CONSTRAINTS);","lastModifiedDate":"2021-03-03"},{"lineNumber":110,"author":{"gitId":"Yiheng0410"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":111,"author":{"gitId":"Yiheng0410"},"content":"        final Date modelDate \u003d new Date(date);","lastModifiedDate":"2021-03-03"},{"lineNumber":112,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":113,"author":{"gitId":"linqing42"},"content":"        if (nric \u003d\u003d null) {","lastModifiedDate":"2021-02-22"},{"lineNumber":114,"author":{"gitId":"linqing42"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Nric.class.getSimpleName()));","lastModifiedDate":"2021-02-22"},{"lineNumber":115,"author":{"gitId":"linqing42"},"content":"        }","lastModifiedDate":"2021-02-16"},{"lineNumber":116,"author":{"gitId":"linqing42"},"content":"        if (!Nric.isValidNric(nric)) {","lastModifiedDate":"2021-02-22"},{"lineNumber":117,"author":{"gitId":"linqing42"},"content":"            throw new IllegalValueException(Nric.MESSAGE_NRIC_CONSTRAINTS);","lastModifiedDate":"2021-02-22"},{"lineNumber":118,"author":{"gitId":"linqing42"},"content":"        }","lastModifiedDate":"2021-02-16"},{"lineNumber":119,"author":{"gitId":"linqing42"},"content":"        final Nric modelNric \u003d new Nric(nric);","lastModifiedDate":"2021-02-22"},{"lineNumber":120,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"Impala36"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2021-03-08"},{"lineNumber":146,"author":{"gitId":"Impala36"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-03-08"},{"lineNumber":147,"author":{"gitId":"Impala36"},"content":"                String.format(MISSING_FIELD_MESSAGE_FORMAT, Description.class.getSimpleName()));","lastModifiedDate":"2021-03-08"},{"lineNumber":148,"author":{"gitId":"Impala36"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":149,"author":{"gitId":"Impala36"},"content":"        if (!Description.isValidDescription(description)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":150,"author":{"gitId":"Impala36"},"content":"            throw new IllegalValueException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-08"},{"lineNumber":151,"author":{"gitId":"Impala36"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":152,"author":{"gitId":"Impala36"},"content":"        final Description modelDescription \u003d new Description(description);","lastModifiedDate":"2021-03-08"},{"lineNumber":153,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        if (remark \u003d\u003d null) {","lastModifiedDate":"2021-02-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName()));","lastModifiedDate":"2021-02-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-02-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        final Remark modelRemark \u003d new Remark(remark);","lastModifiedDate":"2021-02-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-08"},{"lineNumber":159,"author":{"gitId":"binbinhui"},"content":"        if (followUp \u003d\u003d null) {","lastModifiedDate":"2021-03-24"},{"lineNumber":160,"author":{"gitId":"binbinhui"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-24"},{"lineNumber":161,"author":{"gitId":"binbinhui"},"content":"                    FollowUp.class.getSimpleName()));","lastModifiedDate":"2021-03-24"},{"lineNumber":162,"author":{"gitId":"binbinhui"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":163,"author":{"gitId":"binbinhui"},"content":"        final FollowUp modelFollowUp \u003d new FollowUp(followUp);","lastModifiedDate":"2021-03-24"},{"lineNumber":164,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":166,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":167,"author":{"gitId":"Impala36"},"content":"        return new Person(modelName, modelDate, modelFollowUp, modelNric, modelPhone,","lastModifiedDate":"2021-03-25"},{"lineNumber":168,"author":{"gitId":"Impala36"},"content":"                modelEmail, modelAddress, modelDescription, modelRemark, modelTags);","lastModifiedDate":"2021-03-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"linqing42":12,"Yiheng0410":16,"Impala36":17,"-":115,"binbinhui":11}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2021s2-tic4002-f18-1.github.io/tp2/UserGuide.html\";","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Impala36":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"    private static final String ICON_POLICE_LOGO \u003d \"/images/singapore_police_force_crest.png\";","lastModifiedDate":"2021-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"Impala36"},"content":"    @FXML","lastModifiedDate":"2021-03-20"},{"lineNumber":57,"author":{"gitId":"Impala36"},"content":"    private ImageView displayLogo;","lastModifiedDate":"2021-03-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"Impala36"},"content":"        displayLogo.setImage(new Image(ICON_POLICE_LOGO));","lastModifiedDate":"2021-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Impala36":6,"-":195}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"Impala36"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"    private static final String ICON_EXCLAMATION \u003d \"/images/exclamation_point_icon.png\";","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"Yiheng0410"},"content":"    private Label date;","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"Yiheng0410"},"content":"    @FXML","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"linqing42"},"content":"    private Label nric;","lastModifiedDate":"2021-02-22"},{"lineNumber":44,"author":{"gitId":"linqing42"},"content":"    @FXML","lastModifiedDate":"2021-02-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"Impala36"},"content":"    private Label description;","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"Impala36"},"content":"    @FXML","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"Impala36"},"content":"    private Label remarkTitle;","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"Impala36"},"content":"    @FXML","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private Label remark;","lastModifiedDate":"2021-02-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-02-08"},{"lineNumber":59,"author":{"gitId":"binbinhui"},"content":"    private Label followUp;","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"binbinhui"},"content":"    @FXML","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"Impala36"},"content":"    private Label callMessage;","lastModifiedDate":"2021-03-20"},{"lineNumber":62,"author":{"gitId":"Impala36"},"content":"    @FXML","lastModifiedDate":"2021-03-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":64,"author":{"gitId":"Impala36"},"content":"    @FXML","lastModifiedDate":"2021-03-20"},{"lineNumber":65,"author":{"gitId":"Impala36"},"content":"    private ImageView displayIcon;","lastModifiedDate":"2021-03-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Constructs a {@code PersonCard}.","lastModifiedDate":"2021-02-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-02-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param person Represents a Person in the address book.","lastModifiedDate":"2021-02-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @param displayedIndex The index of the Person.","lastModifiedDate":"2021-02-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":78,"author":{"gitId":"Yiheng0410"},"content":"        date.setText(person.getDate().value);","lastModifiedDate":"2021-03-03"},{"lineNumber":79,"author":{"gitId":"linqing42"},"content":"        nric.setText(person.getNric().value);","lastModifiedDate":"2021-02-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":83,"author":{"gitId":"Impala36"},"content":"        description.setText(person.getDescription().value);","lastModifiedDate":"2021-03-08"},{"lineNumber":84,"author":{"gitId":"Impala36"},"content":"        description.setWrapText(true);","lastModifiedDate":"2021-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        remark.setText(person.getRemark().value);","lastModifiedDate":"2021-02-08"},{"lineNumber":86,"author":{"gitId":"Impala36"},"content":"        remark.setWrapText(true);","lastModifiedDate":"2021-03-08"},{"lineNumber":87,"author":{"gitId":"Impala36"},"content":"        followUp.setText(person.getFollowUp().value + \" days\");","lastModifiedDate":"2021-03-25"},{"lineNumber":88,"author":{"gitId":"Impala36"},"content":"        remarkTitle.setText(\"\");","lastModifiedDate":"2021-03-10"},{"lineNumber":89,"author":{"gitId":"Impala36"},"content":"        callMessage.setText(\"\");","lastModifiedDate":"2021-03-20"},{"lineNumber":90,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":91,"author":{"gitId":"Impala36"},"content":"        if (new DateUtil(person.getFollowUp().value, person.getDate().value).isLastDay()","lastModifiedDate":"2021-03-25"},{"lineNumber":92,"author":{"gitId":"Impala36"},"content":"            \u0026\u0026 !person.getFollowUp().value.equals(\"0\")) {","lastModifiedDate":"2021-03-25"},{"lineNumber":93,"author":{"gitId":"Impala36"},"content":"            displayIcon.setImage(new Image(ICON_EXCLAMATION));","lastModifiedDate":"2021-03-25"},{"lineNumber":94,"author":{"gitId":"Impala36"},"content":"            callMessage.setText(\"Call Today!\");","lastModifiedDate":"2021-03-20"},{"lineNumber":95,"author":{"gitId":"Impala36"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":96,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"Impala36"},"content":"        if (!person.getRemark().value.equals(\"\")) {","lastModifiedDate":"2021-03-10"},{"lineNumber":98,"author":{"gitId":"Impala36"},"content":"            final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2021-03-25"},{"lineNumber":99,"author":{"gitId":"Impala36"},"content":"            logger.info(\"Remark present; remarkTitle will be displayed\");","lastModifiedDate":"2021-03-25"},{"lineNumber":100,"author":{"gitId":"Impala36"},"content":"            remarkTitle.setText(\"Officer\u0027s Remark\");","lastModifiedDate":"2021-03-10"},{"lineNumber":101,"author":{"gitId":"Impala36"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"linqing42":3,"Impala36":31,"Yiheng0410":3,"-":83,"binbinhui":4}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"Impala36"},"content":"    public Image getImage(String imagePath) {","lastModifiedDate":"2021-03-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Impala36":1,"-":88}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"Impala36"},"content":"    -fx-background-color: derive(#001946, 20%);","lastModifiedDate":"2021-03-20"},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"    background-color: #001946;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"Impala36"},"content":"    -fx-base: #001946;","lastModifiedDate":"2021-03-20"},{"lineNumber":44,"author":{"gitId":"Impala36"},"content":"    -fx-control-inner-background: #001946;","lastModifiedDate":"2021-03-20"},{"lineNumber":45,"author":{"gitId":"Impala36"},"content":"    -fx-background-color: #001946;","lastModifiedDate":"2021-03-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"Impala36"},"content":"    -fx-background-color: derive(#001946, 20%);","lastModifiedDate":"2021-03-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"Impala36"},"content":"    -fx-background-color: derive(#001946, 20%);","lastModifiedDate":"2021-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"Impala36"},"content":"    -fx-background-color: derive(#001946, 20%);","lastModifiedDate":"2021-03-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"Impala36"},"content":"    -fx-background-color: #001f58;","lastModifiedDate":"2021-03-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"Impala36"},"content":"    -fx-background-color: #294c8a;","lastModifiedDate":"2021-03-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"Impala36"},"content":"    -fx-background-color: #5470a1;","lastModifiedDate":"2021-03-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2017-03-02"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"Impala36"},"content":"     -fx-background-color: derive(#001946, 20%);","lastModifiedDate":"2021-03-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"Impala36"},"content":"     -fx-background-color: derive(#001946, 20%);","lastModifiedDate":"2021-03-20"},{"lineNumber":141,"author":{"gitId":"Impala36"},"content":"     -fx-border-color: derive(#001946, 10%);","lastModifiedDate":"2021-03-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"Impala36"},"content":"    -fx-background-color: derive(#001946, 30%);","lastModifiedDate":"2021-03-20"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"Impala36"},"content":"    -fx-background-color: derive(#001946, 30%);","lastModifiedDate":"2021-03-20"},{"lineNumber":169,"author":{"gitId":"Impala36"},"content":"    -fx-border-color: derive(#001946, 25%);","lastModifiedDate":"2021-03-20"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"Impala36"},"content":"    -fx-background-color: derive(#001946, 30%);","lastModifiedDate":"2021-03-20"},{"lineNumber":179,"author":{"gitId":"Impala36"},"content":"    -fx-border-color: derive(#001946, 30%);","lastModifiedDate":"2021-03-20"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"Impala36"},"content":"    -fx-background-color: derive(#001946, 30%);","lastModifiedDate":"2021-03-20"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"Impala36"},"content":"    -fx-background-color: derive(#001946, 50%);","lastModifiedDate":"2021-03-20"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"Impala36"},"content":"    -fx-background-color: derive(#001946, 20%);","lastModifiedDate":"2021-03-20"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"Impala36"},"content":"    -fx-background-color: #001946;","lastModifiedDate":"2021-03-20"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"Impala36"},"content":"  -fx-text-fill: #001946;","lastModifiedDate":"2021-03-20"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"Impala36"},"content":"    -fx-background-color: #001946;","lastModifiedDate":"2021-03-20"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"Impala36"},"content":"    -fx-background-color: #001946;","lastModifiedDate":"2021-03-20"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"Impala36"},"content":"    -fx-background-color: #001946;","lastModifiedDate":"2021-03-20"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"Impala36"},"content":"    -fx-background-color: derive(#001946, 25%);","lastModifiedDate":"2021-03-20"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"Impala36"},"content":"    -fx-background-color: derive(#001946, 20%);","lastModifiedDate":"2021-03-20"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"Impala36"},"content":"    -fx-background-color: derive(#001946, 50%);","lastModifiedDate":"2021-03-20"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"Impala36"},"content":"    -fx-background-color: transparent #001946 transparent #001946;","lastModifiedDate":"2021-03-20"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"Impala36"},"content":"    -fx-border-color: #001946 #001946 #ffffff #001946;","lastModifiedDate":"2021-03-20"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"Impala36"},"content":"    -fx-background-color: transparent, #001946, transparent, #001946;","lastModifiedDate":"2021-03-20"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"Impala36":33,"-":319}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"    -fx-background: #001946;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Impala36":1,"-":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"\u003c?import java.net.*?\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"\u003c?import javafx.scene.image.*?\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"\u003c?import javafx.stage.*?\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"\u003cfx:root minHeight\u003d\"800\" minWidth\u003d\"960\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Police Address Book\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":"        \u003cHBox\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":"          \u003cStackPane styleClass\u003d\"background\"\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"Impala36"},"content":"              \u003cInsets left\u003d\"10.0\"/\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":"            \u003cImageView fx:id\u003d\"displayLogo\" fitHeight\u003d\"160.0\" fitWidth\u003d\"160.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":37,"author":{"gitId":"Impala36"},"content":"          \u003c/StackPane\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":38,"author":{"gitId":"Impala36"},"content":"          \u003cVBox prefWidth\u003d\"2000.0\"\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":39,"author":{"gitId":"Impala36"},"content":"            \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"150\" minHeight\u003d\"150\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":40,"author":{"gitId":"Impala36"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":41,"author":{"gitId":"Impala36"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"Impala36"},"content":"            \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"Impala36"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"Impala36"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":51,"author":{"gitId":"Impala36"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":53,"author":{"gitId":"Impala36"},"content":"        \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"Impala36"},"content":"            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Impala36":24,"-":40}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"Impala36"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"Impala36"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"\u003c?import javafx.scene.image.*?\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"\u003c?import javafx.scene.text.*?\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"      \u003cHBox prefHeight\u003d\"100.0\" prefWidth\u003d\"200.0\"\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"        \u003cVBox.margin\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"          \u003cInsets top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"        \u003c/VBox.margin\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"Impala36"},"content":"        \u003cVBox maxWidth\u003d\"400.0\" minWidth\u003d\"400.0\" prefHeight\u003d\"200.0\" prefWidth\u003d\"400.0\"\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"          \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"              \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"              \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"Impala36"},"content":"              \u003cHBox.margin\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":"                \u003cInsets /\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":"              \u003c/HBox.margin\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":"            \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":"          \u003cHBox prefHeight\u003d\"100.0\" prefWidth\u003d\"200.0\"\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":"            \u003cVBox maxWidth\u003d\"70.0\" minWidth\u003d\"70.0\" prefHeight\u003d\"200.0\" prefWidth\u003d\"70.0\"\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"Impala36"},"content":"              \u003cLabel styleClass\u003d\"cell_small_label\" text\u003d\"Date:\" /\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":38,"author":{"gitId":"Impala36"},"content":"              \u003cLabel layoutX\u003d\"10.0\" layoutY\u003d\"10.0\" styleClass\u003d\"cell_small_label\" text\u003d\"NRIC:\" /\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":39,"author":{"gitId":"Impala36"},"content":"              \u003cLabel layoutX\u003d\"10.0\" layoutY\u003d\"27.0\" styleClass\u003d\"cell_small_label\" text\u003d\"Mobile:\" /\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":40,"author":{"gitId":"Impala36"},"content":"              \u003cLabel layoutX\u003d\"10.0\" layoutY\u003d\"44.0\" styleClass\u003d\"cell_small_label\" text\u003d\"Address:\" /\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":41,"author":{"gitId":"Impala36"},"content":"              \u003cLabel layoutX\u003d\"10.0\" layoutY\u003d\"61.0\" styleClass\u003d\"cell_small_label\" text\u003d\"Email:\" /\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":42,"author":{"gitId":"Impala36"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"Impala36"},"content":"            \u003cVBox prefHeight\u003d\"200.0\"\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"Impala36"},"content":"              \u003cHBox\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":45,"author":{"gitId":"Yiheng0410"},"content":"                \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"Impala36"},"content":"                 \u003cLabel styleClass\u003d\"cell_small_label\" text\u003d\"Follow-Up: \"\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"Impala36"},"content":"                           \u003cpadding\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":48,"author":{"gitId":"Impala36"},"content":"                              \u003cInsets left\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":49,"author":{"gitId":"Impala36"},"content":"                           \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"Impala36"},"content":"                 \u003cLabel fx:id\u003d\"followUp\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$followUp\" /\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"Impala36"},"content":"              \u003c/HBox\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":52,"author":{"gitId":"linqing42"},"content":"              \u003cLabel fx:id\u003d\"nric\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$nric\" /\u003e","lastModifiedDate":"2021-02-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"              \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"              \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"              \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"Impala36"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":57,"author":{"gitId":"Impala36"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":58,"author":{"gitId":"Impala36"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":59,"author":{"gitId":"Impala36"},"content":"        \u003cVBox\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":60,"author":{"gitId":"Impala36"},"content":"          \u003cHBox prefHeight\u003d\"10.0\" prefWidth\u003d\"500.0\"\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":61,"author":{"gitId":"Impala36"},"content":"            \u003cStackPane\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":62,"author":{"gitId":"Impala36"},"content":"              \u003cImageView fx:id\u003d\"displayIcon\" fitHeight\u003d\"18.0\" fitWidth\u003d\"18.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":63,"author":{"gitId":"Impala36"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":64,"author":{"gitId":"Impala36"},"content":"            \u003cLabel fx:id\u003d\"callMessage\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$callMessage\"\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":65,"author":{"gitId":"Impala36"},"content":"                     \u003cpadding\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":66,"author":{"gitId":"Impala36"},"content":"                        \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":67,"author":{"gitId":"Impala36"},"content":"                     \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":68,"author":{"gitId":"Impala36"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":69,"author":{"gitId":"Impala36"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":70,"author":{"gitId":"Impala36"},"content":"          \u003cLabel fx:id\u003d\"description1\" layoutX\u003d\"10.0\" layoutY\u003d\"10.0\" text\u003d\"Description of Case Report\"\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":71,"author":{"gitId":"Impala36"},"content":"            \u003cfont\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":72,"author":{"gitId":"Impala36"},"content":"              \u003cFont name\u003d\"System Italic\" size\u003d\"40.0\" /\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":73,"author":{"gitId":"Impala36"},"content":"            \u003c/font\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":74,"author":{"gitId":"Impala36"},"content":"            \u003cVBox.margin\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":75,"author":{"gitId":"Impala36"},"content":"              \u003cInsets /\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":76,"author":{"gitId":"Impala36"},"content":"            \u003c/VBox.margin\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":77,"author":{"gitId":"Impala36"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":78,"author":{"gitId":"Impala36"},"content":"          \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$description\"\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":79,"author":{"gitId":"Impala36"},"content":"            \u003cVBox.margin\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":80,"author":{"gitId":"Impala36"},"content":"              \u003cInsets /\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":81,"author":{"gitId":"Impala36"},"content":"            \u003c/VBox.margin\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":82,"author":{"gitId":"Impala36"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":83,"author":{"gitId":"Impala36"},"content":"          \u003cLabel fx:id\u003d\"remarkTitle\" layoutX\u003d\"10.0\" layoutY\u003d\"10.0\" text\u003d\"\\$remarkTitle\"\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":84,"author":{"gitId":"Impala36"},"content":"            \u003cfont\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":85,"author":{"gitId":"Impala36"},"content":"              \u003cFont name\u003d\"System Bold\" size\u003d\"40.0\" /\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":86,"author":{"gitId":"Impala36"},"content":"            \u003c/font\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":87,"author":{"gitId":"Impala36"},"content":"            \u003cVBox.margin\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":88,"author":{"gitId":"Impala36"},"content":"              \u003cInsets /\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":89,"author":{"gitId":"Impala36"},"content":"            \u003c/VBox.margin\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":90,"author":{"gitId":"Impala36"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2021-02-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":95,"author":{"gitId":"Impala36"},"content":"    \u003crowConstraints\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":96,"author":{"gitId":"Impala36"},"content":"      \u003cRowConstraints /\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":97,"author":{"gitId":"Impala36"},"content":"    \u003c/rowConstraints\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"linqing42":1,"Impala36":71,"Yiheng0410":1,"-":26}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidAndValidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Valid Person\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":"    \"nric\": \"S1234567B\",","lastModifiedDate":"2021-02-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \"name\": \"Person With Invalid Phone Field\",","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":"    \"nric\": \"S1234568C\",","lastModifiedDate":"2021-02-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"phone\": \"948asdf2424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"linqing42":2,"-":13}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":"    \"nric\": \"S1234567B\",","lastModifiedDate":"2021-02-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"linqing42":1,"-":8}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicatePersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"Yiheng0410"},"content":"    \"date\": \"01-02-2020\",","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"linqing42"},"content":"    \"nric\": \"S1234567F\",","lastModifiedDate":"2021-02-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"    \"description\": \"She was molested by a Senior Investigations Officer at the Jurong Police Division Headquarters in the interview room around 9.00pm.\",","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"remark\" : \"\",","lastModifiedDate":"2021-02-10"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"    \"followUp\" : \"7\",","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"    \"tagged\": [ \"NeverCalled\" ]","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"Yiheng0410"},"content":"    \"date\": \"01-02-2020\",","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"linqing42"},"content":"    \"nric\": \"S1234567F\",","lastModifiedDate":"2021-02-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \"email\": \"pauline@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-02-10"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"    \"description\": \"She was molested by a Senior Investigations Officer at the Jurong Police Division Headquarters in the interview room around 9.00pm.\",","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"    \"remark\" : \"\",","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"    \"followUp\" : \"7\"","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"linqing42":2,"Yiheng0410":2,"Impala36":3,"-":14,"binbinhui":3}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Hans Muster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":"    \"nric\": \"S1234564F\",","lastModifiedDate":"2021-02-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\": \"invalid@email!3e\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"linqing42":1,"-":8}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalPersonsAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"_comment\": \"AddressBook save file which contains the same Person values as in TypicalPersons#getTypicalAddressBook()\",","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \"persons\" : [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"Yiheng0410"},"content":"    \"date\": \"01-02-2020\",","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"linqing42"},"content":"    \"nric\" : \"S1234567B\",","lastModifiedDate":"2021-02-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"    \"description\": \"She was molested by a Senior Investigations Officer at the Jurong Police Division Headquarters in the interview room around 9.00pm.\",","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"remark\" : \"\",","lastModifiedDate":"2021-02-10"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"    \"followUp\" : \"7\",","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"    \"tagged\" : [ \"NeverCalled\" ]","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"Yiheng0410"},"content":"    \"date\": \"01-02-2020\",","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"linqing42"},"content":"    \"nric\" : \"S1234569B\",","lastModifiedDate":"2021-02-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \"address\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"Impala36"},"content":"    \"description\": \"This man is a construction site manager who flew a drone over the Istana, beyond the boundary of his nearby work site, at 8.35am.\",","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \"remark\" : \"\",","lastModifiedDate":"2021-02-10"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"    \"followUp\" : \"7\",","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"    \"tagged\" : [ \"LowPriority\", \"NeverCalled\" ]","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"Yiheng0410"},"content":"    \"date\": \"01-02-2020\",","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"linqing42"},"content":"    \"nric\" : \"S1234567C\",","lastModifiedDate":"2021-02-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \"email\" : \"heinz@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \"address\" : \"wall street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":"    \"description\": \"This man is a construction site manager who flew a drone over the Istana, beyond the boundary of his nearby work site, at 8.35am.\",","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \"remark\" : \"\",","lastModifiedDate":"2021-02-10"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"    \"followUp\" : \"7\",","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"Yiheng0410"},"content":"    \"date\": \"01-02-2020\",","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"linqing42"},"content":"    \"nric\" : \"S1234565E\",","lastModifiedDate":"2021-02-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \"address\" : \"10th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"Impala36"},"content":"    \"description\": \"This man is a construction site manager who flew a drone over the Istana, beyond the boundary of his nearby work site, at 8.35am.\",","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \"remark\" : \"\",","lastModifiedDate":"2021-02-10"},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":"    \"followUp\" : \"7\",","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"Impala36"},"content":"    \"tagged\" : [ \"NeverCalled\" ]","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"Yiheng0410"},"content":"    \"date\": \"01-02-2020\",","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"linqing42"},"content":"    \"nric\" : \"S2234567B\",","lastModifiedDate":"2021-02-22"},{"lineNumber":51,"author":{"gitId":"Impala36"},"content":"    \"phone\" : \"94822241\",","lastModifiedDate":"2021-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    \"email\" : \"werner@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    \"address\" : \"michegan ave\",","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"Impala36"},"content":"    \"description\": \"She was molested by a Senior Investigations Officer at the Jurong Police Division Headquarters in the interview room around 9.00pm.\",","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \"remark\" : \"\",","lastModifiedDate":"2021-02-10"},{"lineNumber":56,"author":{"gitId":"binbinhui"},"content":"    \"followUp\" : \"7\",","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"Yiheng0410"},"content":"    \"date\": \"01-02-2020\",","lastModifiedDate":"2021-03-03"},{"lineNumber":61,"author":{"gitId":"linqing42"},"content":"    \"nric\" : \"S3234567B\",","lastModifiedDate":"2021-02-22"},{"lineNumber":62,"author":{"gitId":"Impala36"},"content":"    \"phone\" : \"94824272\",","lastModifiedDate":"2021-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    \"email\" : \"lydia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \"address\" : \"little tokyo\",","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"Impala36"},"content":"    \"description\": \"She was molested by a Senior Investigations Officer at the Jurong Police Division Headquarters in the interview room around 9.00pm.\",","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    \"remark\" : \"\",","lastModifiedDate":"2021-02-10"},{"lineNumber":67,"author":{"gitId":"binbinhui"},"content":"    \"followUp\" : \"7\",","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"Yiheng0410"},"content":"    \"date\": \"01-02-2020\",","lastModifiedDate":"2021-03-03"},{"lineNumber":72,"author":{"gitId":"linqing42"},"content":"    \"nric\" : \"S1234567F\",","lastModifiedDate":"2021-02-22"},{"lineNumber":73,"author":{"gitId":"Impala36"},"content":"    \"phone\" : \"94824423\",","lastModifiedDate":"2021-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    \"email\" : \"anna@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    \"address\" : \"4th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"Impala36"},"content":"    \"description\": \"This man is a construction site manager who flew a drone over the Istana, beyond the boundary of his nearby work site, at 8.35am.\",","lastModifiedDate":"2021-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    \"remark\" : \"\",","lastModifiedDate":"2021-02-10"},{"lineNumber":78,"author":{"gitId":"binbinhui"},"content":"    \"followUp\" : \"7\",","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"linqing42":7,"Yiheng0410":7,"Impala36":13,"-":47,"binbinhui":7}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"binbinhui"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2021-02-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":142,"binbinhui":1}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"Yiheng0410"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_AMY;","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESCRIPTION_AMY;","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FOLLOWUP_DESC_AMY;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"linqing42"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_AMY;","lastModifiedDate":"2021-02-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"Impala36"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + DATE_DESC_AMY + FOLLOWUP_DESC_AMY","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"Impala36"},"content":"                + NRIC_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + DESCRIPTION_AMY;","lastModifiedDate":"2021-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"linqing42":1,"Yiheng0410":1,"Impala36":4,"-":160}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"Yiheng0410"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FOLLOWUP;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2021-02-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"Yiheng0410"},"content":"    public static final String VALID_DATE_AMY \u003d \"01-02-2021\";","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"Yiheng0410"},"content":"    public static final String VALID_DATE_BOB \u003d \"11-02-2020\";","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"linqing42"},"content":"    public static final String VALID_NRIC_AMY \u003d \"S1234567B\";","lastModifiedDate":"2021-02-22"},{"lineNumber":38,"author":{"gitId":"linqing42"},"content":"    public static final String VALID_NRIC_BOB \u003d \"S2345678B\";","lastModifiedDate":"2021-02-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"Impala36"},"content":"    public static final String VALID_DESCRIPTION_AMY \u003d \"She was molested by a Senior Investigations Officer \"","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"Impala36"},"content":"        + \"at the Jurong Police Division Headquarters in the interview room around 9.00pm.\";","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"Impala36"},"content":"    public static final String VALID_DESCRIPTION_BOB \u003d \"This man is a construction site manager who flew a drone over\"","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"Impala36"},"content":"        + \" the Istana, beyond the boundary of his nearby work site, at 8.35am.\";","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"Impala36"},"content":"    public static final String VALID_REMARK_AMY \u003d \"She informed a policeman at the Police Cantonment Complex\"","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"Impala36"},"content":"        + \" 5 days later.\";","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"Impala36"},"content":"    public static final String VALID_REMARK_BOB \u003d \"He could be just curious to see what the Istana looks like.\";","lastModifiedDate":"2021-03-08"},{"lineNumber":52,"author":{"gitId":"binbinhui"},"content":"    public static final String VALID_FOLLOWUP_AMY \u003d \"8\";","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"binbinhui"},"content":"    public static final String VALID_FOLLOWUP_BOB \u003d \"8\";","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"Impala36"},"content":"    public static final String VALID_TAG_SEVERITY \u003d \"HighPriority\";","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"Impala36"},"content":"    public static final String VALID_TAG_CALLED \u003d \"CalledOnce\";","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"Yiheng0410"},"content":"    public static final String DATE_DESC_AMY \u003d \" \" + PREFIX_DATE + VALID_DATE_AMY;","lastModifiedDate":"2021-03-03"},{"lineNumber":60,"author":{"gitId":"Yiheng0410"},"content":"    public static final String DATE_DESC_BOB \u003d \" \" + PREFIX_DATE + VALID_DATE_BOB;","lastModifiedDate":"2021-03-03"},{"lineNumber":61,"author":{"gitId":"Impala36"},"content":"    public static final String FOLLOWUP_DESC_AMY \u003d \" \" + PREFIX_FOLLOWUP + VALID_FOLLOWUP_AMY;","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"Impala36"},"content":"    public static final String FOLLOWUP_DESC_BOB \u003d \" \" + PREFIX_FOLLOWUP + VALID_FOLLOWUP_BOB;","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"linqing42"},"content":"    public static final String NRIC_DESC_AMY \u003d \" \" + PREFIX_NRIC + VALID_NRIC_AMY;","lastModifiedDate":"2021-02-22"},{"lineNumber":64,"author":{"gitId":"linqing42"},"content":"    public static final String NRIC_DESC_BOB \u003d \" \" + PREFIX_NRIC + VALID_NRIC_BOB;","lastModifiedDate":"2021-02-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"Impala36"},"content":"    public static final String DESCRIPTION_AMY \u003d \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION_AMY;","lastModifiedDate":"2021-03-08"},{"lineNumber":72,"author":{"gitId":"Impala36"},"content":"    public static final String DESCRIPTION_BOB \u003d \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION_BOB;","lastModifiedDate":"2021-03-08"},{"lineNumber":73,"author":{"gitId":"Impala36"},"content":"    public static final String TAG_DESC_CALLED \u003d \" \" + PREFIX_TAG + VALID_TAG_CALLED;","lastModifiedDate":"2021-03-08"},{"lineNumber":74,"author":{"gitId":"Impala36"},"content":"    public static final String TAG_DESC_SEVERITY \u003d \" \" + PREFIX_TAG + VALID_TAG_SEVERITY;","lastModifiedDate":"2021-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"Yiheng0410"},"content":"    public static final String INVALID_DATE_DESC \u003d \" \" + PREFIX_DATE + \"11/30/2020\";","lastModifiedDate":"2021-03-03"},{"lineNumber":78,"author":{"gitId":"Impala36"},"content":"    public static final String INVALID_FOLLOWUP_DESC \u003d \" \" + PREFIX_FOLLOWUP + \"-5\";","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"linqing42"},"content":"    //missing 1 numeric number,\u0027\u0026\u0027 not allowed in nric","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"linqing42"},"content":"    public static final String INVALID_NRIC_DESC \u003d \" \" + PREFIX_NRIC + \"S11111B\u0026\";","lastModifiedDate":"2021-02-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"Impala36"},"content":"    public static final String INVALID_DESCRIPTION \u003d \" \" + PREFIX_DESCRIPTION; // empty string invalid for description","lastModifiedDate":"2021-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"Yiheng0410"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).withDate(VALID_DATE_AMY)","lastModifiedDate":"2021-03-03"},{"lineNumber":95,"author":{"gitId":"Impala36"},"content":"                .withFollowUp(VALID_FOLLOWUP_AMY).withIC(VALID_NRIC_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-03-25"},{"lineNumber":96,"author":{"gitId":"Impala36"},"content":"                .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2021-03-25"},{"lineNumber":97,"author":{"gitId":"Impala36"},"content":"                .withDescription(VALID_DESCRIPTION_AMY).withTags(VALID_TAG_CALLED).build();","lastModifiedDate":"2021-03-25"},{"lineNumber":98,"author":{"gitId":"Yiheng0410"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).withDate(VALID_DATE_BOB)","lastModifiedDate":"2021-03-03"},{"lineNumber":99,"author":{"gitId":"Impala36"},"content":"                .withFollowUp(VALID_FOLLOWUP_BOB).withIC(VALID_NRIC_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-25"},{"lineNumber":100,"author":{"gitId":"Impala36"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withDescription(VALID_DESCRIPTION_BOB)","lastModifiedDate":"2021-03-25"},{"lineNumber":101,"author":{"gitId":"Impala36"},"content":"                .withTags(VALID_TAG_SEVERITY, VALID_TAG_CALLED).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"linqing42":7,"Yiheng0410":8,"Impala36":25,"-":118,"binbinhui":2}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_SEVERITY;","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":45,"author":{"gitId":"Impala36"},"content":"                .withTags(VALID_TAG_SEVERITY).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":48,"author":{"gitId":"Impala36"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_SEVERITY).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"Impala36":3,"-":157}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_SEVERITY;","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"Impala36"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_SEVERITY).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Impala36":2,"-":56}},{"path":"src/test/java/seedu/address/logic/commands/FollowUpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FOLLOWUP_BOB;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"import seedu.address.model.person.FollowUp;","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":" * Contains integration tests (interaction with the Model) and unit tests for RemarkCommand.","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"public class FollowUpCommandTest {","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"    private static final String FollowUp_STUB \u003d \"8\";","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"    public void execute_addFollowUpUnfilteredList_success() {","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withFollowUp(FollowUp_STUB).build();","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":"        FollowUpCommand followUpCommand \u003d new FollowUpCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"                new FollowUp(editedPerson.getFollowUp().value));","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":"        String expectedMessage \u003d String.format(FollowUpCommand.MESSAGE_ADD_FOLLOWUP_SUCCESS, editedPerson);","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"binbinhui"},"content":"        assertCommandSuccess(followUpCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"binbinhui"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"binbinhui"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"binbinhui"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"binbinhui"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"binbinhui"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"binbinhui"},"content":"        Person editedPerson \u003d new PersonBuilder(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()))","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"binbinhui"},"content":"                .withFollowUp(FollowUp_STUB).build();","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"binbinhui"},"content":"        FollowUpCommand followUpCommand \u003d new FollowUpCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"binbinhui"},"content":"                new FollowUp(editedPerson.getFollowUp().toString()));","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"binbinhui"},"content":"        String expectedMessage \u003d String.format(FollowUpCommand.MESSAGE_ADD_FOLLOWUP_SUCCESS, editedPerson);","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"binbinhui"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"binbinhui"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"binbinhui"},"content":"        assertCommandSuccess(followUpCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"binbinhui"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"binbinhui"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"binbinhui"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"binbinhui"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"binbinhui"},"content":"        FollowUpCommand followUpCommand \u003d new FollowUpCommand(outOfBoundIndex, new FollowUp(VALID_FOLLOWUP_BOB));","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"binbinhui"},"content":"        assertCommandFailure(followUpCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"binbinhui"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"binbinhui"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"binbinhui"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"binbinhui"},"content":"     * but smaller than size of address book","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"binbinhui"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"binbinhui"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"binbinhui"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"binbinhui"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"binbinhui"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"binbinhui"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"binbinhui"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"binbinhui"},"content":"        FollowUpCommand followUpCommand \u003d new FollowUpCommand(outOfBoundIndex, new FollowUp(VALID_FOLLOWUP_BOB));","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"binbinhui"},"content":"        assertCommandFailure(followUpCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"binbinhui"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"binbinhui"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"binbinhui":92}},{"path":"src/test/java/seedu/address/logic/commands/SendCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"binbinhui"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"binbinhui"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-07"},{"lineNumber":4,"author":{"gitId":"binbinhui"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-07"},{"lineNumber":5,"author":{"gitId":"binbinhui"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-07"},{"lineNumber":6,"author":{"gitId":"binbinhui"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"binbinhui"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-07"},{"lineNumber":9,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"binbinhui"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"binbinhui"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"binbinhui"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"binbinhui"},"content":"public class SendCommandTest {","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"binbinhui"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"binbinhui"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"binbinhui"},"content":"    public void invalidEmailAddress() {","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"binbinhui"},"content":"        String email \u003d \"hello.com\";","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"binbinhui"},"content":"        String[] command \u003d new String[0];","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"binbinhui"},"content":"        SendCommand sendCommand \u003d new SendCommand(command);","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"binbinhui"},"content":"        try {","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"binbinhui"},"content":"            assertEquals(sendCommand.getEmail(email), \"No valid email address found\");","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"binbinhui"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"binbinhui"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-03-07"},{"lineNumber":31,"author":{"gitId":"binbinhui"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"binbinhui"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":33,"author":{"gitId":"binbinhui"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"binbinhui"},"content":"    public void integerNumber() {","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"        String number \u003d \"hello\";","lastModifiedDate":"2021-03-07"},{"lineNumber":36,"author":{"gitId":"binbinhui"},"content":"        String[] command \u003d new String[0];","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"binbinhui"},"content":"        SendCommand sendCommand \u003d new SendCommand(command);","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"binbinhui"},"content":"        // false when number is hello","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"binbinhui"},"content":"        assertFalse(sendCommand.isNumeric(number));","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":42,"author":{"gitId":"binbinhui"},"content":"        number \u003d \"1\";","lastModifiedDate":"2021-03-07"},{"lineNumber":43,"author":{"gitId":"binbinhui"},"content":"        // true when number is 1","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"binbinhui"},"content":"        assertTrue(sendCommand.isNumeric(number));","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"binbinhui"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":46,"author":{"gitId":"binbinhui"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"binbinhui"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"binbinhui":47}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"Yiheng0410"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_AMY;","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"Yiheng0410"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_BOB;","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESCRIPTION_AMY;","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESCRIPTION_BOB;","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FOLLOWUP_DESC_AMY;","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FOLLOWUP_DESC_BOB;","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"Yiheng0410"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATE_DESC;","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DESCRIPTION;","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_FOLLOWUP_DESC;","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"linqing42"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NRIC_DESC;","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"linqing42"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_AMY;","lastModifiedDate":"2021-02-22"},{"lineNumber":26,"author":{"gitId":"linqing42"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_BOB;","lastModifiedDate":"2021-02-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_CALLED;","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_SEVERITY;","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"Yiheng0410"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_BOB;","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_BOB;","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FOLLOWUP_BOB;","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"linqing42"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2021-02-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_CALLED;","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_SEVERITY;","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"Yiheng0410"},"content":"import seedu.address.model.person.Date;","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"Impala36"},"content":"import seedu.address.model.person.Description;","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"Impala36"},"content":"import seedu.address.model.person.FollowUp;","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"linqing42"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"Impala36"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_CALLED).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"Yiheng0410"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + DATE_DESC_BOB","lastModifiedDate":"2021-03-03"},{"lineNumber":72,"author":{"gitId":"Impala36"},"content":"                + FOLLOWUP_DESC_BOB + NRIC_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"Impala36"},"content":"                + ADDRESS_DESC_BOB + DESCRIPTION_BOB + TAG_DESC_CALLED, new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"Yiheng0410"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + DATE_DESC_BOB","lastModifiedDate":"2021-03-03"},{"lineNumber":76,"author":{"gitId":"Impala36"},"content":"                + FOLLOWUP_DESC_BOB + NRIC_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":77,"author":{"gitId":"Impala36"},"content":"                + ADDRESS_DESC_BOB + DESCRIPTION_BOB + TAG_DESC_CALLED, new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-08"},{"lineNumber":78,"author":{"gitId":"Yiheng0410"},"content":"        // multiple dates - last date accepted","lastModifiedDate":"2021-03-03"},{"lineNumber":79,"author":{"gitId":"Yiheng0410"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + DATE_DESC_BOB","lastModifiedDate":"2021-03-03"},{"lineNumber":80,"author":{"gitId":"Impala36"},"content":"                + FOLLOWUP_DESC_BOB + DATE_DESC_AMY + NRIC_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"Impala36"},"content":"                + ADDRESS_DESC_BOB + DESCRIPTION_BOB + TAG_DESC_CALLED, new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-08"},{"lineNumber":82,"author":{"gitId":"Impala36"},"content":"        // multiple nrics - last nric accepted","lastModifiedDate":"2021-03-08"},{"lineNumber":83,"author":{"gitId":"Yiheng0410"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + DATE_DESC_BOB","lastModifiedDate":"2021-03-03"},{"lineNumber":84,"author":{"gitId":"Impala36"},"content":"                + FOLLOWUP_DESC_BOB + NRIC_DESC_AMY + NRIC_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":85,"author":{"gitId":"Impala36"},"content":"                + ADDRESS_DESC_BOB + DESCRIPTION_BOB + TAG_DESC_CALLED, new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"Yiheng0410"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + DATE_DESC_BOB","lastModifiedDate":"2021-03-03"},{"lineNumber":88,"author":{"gitId":"Impala36"},"content":"                + FOLLOWUP_DESC_BOB + NRIC_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":89,"author":{"gitId":"Impala36"},"content":"                + ADDRESS_DESC_BOB + DESCRIPTION_BOB + TAG_DESC_CALLED, new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"Yiheng0410"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + DATE_DESC_BOB","lastModifiedDate":"2021-03-03"},{"lineNumber":92,"author":{"gitId":"Impala36"},"content":"                + FOLLOWUP_DESC_BOB + NRIC_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":93,"author":{"gitId":"Impala36"},"content":"                + ADDRESS_DESC_BOB + DESCRIPTION_BOB + TAG_DESC_CALLED, new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"Yiheng0410"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + DATE_DESC_BOB","lastModifiedDate":"2021-03-03"},{"lineNumber":96,"author":{"gitId":"Impala36"},"content":"                + FOLLOWUP_DESC_BOB + NRIC_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2021-03-25"},{"lineNumber":97,"author":{"gitId":"Impala36"},"content":"                + ADDRESS_DESC_BOB + DESCRIPTION_BOB + TAG_DESC_CALLED, new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-08"},{"lineNumber":98,"author":{"gitId":"Impala36"},"content":"        // multiple descriptions - last description accepted","lastModifiedDate":"2021-03-08"},{"lineNumber":99,"author":{"gitId":"Impala36"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + DATE_DESC_BOB","lastModifiedDate":"2021-03-08"},{"lineNumber":100,"author":{"gitId":"Impala36"},"content":"                + FOLLOWUP_DESC_BOB + NRIC_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":101,"author":{"gitId":"Impala36"},"content":"                + DESCRIPTION_AMY + DESCRIPTION_BOB + TAG_DESC_CALLED, new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"Impala36"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_CALLED, VALID_TAG_SEVERITY)","lastModifiedDate":"2021-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":105,"author":{"gitId":"Impala36"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + DATE_DESC_BOB + FOLLOWUP_DESC_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":106,"author":{"gitId":"Impala36"},"content":"                + NRIC_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + DESCRIPTION_BOB","lastModifiedDate":"2021-03-08"},{"lineNumber":107,"author":{"gitId":"Impala36"},"content":"                + TAG_DESC_SEVERITY + TAG_DESC_CALLED, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2021-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":114,"author":{"gitId":"Impala36"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + DATE_DESC_AMY + FOLLOWUP_DESC_AMY + NRIC_DESC_AMY","lastModifiedDate":"2021-03-25"},{"lineNumber":115,"author":{"gitId":"Impala36"},"content":"                + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + DESCRIPTION_AMY,","lastModifiedDate":"2021-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"Impala36"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + DATE_DESC_BOB + FOLLOWUP_DESC_BOB + NRIC_DESC_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":125,"author":{"gitId":"Impala36"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + DESCRIPTION_BOB,","lastModifiedDate":"2021-03-08"},{"lineNumber":126,"author":{"gitId":"Yiheng0410"},"content":"                expectedMessage);","lastModifiedDate":"2021-03-03"},{"lineNumber":127,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":128,"author":{"gitId":"Yiheng0410"},"content":"        // missing date prefix","lastModifiedDate":"2021-03-03"},{"lineNumber":129,"author":{"gitId":"Impala36"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_DATE_BOB + FOLLOWUP_DESC_BOB + NRIC_DESC_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":130,"author":{"gitId":"Impala36"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + DESCRIPTION_BOB,","lastModifiedDate":"2021-03-25"},{"lineNumber":131,"author":{"gitId":"Impala36"},"content":"                expectedMessage);","lastModifiedDate":"2021-03-25"},{"lineNumber":132,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":133,"author":{"gitId":"Impala36"},"content":"        // missing followUp prefix","lastModifiedDate":"2021-03-25"},{"lineNumber":134,"author":{"gitId":"Impala36"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + DATE_DESC_BOB + VALID_FOLLOWUP_BOB + NRIC_DESC_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":135,"author":{"gitId":"Impala36"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + DESCRIPTION_BOB,","lastModifiedDate":"2021-03-08"},{"lineNumber":136,"author":{"gitId":"linqing42"},"content":"                expectedMessage);","lastModifiedDate":"2021-02-16"},{"lineNumber":137,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-16"},{"lineNumber":138,"author":{"gitId":"linqing42"},"content":"        // missing ic prefix","lastModifiedDate":"2021-02-16"},{"lineNumber":139,"author":{"gitId":"Impala36"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + DATE_DESC_BOB + FOLLOWUP_DESC_BOB + VALID_NRIC_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":140,"author":{"gitId":"Impala36"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + DESCRIPTION_BOB,","lastModifiedDate":"2021-03-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"Impala36"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + DATE_DESC_BOB + FOLLOWUP_DESC_BOB + NRIC_DESC_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":145,"author":{"gitId":"Impala36"},"content":"                + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + DESCRIPTION_BOB,","lastModifiedDate":"2021-03-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"Impala36"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + DATE_DESC_BOB + FOLLOWUP_DESC_BOB + NRIC_DESC_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":150,"author":{"gitId":"Impala36"},"content":"                + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB + DESCRIPTION_BOB,","lastModifiedDate":"2021-03-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":154,"author":{"gitId":"Impala36"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + DATE_DESC_BOB + FOLLOWUP_DESC_BOB + NRIC_DESC_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":155,"author":{"gitId":"Impala36"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB + DESCRIPTION_BOB,","lastModifiedDate":"2021-03-08"},{"lineNumber":156,"author":{"gitId":"Impala36"},"content":"                expectedMessage);","lastModifiedDate":"2021-03-08"},{"lineNumber":157,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":158,"author":{"gitId":"Impala36"},"content":"        // missing description prefix","lastModifiedDate":"2021-03-08"},{"lineNumber":159,"author":{"gitId":"Impala36"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + DATE_DESC_BOB + FOLLOWUP_DESC_BOB + NRIC_DESC_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":160,"author":{"gitId":"Impala36"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + VALID_DESCRIPTION_BOB,","lastModifiedDate":"2021-03-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"Impala36"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_DATE_BOB + VALID_FOLLOWUP_BOB + VALID_NRIC_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":165,"author":{"gitId":"Impala36"},"content":"                + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB + VALID_DESCRIPTION_BOB,","lastModifiedDate":"2021-03-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-16"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":173,"author":{"gitId":"Impala36"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + DATE_DESC_BOB + FOLLOWUP_DESC_BOB + NRIC_DESC_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":174,"author":{"gitId":"Impala36"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + DESCRIPTION_BOB","lastModifiedDate":"2021-03-08"},{"lineNumber":175,"author":{"gitId":"Impala36"},"content":"                + TAG_DESC_SEVERITY + TAG_DESC_CALLED, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":177,"author":{"gitId":"linqing42"},"content":"        // invalid nric","lastModifiedDate":"2021-03-15"},{"lineNumber":178,"author":{"gitId":"Impala36"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + DATE_DESC_BOB + FOLLOWUP_DESC_BOB + INVALID_NRIC_DESC","lastModifiedDate":"2021-03-25"},{"lineNumber":179,"author":{"gitId":"linqing42"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + DESCRIPTION_BOB","lastModifiedDate":"2021-03-15"},{"lineNumber":180,"author":{"gitId":"linqing42"},"content":"                + TAG_DESC_SEVERITY + TAG_DESC_CALLED, Nric.MESSAGE_NRIC_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":181,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":182,"author":{"gitId":"Yiheng0410"},"content":"        // invalid date","lastModifiedDate":"2021-03-03"},{"lineNumber":183,"author":{"gitId":"Impala36"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_DATE_DESC + FOLLOWUP_DESC_BOB + NRIC_DESC_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":184,"author":{"gitId":"Impala36"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + DESCRIPTION_BOB","lastModifiedDate":"2021-03-08"},{"lineNumber":185,"author":{"gitId":"Impala36"},"content":"                + TAG_DESC_SEVERITY + TAG_DESC_CALLED, Date.MESSAGE_DATE_CONSTRAINTS);","lastModifiedDate":"2021-03-08"},{"lineNumber":186,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":187,"author":{"gitId":"Impala36"},"content":"        // invalid followUp","lastModifiedDate":"2021-03-25"},{"lineNumber":188,"author":{"gitId":"Impala36"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + DATE_DESC_BOB + INVALID_FOLLOWUP_DESC + NRIC_DESC_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":189,"author":{"gitId":"Impala36"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + DESCRIPTION_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":190,"author":{"gitId":"Impala36"},"content":"                + TAG_DESC_SEVERITY + TAG_DESC_CALLED, FollowUp.MESSAGE_FOLLOWUP_CONSTRAINTS);","lastModifiedDate":"2021-03-25"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":193,"author":{"gitId":"Impala36"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + DATE_DESC_BOB + FOLLOWUP_DESC_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":194,"author":{"gitId":"Impala36"},"content":"                + NRIC_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + DESCRIPTION_BOB","lastModifiedDate":"2021-03-08"},{"lineNumber":195,"author":{"gitId":"Impala36"},"content":"                + TAG_DESC_SEVERITY + TAG_DESC_CALLED, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":198,"author":{"gitId":"Impala36"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + DATE_DESC_BOB + FOLLOWUP_DESC_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":199,"author":{"gitId":"Impala36"},"content":"                + NRIC_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB + DESCRIPTION_BOB","lastModifiedDate":"2021-03-08"},{"lineNumber":200,"author":{"gitId":"Impala36"},"content":"                + TAG_DESC_SEVERITY + TAG_DESC_CALLED, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":203,"author":{"gitId":"Impala36"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + DATE_DESC_BOB + FOLLOWUP_DESC_BOB + NRIC_DESC_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":204,"author":{"gitId":"Impala36"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC + DESCRIPTION_BOB","lastModifiedDate":"2021-03-08"},{"lineNumber":205,"author":{"gitId":"Impala36"},"content":"                + TAG_DESC_SEVERITY + TAG_DESC_CALLED, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-08"},{"lineNumber":206,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":207,"author":{"gitId":"Impala36"},"content":"        // invalid description","lastModifiedDate":"2021-03-08"},{"lineNumber":208,"author":{"gitId":"Impala36"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + DATE_DESC_BOB + FOLLOWUP_DESC_BOB + NRIC_DESC_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":209,"author":{"gitId":"Impala36"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + INVALID_DESCRIPTION","lastModifiedDate":"2021-03-08"},{"lineNumber":210,"author":{"gitId":"Impala36"},"content":"                + TAG_DESC_SEVERITY + TAG_DESC_CALLED, Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":213,"author":{"gitId":"Impala36"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + DATE_DESC_BOB + FOLLOWUP_DESC_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":214,"author":{"gitId":"Impala36"},"content":"                + NRIC_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + DESCRIPTION_BOB","lastModifiedDate":"2021-03-08"},{"lineNumber":215,"author":{"gitId":"Impala36"},"content":"                + INVALID_TAG_DESC + VALID_TAG_CALLED, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":218,"author":{"gitId":"Impala36"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + DATE_DESC_BOB + FOLLOWUP_DESC_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":219,"author":{"gitId":"Yiheng0410"},"content":"                + NRIC_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-03"},{"lineNumber":220,"author":{"gitId":"Impala36"},"content":"                + INVALID_ADDRESS_DESC + DESCRIPTION_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":223,"author":{"gitId":"Yiheng0410"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + DATE_DESC_BOB","lastModifiedDate":"2021-03-03"},{"lineNumber":224,"author":{"gitId":"Impala36"},"content":"                        + FOLLOWUP_DESC_BOB + NRIC_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":225,"author":{"gitId":"Impala36"},"content":"                        + ADDRESS_DESC_BOB + DESCRIPTION_BOB + TAG_DESC_SEVERITY + TAG_DESC_CALLED,","lastModifiedDate":"2021-03-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":228,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"linqing42":13,"Yiheng0410":20,"Impala36":96,"-":99}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_AMY;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESCRIPTION_AMY;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FOLLOWUP_DESC_AMY;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_CALLED;","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_SEVERITY;","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_AMY;","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_AMY;","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FOLLOWUP_AMY;","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_CALLED;","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_SEVERITY;","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":85,"author":{"gitId":"linqing42"},"content":"        assertParseFailure(parser, \"1 z/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-02-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"Impala36"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_CALLED + TAG_DESC_SEVERITY + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-08"},{"lineNumber":107,"author":{"gitId":"Impala36"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_CALLED + TAG_EMPTY + TAG_DESC_SEVERITY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-08"},{"lineNumber":108,"author":{"gitId":"Impala36"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_CALLED + TAG_DESC_SEVERITY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":118,"author":{"gitId":"Impala36"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_SEVERITY","lastModifiedDate":"2021-03-08"},{"lineNumber":119,"author":{"gitId":"Impala36"},"content":"                + DESCRIPTION_AMY + DATE_DESC_AMY + FOLLOWUP_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-03-25"},{"lineNumber":120,"author":{"gitId":"Impala36"},"content":"                + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_CALLED;","lastModifiedDate":"2021-03-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"Impala36"},"content":"                .withDate(VALID_DATE_AMY).withFollowUp(VALID_FOLLOWUP_AMY).withDescription(VALID_DESCRIPTION_AMY)","lastModifiedDate":"2021-03-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"Impala36"},"content":"                .withTags(VALID_TAG_SEVERITY, VALID_TAG_CALLED).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"Impala36"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_CALLED;","lastModifiedDate":"2021-03-08"},{"lineNumber":172,"author":{"gitId":"Impala36"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_CALLED).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":181,"author":{"gitId":"Impala36"},"content":"                + TAG_DESC_CALLED + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_CALLED","lastModifiedDate":"2021-03-08"},{"lineNumber":182,"author":{"gitId":"Impala36"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_SEVERITY;","lastModifiedDate":"2021-03-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"Impala36"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_CALLED,","lastModifiedDate":"2021-03-08"},{"lineNumber":186,"author":{"gitId":"Impala36"},"content":"                VALID_TAG_SEVERITY)","lastModifiedDate":"2021-03-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"linqing42":2,"Impala36":24,"-":195}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"linqing42"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-02-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"linqing42"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2021-02-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"linqing42"},"content":"    private static final String INVALID_NRIC \u003d \"S11111B\";","lastModifiedDate":"2021-02-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"linqing42"},"content":"    private static final String VALID_NRIC \u003d \"S1234567B\";","lastModifiedDate":"2021-02-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"linqing42"},"content":"    public void parseNric_validValueWithWhitespace_returnsTrimmedIc() throws Exception {","lastModifiedDate":"2021-03-20"},{"lineNumber":81,"author":{"gitId":"linqing42"},"content":"        String icWithWhitespace \u003d WHITESPACE + VALID_NRIC + WHITESPACE;","lastModifiedDate":"2021-02-22"},{"lineNumber":82,"author":{"gitId":"linqing42"},"content":"        Nric expectedNric \u003d new Nric(VALID_NRIC);","lastModifiedDate":"2021-02-22"},{"lineNumber":83,"author":{"gitId":"linqing42"},"content":"        assertEquals(expectedNric, ParserUtil.parseNric(icWithWhitespace));","lastModifiedDate":"2021-02-22"},{"lineNumber":84,"author":{"gitId":"linqing42"},"content":"    }","lastModifiedDate":"2021-02-16"},{"lineNumber":85,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-16"},{"lineNumber":86,"author":{"gitId":"linqing42"},"content":"    @Test","lastModifiedDate":"2021-02-16"},{"lineNumber":87,"author":{"gitId":"linqing42"},"content":"    public void parseNric_null_throwsNullPointerException() {","lastModifiedDate":"2021-02-22"},{"lineNumber":88,"author":{"gitId":"linqing42"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseNric((String) null));","lastModifiedDate":"2021-02-22"},{"lineNumber":89,"author":{"gitId":"linqing42"},"content":"    }","lastModifiedDate":"2021-02-16"},{"lineNumber":90,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-16"},{"lineNumber":91,"author":{"gitId":"linqing42"},"content":"    @Test","lastModifiedDate":"2021-02-16"},{"lineNumber":92,"author":{"gitId":"linqing42"},"content":"    public void parseNric_invalidValue_throwsIllegalValueException() {","lastModifiedDate":"2021-02-22"},{"lineNumber":93,"author":{"gitId":"linqing42"},"content":"        assertThrows(IllegalValueException.class, () -\u003e ParserUtil.parseNric(INVALID_NRIC));","lastModifiedDate":"2021-02-22"},{"lineNumber":94,"author":{"gitId":"linqing42"},"content":"    }","lastModifiedDate":"2021-02-16"},{"lineNumber":95,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-16"},{"lineNumber":96,"author":{"gitId":"linqing42"},"content":"    @Test","lastModifiedDate":"2021-02-16"},{"lineNumber":97,"author":{"gitId":"linqing42"},"content":"    public void parseNric_validValueWithoutWhitespace_returnsIc() throws Exception {","lastModifiedDate":"2021-02-22"},{"lineNumber":98,"author":{"gitId":"linqing42"},"content":"        Nric expectedNric \u003d new Nric(VALID_NRIC);","lastModifiedDate":"2021-02-22"},{"lineNumber":99,"author":{"gitId":"linqing42"},"content":"        assertEquals(expectedNric, ParserUtil.parseNric(VALID_NRIC));","lastModifiedDate":"2021-02-22"},{"lineNumber":100,"author":{"gitId":"linqing42"},"content":"    }","lastModifiedDate":"2021-02-16"},{"lineNumber":101,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-16"},{"lineNumber":102,"author":{"gitId":"linqing42"},"content":"    @Test","lastModifiedDate":"2021-02-16"},{"lineNumber":103,"author":{"gitId":"linqing42"},"content":"    public void parseNric_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2021-02-22"},{"lineNumber":104,"author":{"gitId":"linqing42"},"content":"        String icWithWhitespace \u003d WHITESPACE + VALID_NRIC + WHITESPACE;","lastModifiedDate":"2021-02-22"},{"lineNumber":105,"author":{"gitId":"linqing42"},"content":"        Nric expectedNric \u003d new Nric(VALID_NRIC);","lastModifiedDate":"2021-02-22"},{"lineNumber":106,"author":{"gitId":"linqing42"},"content":"        assertEquals(expectedNric, ParserUtil.parseNric(icWithWhitespace));","lastModifiedDate":"2021-02-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"linqing42":31,"-":192}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_SEVERITY;","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"Impala36"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_SEVERITY)","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"Impala36"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_SEVERITY)","lastModifiedDate":"2021-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"Impala36":3,"-":99}},{"path":"src/test/java/seedu/address/model/person/DateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Yiheng0410"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"Yiheng0410"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"Yiheng0410"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"Yiheng0410"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"Yiheng0410"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"Yiheng0410"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"Yiheng0410"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"Yiheng0410"},"content":"public class DateTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"Yiheng0410"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"Yiheng0410"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"Yiheng0410"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Date(null));","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"Yiheng0410"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"Yiheng0410"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"Yiheng0410"},"content":"    public void constructor_invalidDate_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"Yiheng0410"},"content":"        String invalidDate \u003d \" \";","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"Yiheng0410"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Date(invalidDate));","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"Yiheng0410"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"Yiheng0410"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"Yiheng0410"},"content":"    public void isValidDate() {","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"Yiheng0410"},"content":"        // null date","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"Yiheng0410"},"content":"        assertThrows(NullPointerException.class, () -\u003e Date.isValidDate(null));","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"Yiheng0410"},"content":"        // invalid date","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"Yiheng0410"},"content":"        assertFalse(Date.isValidDate(\"21/Feb/2020\")); // in valid format","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"Yiheng0410"},"content":"        assertFalse(Date.isValidDate(\"44-02-2020 \")); // day out of range","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"Yiheng0410"},"content":"        assertFalse(Date.isValidDate(\"02-14-2020\")); // month out of range","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"Yiheng0410"},"content":"        // valid date","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"Yiheng0410"},"content":"        assertTrue(Date.isValidDate(\"12-12-2020\"));","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"Yiheng0410"},"content":"        assertTrue(Date.isValidDate(\"22-02-2021\"));","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"Yiheng0410"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"Yiheng0410"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"Yiheng0410"},"content":"    public void isValidCalendarDate() {","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"Yiheng0410"},"content":"        assertFalse(Date.isValidCalendarDate(\"29-02-2021\")); // day in feb is bigger than 28","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"Yiheng0410"},"content":"        assertFalse(Date.isValidCalendarDate(\"30-02-2020\")); // day in feb is bigger than 28","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"Yiheng0410"},"content":"        assertFalse(Date.isValidCalendarDate(\"30-02-2020\")); // day in feb is bigger than 28","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"Yiheng0410"},"content":"        assertTrue(Date.isValidCalendarDate(\"01-02-2020\")); // correct date","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"Yiheng0410"},"content":"        assertTrue(Date.isValidCalendarDate(\"30-03-2020\")); // correct date","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"Yiheng0410"},"content":"        assertTrue(Date.isValidCalendarDate(\"29-02-2020\")); // leap year","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"Yiheng0410"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"Yiheng0410"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"Yiheng0410"},"content":"    public void calculateDateDiff() {","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"Yiheng0410"},"content":"        assertEquals(Date.calculateDateDiff(\"01-02-2021\", \"28-02-2021\"), 27);","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"Yiheng0410"},"content":"        assertNotEquals(Date.calculateDateDiff(\"01-02-2021\", \"28-02-2021\"), 23);","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"Yiheng0410"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"Yiheng0410"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"Yiheng0410":56}},{"path":"src/test/java/seedu/address/model/person/DescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"linqing42"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-04-02"},{"lineNumber":2,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":3,"author":{"gitId":"linqing42"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-04-02"},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-04-02"},{"lineNumber":5,"author":{"gitId":"linqing42"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-02"},{"lineNumber":6,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":7,"author":{"gitId":"linqing42"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-02"},{"lineNumber":8,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":9,"author":{"gitId":"linqing42"},"content":"public class DescriptionTest {","lastModifiedDate":"2021-04-02"},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-04-02"},{"lineNumber":12,"author":{"gitId":"linqing42"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Description(null));","lastModifiedDate":"2021-04-02"},{"lineNumber":13,"author":{"gitId":"linqing42"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":14,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":15,"author":{"gitId":"linqing42"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":16,"author":{"gitId":"linqing42"},"content":"    public void constructor_invalidDescription_throwsIllegalArgumentException() {","lastModifiedDate":"2021-04-02"},{"lineNumber":17,"author":{"gitId":"linqing42"},"content":"        String invalidDescription \u003d \" \";","lastModifiedDate":"2021-04-02"},{"lineNumber":18,"author":{"gitId":"linqing42"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Description(invalidDescription));","lastModifiedDate":"2021-04-02"},{"lineNumber":19,"author":{"gitId":"linqing42"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":20,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":21,"author":{"gitId":"linqing42"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":22,"author":{"gitId":"linqing42"},"content":"    public void isValidDescription() {","lastModifiedDate":"2021-04-02"},{"lineNumber":23,"author":{"gitId":"linqing42"},"content":"        // null description","lastModifiedDate":"2021-04-02"},{"lineNumber":24,"author":{"gitId":"linqing42"},"content":"        assertThrows(NullPointerException.class, () -\u003e Description.isValidDescription(null));","lastModifiedDate":"2021-04-02"},{"lineNumber":25,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":26,"author":{"gitId":"linqing42"},"content":"        // invalid Description","lastModifiedDate":"2021-04-02"},{"lineNumber":27,"author":{"gitId":"linqing42"},"content":"        assertFalse(Description.isValidDescription(\"\")); // empty string","lastModifiedDate":"2021-04-02"},{"lineNumber":28,"author":{"gitId":"linqing42"},"content":"        assertFalse(Description.isValidDescription(\" \")); // spaces only","lastModifiedDate":"2021-04-02"},{"lineNumber":29,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":30,"author":{"gitId":"linqing42"},"content":"        //valid Description","lastModifiedDate":"2021-04-02"},{"lineNumber":31,"author":{"gitId":"linqing42"},"content":"        assertTrue(Description.isValidDescription(\"This is man with 25 years old.\"));","lastModifiedDate":"2021-04-02"},{"lineNumber":32,"author":{"gitId":"linqing42"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":33,"author":{"gitId":"linqing42"},"content":"}","lastModifiedDate":"2021-04-02"}],"authorContributionMap":{"linqing42":33}},{"path":"src/test/java/seedu/address/model/person/FollowUpTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"linqing42"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-04-02"},{"lineNumber":2,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":3,"author":{"gitId":"linqing42"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-04-02"},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-04-02"},{"lineNumber":5,"author":{"gitId":"linqing42"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-02"},{"lineNumber":6,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":7,"author":{"gitId":"linqing42"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-02"},{"lineNumber":8,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":9,"author":{"gitId":"linqing42"},"content":"public class FollowUpTest {","lastModifiedDate":"2021-04-02"},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-04-02"},{"lineNumber":12,"author":{"gitId":"linqing42"},"content":"        assertThrows(NullPointerException.class, () -\u003e new FollowUp(null));","lastModifiedDate":"2021-04-02"},{"lineNumber":13,"author":{"gitId":"linqing42"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":14,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":15,"author":{"gitId":"linqing42"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":16,"author":{"gitId":"linqing42"},"content":"    public void constructor_invalidFollowUp_throwsIllegalArgumentException() {","lastModifiedDate":"2021-04-02"},{"lineNumber":17,"author":{"gitId":"linqing42"},"content":"        String invalidFollowUp \u003d \"\";","lastModifiedDate":"2021-04-02"},{"lineNumber":18,"author":{"gitId":"linqing42"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new FollowUp(invalidFollowUp));","lastModifiedDate":"2021-04-02"},{"lineNumber":19,"author":{"gitId":"linqing42"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":20,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":21,"author":{"gitId":"linqing42"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":22,"author":{"gitId":"linqing42"},"content":"    public void isValidFollowUp() {","lastModifiedDate":"2021-04-02"},{"lineNumber":23,"author":{"gitId":"linqing42"},"content":"        // null followUp","lastModifiedDate":"2021-04-02"},{"lineNumber":24,"author":{"gitId":"linqing42"},"content":"        assertThrows(NullPointerException.class, () -\u003e FollowUp.isValidFollowUp(null));","lastModifiedDate":"2021-04-02"},{"lineNumber":25,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":26,"author":{"gitId":"linqing42"},"content":"        // invalid followUp","lastModifiedDate":"2021-04-02"},{"lineNumber":27,"author":{"gitId":"linqing42"},"content":"        assertFalse(FollowUp.isValidFollowUp(\"\")); // empty string","lastModifiedDate":"2021-04-02"},{"lineNumber":28,"author":{"gitId":"linqing42"},"content":"        assertFalse(FollowUp.isValidFollowUp(\" \")); // spaces only","lastModifiedDate":"2021-04-02"},{"lineNumber":29,"author":{"gitId":"linqing42"},"content":"        assertFalse(FollowUp.isValidFollowUp(\"phone\")); // non-numeric","lastModifiedDate":"2021-04-02"},{"lineNumber":30,"author":{"gitId":"linqing42"},"content":"        assertFalse(FollowUp.isValidFollowUp(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2021-04-02"},{"lineNumber":31,"author":{"gitId":"linqing42"},"content":"        assertFalse(FollowUp.isValidFollowUp(\"@%\"));","lastModifiedDate":"2021-04-02"},{"lineNumber":32,"author":{"gitId":"linqing42"},"content":"        assertFalse(FollowUp.isValidFollowUp(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2021-04-02"},{"lineNumber":33,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":34,"author":{"gitId":"linqing42"},"content":"        // valid followUp","lastModifiedDate":"2021-04-02"},{"lineNumber":35,"author":{"gitId":"linqing42"},"content":"        assertTrue(FollowUp.isValidFollowUp(\"3\")); // exactly 3 numbers","lastModifiedDate":"2021-04-02"},{"lineNumber":36,"author":{"gitId":"linqing42"},"content":"        assertTrue(FollowUp.isValidFollowUp(\"93121534\"));","lastModifiedDate":"2021-04-02"},{"lineNumber":37,"author":{"gitId":"linqing42"},"content":"        assertTrue(FollowUp.isValidFollowUp(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2021-04-02"},{"lineNumber":38,"author":{"gitId":"linqing42"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":39,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":40,"author":{"gitId":"linqing42"},"content":"}","lastModifiedDate":"2021-04-02"}],"authorContributionMap":{"linqing42":40}},{"path":"src/test/java/seedu/address/model/person/NricTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"linqing42"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-02-22"},{"lineNumber":2,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":3,"author":{"gitId":"linqing42"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-02-22"},{"lineNumber":4,"author":{"gitId":"linqing42"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-02-22"},{"lineNumber":5,"author":{"gitId":"linqing42"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-22"},{"lineNumber":6,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":7,"author":{"gitId":"linqing42"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-02-22"},{"lineNumber":8,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":9,"author":{"gitId":"linqing42"},"content":"public class NricTest {","lastModifiedDate":"2021-02-22"},{"lineNumber":10,"author":{"gitId":"linqing42"},"content":"    @Test","lastModifiedDate":"2021-02-22"},{"lineNumber":11,"author":{"gitId":"linqing42"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-02-22"},{"lineNumber":12,"author":{"gitId":"linqing42"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Nric(null));","lastModifiedDate":"2021-02-22"},{"lineNumber":13,"author":{"gitId":"linqing42"},"content":"    }","lastModifiedDate":"2021-02-22"},{"lineNumber":14,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":15,"author":{"gitId":"linqing42"},"content":"    @Test","lastModifiedDate":"2021-02-22"},{"lineNumber":16,"author":{"gitId":"linqing42"},"content":"    public void constructor_invalidNric_throwsIllegalArgumentException() {","lastModifiedDate":"2021-02-22"},{"lineNumber":17,"author":{"gitId":"linqing42"},"content":"        String invalidNric \u003d \"\";","lastModifiedDate":"2021-02-22"},{"lineNumber":18,"author":{"gitId":"linqing42"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Nric(invalidNric));","lastModifiedDate":"2021-02-22"},{"lineNumber":19,"author":{"gitId":"linqing42"},"content":"    }","lastModifiedDate":"2021-02-22"},{"lineNumber":20,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":21,"author":{"gitId":"linqing42"},"content":"    @Test","lastModifiedDate":"2021-02-22"},{"lineNumber":22,"author":{"gitId":"linqing42"},"content":"    public void isValidNric() {","lastModifiedDate":"2021-02-22"},{"lineNumber":23,"author":{"gitId":"linqing42"},"content":"        // null IC","lastModifiedDate":"2021-02-22"},{"lineNumber":24,"author":{"gitId":"linqing42"},"content":"        assertThrows(NullPointerException.class, () -\u003e Nric.isValidNric(null));","lastModifiedDate":"2021-02-22"},{"lineNumber":25,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":26,"author":{"gitId":"linqing42"},"content":"        // invalid IC","lastModifiedDate":"2021-02-22"},{"lineNumber":27,"author":{"gitId":"linqing42"},"content":"        assertFalse(Nric.isValidNric(\"\")); // empty string","lastModifiedDate":"2021-02-22"},{"lineNumber":28,"author":{"gitId":"linqing42"},"content":"        assertFalse(Nric.isValidNric(\"S11111B\")); // only 5 digit","lastModifiedDate":"2021-02-22"},{"lineNumber":29,"author":{"gitId":"linqing42"},"content":"        assertFalse(Nric.isValidNric(\"^\"));","lastModifiedDate":"2021-02-22"},{"lineNumber":30,"author":{"gitId":"linqing42"},"content":"        assertFalse(Nric.isValidNric(\"11111111B\"));","lastModifiedDate":"2021-02-22"},{"lineNumber":31,"author":{"gitId":"linqing42"},"content":"        assertFalse(Nric.isValidNric(\"S11111111B\"));","lastModifiedDate":"2021-02-22"},{"lineNumber":32,"author":{"gitId":"linqing42"},"content":"        assertFalse(Nric.isValidNric(\"Q1111111B\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":33,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":34,"author":{"gitId":"linqing42"},"content":"        // valid Nric, a capital alphabet, start with S,F,G,T, 7 digits, 1 capital alphabet and it should not be blank","lastModifiedDate":"2021-03-20"},{"lineNumber":35,"author":{"gitId":"linqing42"},"content":"        assertTrue(Nric.isValidNric(\"S1234567B\"));","lastModifiedDate":"2021-02-22"},{"lineNumber":36,"author":{"gitId":"linqing42"},"content":"    }","lastModifiedDate":"2021-02-22"},{"lineNumber":37,"author":{"gitId":"linqing42"},"content":"}","lastModifiedDate":"2021-02-22"}],"authorContributionMap":{"linqing42":37}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"linqing42"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_SEVERITY;","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":"        // different nric, different phone and different email -\u003e returns false","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE)","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"Impala36"},"content":"            .withNric(VALID_NRIC_BOB).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"linqing42"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"Impala36"},"content":"        // different name, same attributes -\u003e returns true","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"Impala36"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"Impala36"},"content":"        // same name, same phone, different attributes -\u003e returns true","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-02-08"},{"lineNumber":46,"author":{"gitId":"Impala36"},"content":"            .withTags(VALID_TAG_SEVERITY).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"Impala36"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-08"},{"lineNumber":49,"author":{"gitId":"Impala36"},"content":"        // same name, same email, different attributes -\u003e returns true","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-02-08"},{"lineNumber":51,"author":{"gitId":"Impala36"},"content":"                .withTags(VALID_TAG_SEVERITY).build();","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"Impala36"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"linqing42"},"content":"        // same name, same phone, same email, same NRIC, different attributes -\u003e returns true","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"Impala36"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_SEVERITY).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2021-02-08"},{"lineNumber":57,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":58,"author":{"gitId":"Impala36"},"content":"        //different NRIC, same attributes -\u003e returns true","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"linqing42"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"Impala36"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"Impala36"},"content":"        //different NRIC, different phone, different name, same attributes -\u003e returns true","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"linqing42"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withNric(VALID_NRIC_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"linqing42"},"content":"                .withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":65,"author":{"gitId":"Impala36"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":105,"author":{"gitId":"Impala36"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_SEVERITY).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"linqing42":8,"Impala36":18,"-":82}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_SEVERITY;","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"Impala36"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_SEVERITY)","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"Impala36"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_SEVERITY)","lastModifiedDate":"2021-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Impala36":3,"-":167}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-02-16"},{"lineNumber":16,"author":{"gitId":"Yiheng0410"},"content":"import seedu.address.model.person.Date;","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"import seedu.address.model.person.Description;","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-02-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-02-16"},{"lineNumber":20,"author":{"gitId":"linqing42"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2021-02-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-02-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"linqing42"},"content":"    private static final String INVALID_NAME \u003d \"R@1hel\";","lastModifiedDate":"2021-02-16"},{"lineNumber":25,"author":{"gitId":"Yiheng0410"},"content":"    private static final String INVALID_DATE \u003d \"55-02-2021\";","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":"    private static final String INVALID_DESCRIPTION \u003d \" \";","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"linqing42"},"content":"    private static final String INVALID_NRIC \u003d \"S1146H\";","lastModifiedDate":"2021-02-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"Yiheng0410"},"content":"    private static final String VALID_DATE \u003d BENSON.getDate().toString();","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"Impala36"},"content":"    private static final String VALID_DESCRIPTION \u003d BENSON.getDescription().toString();","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"linqing42"},"content":"    private static final String VALID_NRIC \u003d BENSON.getNric().toString();","lastModifiedDate":"2021-02-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_REMARK \u003d BENSON.getRemark().toString();","lastModifiedDate":"2021-02-08"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"    private static final String VALID_FOLLOWUP \u003d BENSON.getFollowUp().toString();","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"Yiheng0410"},"content":"            new JsonAdaptedPerson(INVALID_NAME, VALID_DATE, VALID_NRIC, VALID_PHONE,","lastModifiedDate":"2021-03-03"},{"lineNumber":56,"author":{"gitId":"binbinhui"},"content":"                    VALID_EMAIL, VALID_ADDRESS, VALID_DESCRIPTION, VALID_REMARK, VALID_FOLLOWUP, VALID_TAGS);","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-02-08"},{"lineNumber":64,"author":{"gitId":"Yiheng0410"},"content":"            new JsonAdaptedPerson(null, VALID_DATE, VALID_NRIC, VALID_PHONE,","lastModifiedDate":"2021-03-03"},{"lineNumber":65,"author":{"gitId":"binbinhui"},"content":"                    VALID_EMAIL, VALID_ADDRESS, VALID_DESCRIPTION, VALID_REMARK, VALID_FOLLOWUP, VALID_TAGS);","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-02-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2021-02-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-02-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-02-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-16"},{"lineNumber":71,"author":{"gitId":"Yiheng0410"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":72,"author":{"gitId":"Yiheng0410"},"content":"    public void toModelType_invalidDate_throwsIllegalValueException() {","lastModifiedDate":"2021-03-11"},{"lineNumber":73,"author":{"gitId":"Yiheng0410"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-03-11"},{"lineNumber":74,"author":{"gitId":"Yiheng0410"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_DATE, VALID_NRIC, VALID_PHONE,","lastModifiedDate":"2021-03-11"},{"lineNumber":75,"author":{"gitId":"binbinhui"},"content":"                        VALID_EMAIL, VALID_ADDRESS, VALID_DESCRIPTION, VALID_REMARK, VALID_FOLLOWUP, VALID_TAGS);","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"Yiheng0410"},"content":"        String expectedMessage \u003d Date.MESSAGE_DATE_CONSTRAINTS;","lastModifiedDate":"2021-03-11"},{"lineNumber":77,"author":{"gitId":"Yiheng0410"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-11"},{"lineNumber":78,"author":{"gitId":"Yiheng0410"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":79,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":80,"author":{"gitId":"Yiheng0410"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":81,"author":{"gitId":"Yiheng0410"},"content":"    public void toModelType_nullDate_throwsIllegalValueException() {","lastModifiedDate":"2021-03-11"},{"lineNumber":82,"author":{"gitId":"Yiheng0410"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-03-11"},{"lineNumber":83,"author":{"gitId":"Yiheng0410"},"content":"                new JsonAdaptedPerson(VALID_NAME, null, VALID_NRIC, VALID_PHONE,","lastModifiedDate":"2021-03-11"},{"lineNumber":84,"author":{"gitId":"binbinhui"},"content":"                        VALID_EMAIL, VALID_ADDRESS, VALID_DESCRIPTION, VALID_REMARK, VALID_FOLLOWUP, VALID_TAGS);","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":86,"author":{"gitId":"Yiheng0410"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName());","lastModifiedDate":"2021-03-11"},{"lineNumber":87,"author":{"gitId":"Yiheng0410"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-11"},{"lineNumber":88,"author":{"gitId":"Yiheng0410"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":89,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":90,"author":{"gitId":"linqing42"},"content":"    @Test","lastModifiedDate":"2021-02-16"},{"lineNumber":91,"author":{"gitId":"linqing42"},"content":"    public void toModelType_invalidIc_throwsIllegalValueException() {","lastModifiedDate":"2021-02-16"},{"lineNumber":92,"author":{"gitId":"linqing42"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-02-16"},{"lineNumber":93,"author":{"gitId":"Yiheng0410"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_DATE, INVALID_NRIC, VALID_PHONE,","lastModifiedDate":"2021-03-03"},{"lineNumber":94,"author":{"gitId":"binbinhui"},"content":"                        VALID_EMAIL, VALID_ADDRESS, VALID_DESCRIPTION, VALID_REMARK, VALID_FOLLOWUP, VALID_TAGS);","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"linqing42"},"content":"        String expectedMessage \u003d Nric.MESSAGE_NRIC_CONSTRAINTS;","lastModifiedDate":"2021-02-22"},{"lineNumber":96,"author":{"gitId":"linqing42"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-02-16"},{"lineNumber":97,"author":{"gitId":"linqing42"},"content":"    }","lastModifiedDate":"2021-02-16"},{"lineNumber":98,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-16"},{"lineNumber":99,"author":{"gitId":"linqing42"},"content":"    @Test","lastModifiedDate":"2021-02-16"},{"lineNumber":100,"author":{"gitId":"linqing42"},"content":"    public void toModelType_nullIc_throwsIllegalValueException() {","lastModifiedDate":"2021-02-16"},{"lineNumber":101,"author":{"gitId":"linqing42"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-02-16"},{"lineNumber":102,"author":{"gitId":"Yiheng0410"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_DATE, null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-03-03"},{"lineNumber":103,"author":{"gitId":"binbinhui"},"content":"                        VALID_ADDRESS, VALID_DESCRIPTION, VALID_REMARK, VALID_FOLLOWUP, VALID_TAGS);","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"linqing42"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Nric.class.getSimpleName());","lastModifiedDate":"2021-02-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"Yiheng0410"},"content":"            new JsonAdaptedPerson(VALID_NAME, VALID_DATE, VALID_NRIC, INVALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-03-03"},{"lineNumber":112,"author":{"gitId":"binbinhui"},"content":"                    VALID_ADDRESS, VALID_DESCRIPTION, VALID_REMARK, VALID_FOLLOWUP, VALID_TAGS);","lastModifiedDate":"2021-03-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-02-08"},{"lineNumber":120,"author":{"gitId":"Yiheng0410"},"content":"            new JsonAdaptedPerson(VALID_NAME, VALID_DATE, VALID_NRIC, null, VALID_EMAIL,","lastModifiedDate":"2021-03-03"},{"lineNumber":121,"author":{"gitId":"binbinhui"},"content":"                    VALID_ADDRESS, VALID_DESCRIPTION, VALID_REMARK, VALID_FOLLOWUP, VALID_TAGS);","lastModifiedDate":"2021-03-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"Yiheng0410"},"content":"            new JsonAdaptedPerson(VALID_NAME, VALID_DATE, VALID_NRIC, VALID_PHONE, INVALID_EMAIL,","lastModifiedDate":"2021-03-03"},{"lineNumber":130,"author":{"gitId":"binbinhui"},"content":"                    VALID_ADDRESS, VALID_DESCRIPTION, VALID_REMARK, VALID_FOLLOWUP, VALID_TAGS);","lastModifiedDate":"2021-03-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-02-08"},{"lineNumber":138,"author":{"gitId":"Yiheng0410"},"content":"            new JsonAdaptedPerson(VALID_NAME, VALID_DATE, VALID_NRIC, VALID_PHONE, null,","lastModifiedDate":"2021-03-03"},{"lineNumber":139,"author":{"gitId":"binbinhui"},"content":"                    VALID_ADDRESS, VALID_DESCRIPTION, VALID_REMARK, VALID_FOLLOWUP, VALID_TAGS);","lastModifiedDate":"2021-03-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"Yiheng0410"},"content":"            new JsonAdaptedPerson(VALID_NAME, VALID_DATE, VALID_NRIC, VALID_PHONE,","lastModifiedDate":"2021-03-03"},{"lineNumber":148,"author":{"gitId":"binbinhui"},"content":"                    VALID_EMAIL, INVALID_ADDRESS, VALID_DESCRIPTION, VALID_REMARK, VALID_FOLLOWUP, VALID_TAGS);","lastModifiedDate":"2021-03-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-02-08"},{"lineNumber":156,"author":{"gitId":"Yiheng0410"},"content":"            new JsonAdaptedPerson(VALID_NAME, VALID_DATE, VALID_NRIC, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-03-03"},{"lineNumber":157,"author":{"gitId":"binbinhui"},"content":"                    null, VALID_DESCRIPTION, VALID_REMARK, VALID_FOLLOWUP, VALID_TAGS);","lastModifiedDate":"2021-03-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":161,"author":{"gitId":"Impala36"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":162,"author":{"gitId":"Impala36"},"content":"    public void toModelType_invalidDescription_throwsIllegalValueException() {","lastModifiedDate":"2021-03-08"},{"lineNumber":163,"author":{"gitId":"Impala36"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-03-08"},{"lineNumber":164,"author":{"gitId":"Impala36"},"content":"            new JsonAdaptedPerson(VALID_NAME, VALID_DATE, VALID_NRIC, VALID_PHONE,","lastModifiedDate":"2021-03-08"},{"lineNumber":165,"author":{"gitId":"binbinhui"},"content":"                    VALID_EMAIL, VALID_ADDRESS, INVALID_DESCRIPTION, VALID_REMARK, VALID_FOLLOWUP, VALID_TAGS);","lastModifiedDate":"2021-03-24"},{"lineNumber":166,"author":{"gitId":"Impala36"},"content":"        String expectedMessage \u003d Description.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-08"},{"lineNumber":167,"author":{"gitId":"Impala36"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-08"},{"lineNumber":168,"author":{"gitId":"Impala36"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":169,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":170,"author":{"gitId":"Impala36"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":171,"author":{"gitId":"Impala36"},"content":"    public void toModelType_nullDescription_throwsIllegalValueException() {","lastModifiedDate":"2021-03-08"},{"lineNumber":172,"author":{"gitId":"Impala36"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-03-08"},{"lineNumber":173,"author":{"gitId":"Impala36"},"content":"            new JsonAdaptedPerson(VALID_NAME, VALID_DATE, VALID_NRIC, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-03-08"},{"lineNumber":174,"author":{"gitId":"binbinhui"},"content":"                VALID_ADDRESS, null, VALID_REMARK, VALID_FOLLOWUP, VALID_TAGS);","lastModifiedDate":"2021-03-24"},{"lineNumber":175,"author":{"gitId":"Impala36"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Description.class.getSimpleName());","lastModifiedDate":"2021-03-08"},{"lineNumber":176,"author":{"gitId":"Impala36"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-08"},{"lineNumber":177,"author":{"gitId":"Impala36"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":184,"author":{"gitId":"Yiheng0410"},"content":"            new JsonAdaptedPerson(VALID_NAME, VALID_DATE, VALID_NRIC, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-03-03"},{"lineNumber":185,"author":{"gitId":"binbinhui"},"content":"                    VALID_ADDRESS, VALID_DESCRIPTION, VALID_REMARK, VALID_FOLLOWUP, invalidTags);","lastModifiedDate":"2021-03-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"linqing42":15,"Yiheng0410":31,"Impala36":19,"-":108,"binbinhui":16}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"Yiheng0410"},"content":"import seedu.address.model.person.Date;","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"Impala36"},"content":"import seedu.address.model.person.Description;","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"Impala36"},"content":"import seedu.address.model.person.FollowUp;","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"linqing42"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2021-02-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"Impala36"},"content":"    private final EditPersonDescriptor descriptor;","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"Yiheng0410"},"content":"        descriptor.setDate(person.getDate());","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"Impala36"},"content":"        descriptor.setFollowUp(person.getFollowUp());","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"linqing42"},"content":"        descriptor.setNric(person.getNric());","lastModifiedDate":"2021-02-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":46,"author":{"gitId":"Impala36"},"content":"        descriptor.setDescription(person.getDescription());","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"Impala36"},"content":"        descriptor.setRemark(person.getRemark());","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"Yiheng0410"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":60,"author":{"gitId":"Yiheng0410"},"content":"     * Sets the {@code Date} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-03-03"},{"lineNumber":61,"author":{"gitId":"Yiheng0410"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":62,"author":{"gitId":"Yiheng0410"},"content":"    public EditPersonDescriptorBuilder withDate(String date) {","lastModifiedDate":"2021-03-03"},{"lineNumber":63,"author":{"gitId":"Yiheng0410"},"content":"        descriptor.setDate(new Date(date));","lastModifiedDate":"2021-03-03"},{"lineNumber":64,"author":{"gitId":"Yiheng0410"},"content":"        return this;","lastModifiedDate":"2021-03-03"},{"lineNumber":65,"author":{"gitId":"Yiheng0410"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":66,"author":{"gitId":"Impala36"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"Impala36"},"content":"     * Sets the {@code FollowUp} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"Impala36"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"Impala36"},"content":"    public EditPersonDescriptorBuilder withFollowUp(String followUp) {","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"Impala36"},"content":"        descriptor.setFollowUp(new FollowUp(followUp));","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"Impala36"},"content":"        return this;","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"Impala36"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":74,"author":{"gitId":"linqing42"},"content":"    /**","lastModifiedDate":"2021-02-16"},{"lineNumber":75,"author":{"gitId":"linqing42"},"content":"     * Sets the {@code Ic} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-02-16"},{"lineNumber":76,"author":{"gitId":"linqing42"},"content":"     */","lastModifiedDate":"2021-02-16"},{"lineNumber":77,"author":{"gitId":"linqing42"},"content":"    public EditPersonDescriptorBuilder withIC(String nric) {","lastModifiedDate":"2021-02-22"},{"lineNumber":78,"author":{"gitId":"linqing42"},"content":"        descriptor.setNric(new Nric(nric));","lastModifiedDate":"2021-02-22"},{"lineNumber":79,"author":{"gitId":"linqing42"},"content":"        return this;","lastModifiedDate":"2021-02-16"},{"lineNumber":80,"author":{"gitId":"linqing42"},"content":"    }","lastModifiedDate":"2021-02-16"},{"lineNumber":81,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":106,"author":{"gitId":"Impala36"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":107,"author":{"gitId":"Impala36"},"content":"     * Sets the {@code Description} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-03-08"},{"lineNumber":108,"author":{"gitId":"Impala36"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":109,"author":{"gitId":"Impala36"},"content":"    public EditPersonDescriptorBuilder withDescription(String description) {","lastModifiedDate":"2021-03-08"},{"lineNumber":110,"author":{"gitId":"Impala36"},"content":"        descriptor.setDescription(new Description(description));","lastModifiedDate":"2021-03-08"},{"lineNumber":111,"author":{"gitId":"Impala36"},"content":"        return this;","lastModifiedDate":"2021-03-08"},{"lineNumber":112,"author":{"gitId":"Impala36"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":113,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":127,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-16"},{"lineNumber":128,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"linqing42":12,"Yiheng0410":10,"Impala36":21,"-":86}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"Yiheng0410"},"content":"import seedu.address.model.person.Date;","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"import seedu.address.model.person.Description;","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"binbinhui"},"content":"import seedu.address.model.person.FollowUp;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-02-16"},{"lineNumber":12,"author":{"gitId":"linqing42"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2021-02-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Alice Pauline\";","lastModifiedDate":"2021-02-08"},{"lineNumber":25,"author":{"gitId":"Yiheng0410"},"content":"    public static final String DEFAULT_DATE \u003d \"01-01-2021\";","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"Impala36"},"content":"    public static final String DEFAULT_NRIC \u003d \"S9834567B\";","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"alice@gmail.com\";","lastModifiedDate":"2021-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"Impala36"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"This woman is a construction site manager who flew a drone over\"","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"Impala36"},"content":"        + \" the Istana, beyond the boundary of his nearby work site, at 8.35am.\";","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"Impala36"},"content":"    public static final String DEFAULT_REMARK \u003d \"She likes to fly drones.\";","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"Impala36"},"content":"    public static final String DEFAULT_FOLLOWUP \u003d \"7\";","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"Yiheng0410"},"content":"    private Date date;","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"Impala36"},"content":"    private FollowUp followUp;","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"linqing42"},"content":"    private Nric nric;","lastModifiedDate":"2021-02-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"Impala36"},"content":"    private Description description;","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Remark remark;","lastModifiedDate":"2021-02-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with defaults.","lastModifiedDate":"2021-02-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"Yiheng0410"},"content":"        date \u003d new Date(DEFAULT_DATE);","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"Impala36"},"content":"        followUp \u003d new FollowUp(DEFAULT_FOLLOWUP);","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"linqing42"},"content":"        nric \u003d new Nric(DEFAULT_NRIC);","lastModifiedDate":"2021-02-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"Impala36"},"content":"        description \u003d new Description(DEFAULT_DESCRIPTION);","lastModifiedDate":"2021-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2021-02-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"Yiheng0410"},"content":"        date \u003d personToCopy.getDate();","lastModifiedDate":"2021-03-03"},{"lineNumber":68,"author":{"gitId":"Impala36"},"content":"        followUp \u003d personToCopy.getFollowUp();","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"linqing42"},"content":"        nric \u003d personToCopy.getNric();","lastModifiedDate":"2021-02-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"Impala36"},"content":"        description \u003d personToCopy.getDescription();","lastModifiedDate":"2021-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        remark \u003d personToCopy.getRemark();","lastModifiedDate":"2021-02-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"Yiheng0410"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":87,"author":{"gitId":"Yiheng0410"},"content":"     * Sets the {@code date} of the {@code Person} that we are building.","lastModifiedDate":"2021-03-03"},{"lineNumber":88,"author":{"gitId":"Yiheng0410"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":89,"author":{"gitId":"Yiheng0410"},"content":"    public PersonBuilder withDate(String date) {","lastModifiedDate":"2021-03-03"},{"lineNumber":90,"author":{"gitId":"Yiheng0410"},"content":"        this.date \u003d new Date(date);","lastModifiedDate":"2021-03-03"},{"lineNumber":91,"author":{"gitId":"Yiheng0410"},"content":"        return this;","lastModifiedDate":"2021-03-03"},{"lineNumber":92,"author":{"gitId":"Yiheng0410"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":93,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":94,"author":{"gitId":"linqing42"},"content":"    /**","lastModifiedDate":"2021-02-16"},{"lineNumber":95,"author":{"gitId":"linqing42"},"content":"     * Sets the {@code Ic} of the {@code Person} that we are building.","lastModifiedDate":"2021-02-16"},{"lineNumber":96,"author":{"gitId":"linqing42"},"content":"     */","lastModifiedDate":"2021-02-16"},{"lineNumber":97,"author":{"gitId":"linqing42"},"content":"    public PersonBuilder withNric(String nric) {","lastModifiedDate":"2021-02-22"},{"lineNumber":98,"author":{"gitId":"linqing42"},"content":"        this.nric \u003d new Nric(nric);","lastModifiedDate":"2021-02-22"},{"lineNumber":99,"author":{"gitId":"linqing42"},"content":"        return this;","lastModifiedDate":"2021-02-16"},{"lineNumber":100,"author":{"gitId":"linqing42"},"content":"    }","lastModifiedDate":"2021-02-16"},{"lineNumber":101,"author":{"gitId":"linqing42"},"content":"","lastModifiedDate":"2021-02-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":134,"author":{"gitId":"Impala36"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":135,"author":{"gitId":"Impala36"},"content":"     * Sets the {@code Remark} of the {@code Person} that we are building.","lastModifiedDate":"2021-03-08"},{"lineNumber":136,"author":{"gitId":"Impala36"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":137,"author":{"gitId":"Impala36"},"content":"    public PersonBuilder withDescription(String description) {","lastModifiedDate":"2021-03-08"},{"lineNumber":138,"author":{"gitId":"Impala36"},"content":"        this.description \u003d new Description(description);","lastModifiedDate":"2021-03-08"},{"lineNumber":139,"author":{"gitId":"Impala36"},"content":"        return this;","lastModifiedDate":"2021-03-08"},{"lineNumber":140,"author":{"gitId":"Impala36"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":141,"author":{"gitId":"Impala36"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-02-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Sets the {@code Remark} of the {@code Person} that we are building.","lastModifiedDate":"2021-02-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-02-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public PersonBuilder withRemark(String remark) {","lastModifiedDate":"2021-02-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2021-02-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-02-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-02-08"},{"lineNumber":149,"author":{"gitId":"binbinhui"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":150,"author":{"gitId":"binbinhui"},"content":"     * Sets the {@code FollowUp} of the {@code Person} that we are building.","lastModifiedDate":"2021-03-24"},{"lineNumber":151,"author":{"gitId":"binbinhui"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":152,"author":{"gitId":"binbinhui"},"content":"    public PersonBuilder withFollowUp(String followUp) {","lastModifiedDate":"2021-03-24"},{"lineNumber":153,"author":{"gitId":"binbinhui"},"content":"        this.followUp \u003d new FollowUp(followUp);","lastModifiedDate":"2021-03-24"},{"lineNumber":154,"author":{"gitId":"binbinhui"},"content":"        return this;","lastModifiedDate":"2021-03-24"},{"lineNumber":155,"author":{"gitId":"binbinhui"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":158,"author":{"gitId":"Impala36"},"content":"        return new Person(name, date, followUp, nric, phone, email, address, description, remark, tags);","lastModifiedDate":"2021-03-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"linqing42":12,"Yiheng0410":13,"Impala36":21,"-":107,"binbinhui":8}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"Yiheng0410"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FOLLOWUP;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"linqing42"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2021-02-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":39,"author":{"gitId":"Yiheng0410"},"content":"        sb.append(PREFIX_DATE + person.getDate().value + \" \");","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"Impala36"},"content":"        sb.append(PREFIX_FOLLOWUP + person.getFollowUp().value + \" \");","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"linqing42"},"content":"        sb.append(PREFIX_NRIC + person.getNric().value + \" \");","lastModifiedDate":"2021-02-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"Impala36"},"content":"        sb.append(PREFIX_DESCRIPTION + person.getDescription().value + \" \");","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"Yiheng0410"},"content":"        descriptor.getDate().ifPresent(date -\u003e sb.append(PREFIX_DATE).append(date.value).append(\" \"));","lastModifiedDate":"2021-03-03"},{"lineNumber":59,"author":{"gitId":"Impala36"},"content":"        descriptor.getFollowUp().ifPresent(followUp -\u003e sb.append(PREFIX_FOLLOWUP).append(followUp.value).append(\" \"));","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"linqing42"},"content":"        descriptor.getNric().ifPresent(nric -\u003e sb.append(PREFIX_NRIC).append(nric.value).append(\" \"));","lastModifiedDate":"2021-02-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"Impala36"},"content":"        descriptor.getDescription().ifPresent(","lastModifiedDate":"2021-03-08"},{"lineNumber":65,"author":{"gitId":"Impala36"},"content":"            description -\u003e sb.append(PREFIX_DESCRIPTION).append(description.value).append(\" \"));","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"linqing42":3,"Yiheng0410":4,"Impala36":7,"-":62}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"Yiheng0410"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_AMY;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"Yiheng0410"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_BOB;","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_AMY;","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_BOB;","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"linqing42"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_AMY;","lastModifiedDate":"2021-02-22"},{"lineNumber":14,"author":{"gitId":"linqing42"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2021-02-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":17,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_CALLED;","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"Impala36"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_SEVERITY;","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"Yiheng0410"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":33,"author":{"gitId":"Yiheng0410"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\").withDate(\"02-02-2021\")","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"Yiheng0410"},"content":"        .withNric(\"S1234567B\").withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"binbinhui"},"content":"        .withPhone(\"94351253\").withRemark(\"She likes aardvarks.\").withFollowUp(\"7\")","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"Impala36"},"content":"        .withDescription(\"She was molested by a Senior Investigations Officer \"","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"Impala36"},"content":"            + \"at the Jurong Police Division Headquarters in the interview room around 9.00pm.\")","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"Impala36"},"content":"        .withTags(\"NeverCalled\").build();","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"Yiheng0410"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\").withDate(\"02-02-2021\")","lastModifiedDate":"2021-03-11"},{"lineNumber":40,"author":{"gitId":"Yiheng0410"},"content":"        .withNric(\"S1234569B\").withAddress(\"311, Clementi Ave 2, #02-25\").withRemark(\"He can\u0027t take beer!\")","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"binbinhui"},"content":"        .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withFollowUp(\"7\")","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"Impala36"},"content":"        .withDescription(\"This man is a construction site manager who flew a drone over the Istana, \"","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"Impala36"},"content":"            + \"beyond the boundary of his nearby work site, at 8.35am.\")","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"Impala36"},"content":"        .withTags(\"LowPriority\", \"NeverCalled\").build();","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"Yiheng0410"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withDate(\"02-02-2021\")","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"linqing42"},"content":"        .withNric(\"S1234567C\").withPhone(\"95352563\")","lastModifiedDate":"2021-02-22"},{"lineNumber":47,"author":{"gitId":"Impala36"},"content":"        .withDescription(\"This man is a construction site manager who flew a drone over the Istana, \"","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"Impala36"},"content":"            + \"beyond the boundary of his nearby work site, at 8.35am.\")","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"Yiheng0410"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withDate(\"02-02-2021\")","lastModifiedDate":"2021-03-11"},{"lineNumber":51,"author":{"gitId":"linqing42"},"content":"        .withNric(\"S1234565E\").withPhone(\"87652533\")","lastModifiedDate":"2021-02-22"},{"lineNumber":52,"author":{"gitId":"Impala36"},"content":"        .withDescription(\"This man is a construction site manager who flew a drone over the Istana, \"","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"Impala36"},"content":"            + \"beyond the boundary of his nearby work site, at 8.35am.\")","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"Impala36"},"content":"        .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"NeverCalled\").build();","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"Yiheng0410"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withDate(\"02-02-2021\")","lastModifiedDate":"2021-03-11"},{"lineNumber":56,"author":{"gitId":"Impala36"},"content":"        .withNric(\"S2234567B\").withPhone(\"94822241\")","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"Impala36"},"content":"        .withDescription(\"She was molested by a Senior Investigations Officer \"","lastModifiedDate":"2021-03-08"},{"lineNumber":58,"author":{"gitId":"Impala36"},"content":"            + \"at the Jurong Police Division Headquarters in the interview room around 9.00pm.\")","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":60,"author":{"gitId":"Yiheng0410"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withDate(\"02-02-2021\")","lastModifiedDate":"2021-03-11"},{"lineNumber":61,"author":{"gitId":"Impala36"},"content":"        .withNric(\"S3234567B\").withPhone(\"94824272\")","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"Impala36"},"content":"        .withDescription(\"She was molested by a Senior Investigations Officer \"","lastModifiedDate":"2021-03-08"},{"lineNumber":63,"author":{"gitId":"Impala36"},"content":"            + \"at the Jurong Police Division Headquarters in the interview room around 9.00pm.\")","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":65,"author":{"gitId":"Yiheng0410"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withDate(\"02-02-2021\")","lastModifiedDate":"2021-03-11"},{"lineNumber":66,"author":{"gitId":"Impala36"},"content":"        .withNric(\"S1234567F\").withPhone(\"94824423\")","lastModifiedDate":"2021-03-08"},{"lineNumber":67,"author":{"gitId":"Impala36"},"content":"        .withDescription(\"This man is a construction site manager who flew a drone over the Istana, \"","lastModifiedDate":"2021-03-08"},{"lineNumber":68,"author":{"gitId":"Impala36"},"content":"            + \"beyond the boundary of his nearby work site, at 8.35am.\")","lastModifiedDate":"2021-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":72,"author":{"gitId":"linqing42"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\")","lastModifiedDate":"2021-02-16"},{"lineNumber":73,"author":{"gitId":"Impala36"},"content":"        .withNric(\"S9234567B\").withPhone(\"84824244\")","lastModifiedDate":"2021-03-08"},{"lineNumber":74,"author":{"gitId":"Impala36"},"content":"        .withDescription(\"This man is a construction site manager who flew a drone over the Istana, \"","lastModifiedDate":"2021-03-08"},{"lineNumber":75,"author":{"gitId":"Impala36"},"content":"            + \"beyond the boundary of his nearby work site, at 8.35am.\")","lastModifiedDate":"2021-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":77,"author":{"gitId":"linqing42"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\")","lastModifiedDate":"2021-02-16"},{"lineNumber":78,"author":{"gitId":"Impala36"},"content":"        .withNric(\"S9134567B\").withPhone(\"84821315\")","lastModifiedDate":"2021-03-08"},{"lineNumber":79,"author":{"gitId":"Impala36"},"content":"        .withDescription(\"She was molested by a Senior Investigations Officer \"","lastModifiedDate":"2021-03-08"},{"lineNumber":80,"author":{"gitId":"Impala36"},"content":"            + \"at the Jurong Police Division Headquarters in the interview room around 9.00pm.\")","lastModifiedDate":"2021-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":84,"author":{"gitId":"Yiheng0410"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withDate(VALID_DATE_AMY)","lastModifiedDate":"2021-03-03"},{"lineNumber":85,"author":{"gitId":"Yiheng0410"},"content":"        .withNric(VALID_NRIC_AMY).withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2021-03-03"},{"lineNumber":86,"author":{"gitId":"Impala36"},"content":"        .withAddress(VALID_ADDRESS_AMY).withDescription(VALID_DESCRIPTION_AMY)","lastModifiedDate":"2021-03-08"},{"lineNumber":87,"author":{"gitId":"Impala36"},"content":"        .withTags(VALID_TAG_CALLED).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":88,"author":{"gitId":"Yiheng0410"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withDate(VALID_DATE_BOB)","lastModifiedDate":"2021-03-03"},{"lineNumber":89,"author":{"gitId":"Yiheng0410"},"content":"        .withNric(VALID_NRIC_BOB).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-03-03"},{"lineNumber":90,"author":{"gitId":"Impala36"},"content":"        .withAddress(VALID_ADDRESS_BOB).withDescription(VALID_DESCRIPTION_BOB)","lastModifiedDate":"2021-03-08"},{"lineNumber":91,"author":{"gitId":"Impala36"},"content":"        .withTags(VALID_TAG_SEVERITY, VALID_TAG_CALLED).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":93,"author":{"gitId":"Impala36"},"content":"    private TypicalPersons() {","lastModifiedDate":"2021-03-08"},{"lineNumber":94,"author":{"gitId":"Impala36"},"content":"    } // prevents instantiation","lastModifiedDate":"2021-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"linqing42":6,"Yiheng0410":16,"Impala36":36,"-":50,"binbinhui":2}}]
